{
  "openapi": "3.0.1",
  "info": {
    "title": "Astra API",
    "description": "The Astra Control REST API reference documentation contains the details of all the REST API calls, including the endpoints, HTTP methods, input parameters, and responses. This complete reference is helpful when developing automation applications using the API.\nThe Astra REST API provides CRUD (Create-Read-Update-Delete) access to all the Astra Control resources except where noted for a specific resource category. This reference documentation applies to the 23.04.0 release of Astra Control Center and the 23.05.0 release of Astra Control Service.",
    "termsOfService": "https://www.netapp.com/media/10784-cloud-data-services-terms.pdf",
    "license": {
      "name": "Astra API License",
      "url": "https://docs.netapp.com/us-en/astra-automation/media/astra-api-license.pdf"
    },
    "version": "23.05.0"
  },
  "servers": [
    {
      "url": "{{.Server}}"
    }
  ],
  "security": [
    {
      "astra_api_token": []
    }
  ],
  "tags": [
    {
      "name": "Metrics",
      "description": "The Metrics API represents metrics associated with a given account."
    },
    {
      "name": "Account",
      "description": "The Account API represents isolated tenants in a multitenant system."
    },
    {
      "name": "Kubernetes API Resource",
      "description": "The Kubernetes API Resource API provides read-only access to Kubernetes API resources to filter the ones supported by Astra on a given cluster."
    },
    {
      "name": "Application Asset",
      "description": "The Application Asset API provides access to internal collections of state information used to manage applications."
    },
    {
      "name": "Application Backup",
      "description": "The Application Backup API enables a user to create and view backups of a managed application."
    },
    {
      "name": "AppMirror",
      "description": "The AppMirror API enables management of AppMirror relationships."
    },
    {
      "name": "Application Snapshot",
      "description": "The Application Snapshot API enables a user to create and view snapshots of a managed application."
    },
    {
      "name": "App",
      "description": "The App API represents Kubernetes applications, including those unmanaged by Astra."
    },
    {
      "name": "ASUP",
      "description": "The ASUP API provides access to ASUP resources in order to create and optionally upload the AutoSupport bundles."
    },
    {
      "name": "Bucket",
      "description": "The Bucket API provides access to buckets used to store application backups in Astra."
    },
    {
      "name": "Certificate",
      "description": "The Certificate App API represents admin-trusted certificates that are used for establishing outgoing connections."
    },
    {
      "name": "Cloud",
      "description": "The Cloud API provides access to cloud resources to allow clients to connect to specific clouds to manage clusters and applications."
    },
    {
      "name": "Cluster Node",
      "description": "The Cluster Node API provides access to the nodes associated with a cluster."
    },
    {
      "name": "Cluster",
      "description": "The Cluster API represents unmanaged Kubernetes clusters."
    },
    {
      "name": "Credential",
      "description": "The Credential API provides access to securely persist objects containing sensitive information."
    },
    {
      "name": "Entitlement",
      "description": "The Entitlement API represents which features or capacities are enabled by the licenses and subscriptions active for an account."
    },
    {
      "name": "Event",
      "description": "The Event API provides access to events occurring in the system."
    },
    {
      "name": "Execution Hook Override",
      "description": "The Execution Hook Override API allows a user to disable the preloaded \"netapp\" execution hooks for a specific application. (**NOTE BELOW API DEPRECATIONS**)"
    },
    {
      "name": "Execution Hook",
      "description": "The Execution Hook API enables simple management of execution hooks. Execution hooks contain additional configuration and references to a hook source resource."
    },
    {
      "name": "Feature",
      "description": "The Feature API provides read-only access to feature flag resources in order to determine which features are enabled or disabled in the system."
    },
    {
      "name": "Group",
      "description": "The Group API provides access to Astra group resources."
    },
    {
      "name": "Hook Source",
      "description": "The Hook Source API enables simple management of hook sources separate from the management of the execution hook resources. For example, a single hook source can be referenced by multiple execution hooks to avoid duplicate hook sources and allow a single API call to update one hook source, even if it is used by multiple execution hook resources."
    },
    {
      "name": "LDAP Group",
      "description": "The LDAP Group API provides read-only access to LDAP groups within the configured LDAP server."
    },
    {
      "name": "LDAP User",
      "description": "The LDAP User API provides read-only access to LDAP users within the configured LDAP server."
    },
    {
      "name": "License",
      "description": "The License API represents licenses loaded into the account."
    },
    {
      "name": "Managed Cluster",
      "description": "The Managed Cluster API represents managed Kubernetes clusters."
    },
    {
      "name": "Namespace",
      "description": "The Namespace API provides read-only access to namespace resources in order to describe namespaces associated with a given cluster."
    },
    {
      "name": "Notification",
      "description": "The Notification API provides per-user access to events with a notification destination."
    },
    {
      "name": "Package",
      "description": "The Package API represents installable software packages."
    },
    {
      "name": "Role Binding",
      "description": "The Role Binding API describes the relationships between the user-account pairs, or group-account pairs, along with the sets of permissions they are granted (roles)."
    },
    {
      "name": "Schedule",
      "description": "The Schedule API allows various scheduled data protection operations to be defined."
    },
    {
      "name": "Setting",
      "description": "An account setting is a collection of key/value pairs that are important for a known feature in an Astra account. The Setting API provides access to important information about an account setting."
    },
    {
      "name": "Storage Backend",
      "description": "The Storage Backend API provides access to representations of providers of storage services (storage backends) that can be used by managed clusters and applications."
    },
    {
      "name": "Storage Class",
      "description": "The Storage Class API describes storage classes known to a given cluster."
    },
    {
      "name": "Subscription",
      "description": "The Subscription API provides access to subscription resources in order to represent active subscriptions."
    },
    {
      "name": "Task",
      "description": "The Task App API provides access to managed task resources in order to represent long-running tasks."
    },
    {
      "name": "Token",
      "description": "The Token API enables users to create and manage API access tokens."
    },
    {
      "name": "Unread Notification",
      "description": "The Unread Notification API provides information on notifications that have not been read by a given user and to allow them to be marked as read."
    },
    {
      "name": "Upgrade",
      "description": "The Upgrade App API provides access to software components that are eligible for upgrade, and to initiate upgrades. The availability of upgrades is determined based on packages registered with the Packages API."
    },
    {
      "name": "User",
      "description": "The User API represents users who are able to interact with the system."
    },
    {
      "name": "Volume",
      "description": "The Volume API provides visibility into Kubernetes volumes associated with applications."
    }
  ],
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "description": "Indicates the desired values for the Account API resource to be created.",
        "parameters": [],
        "summary": "Creates a new account resource in the accounts root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Account API resource to be created.",
          "required": true,
          "content": {
            "application/astra-account+json": {
              "example": {
                "type": "application/astra-account",
                "version": "1.0",
                "name": "Testing 123"
              },
              "schema": {
                "$ref": "#/components/schemas/account_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created account resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-account+json": {
                "example": {
                  "type": "application/astra-account",
                  "version": "1.0",
                  "id": "666a3f38-d4fa-5b62-a391-a69029758d32",
                  "name": "fraught-pines",
                  "state": "pending",
                  "isEnabled": "false",
                  "enabledTimestamp": "2020-08-06T12:24:52.256624Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/account_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all account resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-accounts",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-account",
                      "version": "1.0",
                      "id": "70796606-79ba-480b-966c-e4c600fbf622",
                      "name": "fraught-pines",
                      "state": "active",
                      "isEnabled": "true",
                      "enabledTimestamp": "2020-08-06T12:24:52.256624Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "1723a17e-9fd1-4636-86e1-2ec9e04bce51"
                      }
                    },
                    {
                      "type": "application/astra-account",
                      "version": "1.0",
                      "id": "7976114d-35ec-48a7-ba31-22d8e94a8bb2",
                      "name": "sad-dino",
                      "state": "active",
                      "isEnabled": "true",
                      "enabledTimestamp": "2020-08-06T12:24:52.256624Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "1723a17e-9fd1-4636-86e1-2ec9e04bce51"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/account_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "description": "Returns the stored Account API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Retrieves a specific account resource",
        "responses": {
          "200": {
            "description": "Returns the stored Account API resource in the JSON response body.",
            "content": {
              "application/astra-account+json": {
                "example": {
                  "type": "application/astra-account",
                  "version": "1.0",
                  "id": "666a3f38-d4fa-5b62-a391-a69029758d32",
                  "name": "fraught-pines",
                  "state": "active",
                  "isEnabled": "true",
                  "enabledTimestamp": "2020-08-06T12:24:52.256624Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/account_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving the key values that are not user-modifiable.\n\n**Side Effects**\n* Changing \"isEnabled\" from \"false\" to \"true\" sets \"enabledTimestamp\" to the current time.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Modifies a specific account resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving the key values that are not user-modifiable.\n\n**Side Effects**\n* Changing \"isEnabled\" from \"false\" to \"true\" sets \"enabledTimestamp\" to the current time.",
          "required": true,
          "content": {
            "application/astra-account+json": {
              "example": {
                "type": "application/astra-account",
                "version": "1.0",
                "name": "frightened-pine"
              },
              "schema": {
                "$ref": "#/components/schemas/account_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the account resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "description": "Removes the specified Account API resource.\n\n**Side Effects**\n* \"deletePending\" is set to \"true\" and the account can no longer be accessed.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Deletes a specific account resource",
        "responses": {
          "204": {
            "description": "Indicates if the account resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/metrics": {
      "description": "Represents metrics. A user can use this to retreive metrics for accounts they have access to.\nThis endpoint returns all metrics for a given account.",
      "get": {
        "description": "Returns all metrics for the account",
        "summary": "Lists all metrics",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a OpenMetrics text document containing all metrics for the account.",
            "content": {
              "application/openmetrics-text": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/asups": {
      "post": {
        "tags": [
          "ASUP"
        ],
        "description": "Indicates the desired values for the ASUP API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new asup resource in the asups root collection",
        "requestBody": {
          "description": "Indicates the desired values for the ASUP API resource to be created.",
          "required": true,
          "content": {
            "application/astra-asup+json": {
              "example": {
                "type": "application/astra-asup",
                "version": "1.0",
                "upload": "true"
              },
              "schema": {
                "$ref": "#/components/schemas/asup_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created asup resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-asup+json": {
                "example": {
                  "type": "application/astra-asup",
                  "version": "1.0",
                  "id": "9950003f-a1c7-5ca7-8930-06eec25f60aa",
                  "creationState": "running",
                  "creationStateDetails": [],
                  "upload": "true",
                  "uploadState": "pending",
                  "uploadStateDetails": [],
                  "triggerType": "manual",
                  "dataWindowStart": "2020-08-05T12:24:00.000000Z",
                  "dataWindowEnd": "2020-08-06T12:24:52.000000Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/asup_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ASUP"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists all asup resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-asups",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-asup",
                      "version": "1.0",
                      "id": "80796606-79ba-480b-966c-e4c600fbf623",
                      "creationState": "completed",
                      "creationStateDetails": [],
                      "upload": "true",
                      "uploadState": "running",
                      "uploadStateDetails": [],
                      "triggerType": "manual",
                      "dataWindowStart": "2020-08-05T12:24:00.000000Z",
                      "dataWindowEnd": "2020-08-06T12:24:52.000000Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "1b32a508-cc6f-4f1b-809f-c42fd91b4848"
                      }
                    },
                    {
                      "type": "application/astra-asup",
                      "version": "1.0",
                      "id": "6503131d-8b36-4434-b34f-73661ae8100b",
                      "creationState": "completed",
                      "creationStateDetails": [],
                      "upload": "true",
                      "uploadState": "completed",
                      "uploadStateDetails": [],
                      "triggerType": "scheduled",
                      "dataWindowStart": "2020-08-04T13:30:00.000000Z",
                      "dataWindowEnd": "2020-08-05T13:30:00.000000Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-05T13:30:00.012321Z",
                        "modificationTimestamp": "2020-08-05T13:30:00.012321Z",
                        "createdBy": "1b32a508-cc6f-4f1b-809f-c42fd91b4848"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/asup_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/asups/{asup_id}": {
      "get": {
        "tags": [
          "ASUP"
        ],
        "description": "Returns the stored ASUP API resource in the JSON response body. If the AutoSupport bundle \"creationState\" is \"completed\" or \"partial\", the AutoSupport bundle can be downloaded by specifying an Accept header containing \"*/*\" or \"application/gzip\".",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "asup_id",
            "in": "path",
            "description": "ID of the asup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific asup resource",
        "responses": {
          "200": {
            "description": "Returns the stored ASUP API resource in the JSON response body. If the AutoSupport bundle \"creationState\" is \"completed\" or \"partial\", the AutoSupport bundle can be downloaded by specifying an Accept header containing \"*/*\" or \"application/gzip\".",
            "content": {
              "application/astra-asup+json": {
                "example": {
                  "type": "application/astra-asup",
                  "version": "1.0",
                  "id": "9950003f-a1c7-5ca7-8930-06eec25f60aa",
                  "creationState": "completed",
                  "creationStateDetails": [],
                  "upload": "false",
                  "triggerType": "manual",
                  "dataWindowStart": "2020-08-05T12:24:00.000000Z",
                  "dataWindowEnd": "2020-08-06T12:24:52.000000Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/asup_1.0_get_response_body"
                }
              },
              "application/gzip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/certificates": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "description": "Indicates the desired values for the Certificate API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new certificate resource in the certificates root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Certificate API resource to be created.",
          "required": true,
          "content": {
            "application/astra-certificate+json": {
              "example": {
                "type": "application/astra-certificate",
                "version": "1.0",
                "certUse": "rootCA",
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZyVENDQTVXZ0F3MVJHbnFGbUJSSWRyV1kwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t"
              },
              "schema": {
                "$ref": "#/components/schemas/certificate_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created certificate resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-certificate+json": {
                "example": {
                  "type": "application/astra-certificate",
                  "version": "1.0",
                  "id": "eb12225e-aded-584e-9da1-03881ce4cf7a",
                  "certUse": "rootCA",
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZyVENDQTVXZ0F3MVJHbnFGbUJSSWRyV1kwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                  "cn": "vcenter.example.com",
                  "isSelfSigned": "false",
                  "expiryTimestamp": "2022-03-23T16:48:38.5233461Z",
                  "trustState": "trusted",
                  "trustStateTransitions": [
                    {
                      "from": "untrusted",
                      "to": [
                        "trusted"
                      ]
                    },
                    {
                      "from": "trusted",
                      "to": [
                        "untrusted"
                      ]
                    }
                  ],
                  "trustStateDesired": "trusted",
                  "trustStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificate_1.0_post_response_body"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Certificate"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            },
            "example": "certUse%20eq%20'rootCA'"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,cn,isSelfSigned"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          }
        ],
        "summary": "Lists all certificate resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-certificates",
                  "version": "1.0",
                  "items": [
                    [
                      "f97f3441-075e-4f9b-9d1e-47f9f62a3fc4",
                      "prod.region-1.example.com",
                      "true"
                    ],
                    [
                      "5e365b4d-034f-4f13-95ef-d3a7fbc0df3d",
                      "prod.region-2.example.com",
                      "false"
                    ],
                    [
                      "11ceb350-1999-4b79-80a6-46a980a27856",
                      "prod.example.com",
                      "false"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificate_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/certificates/{certificate_id}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "description": "Returns the stored Certificate API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "certificate_id",
            "in": "path",
            "description": "ID of the certificate collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific certificate resource",
        "responses": {
          "200": {
            "description": "Returns the stored Certificate API resource in the JSON response body.",
            "content": {
              "application/astra-certificate+json": {
                "example": {
                  "type": "application/astra-certificate",
                  "version": "1.0",
                  "id": "eb12225e-aded-584e-9da1-03881ce4cf7a",
                  "certUse": "rootCA",
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZyVENDQTVXZ0F3MVJHbnFGbUJSSWRyV1kwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t",
                  "cn": "vcenter.example.com",
                  "expiryTimestamp": "2022-03-23T16:48:38.5233461Z",
                  "isSelfSigned": "true",
                  "trustState": "untrusted",
                  "trustStateTransitions": [
                    {
                      "from": "untrusted",
                      "to": [
                        "trusted"
                      ]
                    },
                    {
                      "from": "trusted",
                      "to": [
                        "untrusted"
                      ]
                    }
                  ],
                  "trustStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/certificate_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body.\n\n**Side Effects**\n* An updated CA certificate will be updated in the trust store.\n* If an existing trusted CA certificate becomes untrusted, it will be removed from the trust store.\n* If a certificate body is updated (\"cert\" field), the \"isSelfSigned\" indicator must be included to indicate the state of the new certificate. If the \"isSelfSigned\" indicator is not included in this case, the value will be set to \"false\".\n* If an update does not modify the certificate body (\"cert\" field), the \"isSelfSigned\" indicator is optional and the existing value will be retained if not provided.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "certificate_id",
            "in": "path",
            "description": "ID of the certificate collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific certificate resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body.\n\n**Side Effects**\n* An updated CA certificate will be updated in the trust store.\n* If an existing trusted CA certificate becomes untrusted, it will be removed from the trust store.\n* If a certificate body is updated (\"cert\" field), the \"isSelfSigned\" indicator must be included to indicate the state of the new certificate. If the \"isSelfSigned\" indicator is not included in this case, the value will be set to \"false\".\n* If an update does not modify the certificate body (\"cert\" field), the \"isSelfSigned\" indicator is optional and the existing value will be retained if not provided.",
          "required": true,
          "content": {
            "application/astra-certificate+json": {
              "example": {
                "type": "application/astra-certificate",
                "version": "1.0",
                "trustStateDesired": "trusted"
              },
              "schema": {
                "$ref": "#/components/schemas/certificate_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the certificate resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "description": "Removes the specified Certificate API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "certificate_id",
            "in": "path",
            "description": "ID of the certificate collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific certificate resource",
        "responses": {
          "204": {
            "description": "Indicates if the certificate resource was deleted."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/credentials": {
      "post": {
        "tags": [
          "Credential"
        ],
        "description": "Indicates the desired values for the Credential API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new credential resource in the credentials root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Credential API resource to be created.",
          "required": true,
          "content": {
            "application/astra-credential+json": {
              "example": {
                "type": "application/astra-credential",
                "version": "1.1",
                "name": "myCert",
                "keyStore": {
                  "privKey": "SGkh",
                  "pubKey": "VGhpcyBpcyBhbiBleGFtcGxlLg=="
                }
              },
              "schema": {
                "$ref": "#/components/schemas/credential_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created credential resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-credential+json": {
                "example": {
                  "type": "application/astra-credential",
                  "version": "1.1",
                  "id": "58e26f6a-a631-5122-8e0e-7afe306675c0",
                  "name": "myCert",
                  "valid": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Credential"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          }
        ],
        "summary": "Lists all credential resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-credentials",
                  "version": "1.1",
                  "items": [
                    [
                      "f97f3441-075e-4f9b-9d1e-47f9f62a3fc4",
                      "myCert"
                    ],
                    [
                      "5e365b4d-034f-4f13-95ef-d3a7fbc0df3d",
                      "kubeconfig"
                    ],
                    [
                      "11ceb350-1999-4b79-80a6-46a980a27856",
                      "password"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/credentials/{credential_id}": {
      "get": {
        "tags": [
          "Credential"
        ],
        "description": "Returns the stored Credential API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "ID of the credential collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific credential resource",
        "responses": {
          "200": {
            "description": "Returns the stored Credential API resource in the JSON response body.",
            "content": {
              "application/astra-credential+json": {
                "example": {
                  "type": "application/astra-credential",
                  "version": "1.1",
                  "id": "58e26f6a-a631-5122-8e0e-7afe306675c0",
                  "name": "myCert",
                  "valid": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/credential_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Credential"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving the key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "ID of the credential collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific credential resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving the key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-credential+json": {
              "example": {
                "type": "application/astra-credential",
                "version": "1.1",
                "name": "oldCert",
                "keyStore": {
                  "privKey": "SGkh",
                  "pubKey": "VGhpcyBpcyBhbiBleGFtcGxlLg=="
                }
              },
              "schema": {
                "$ref": "#/components/schemas/credential_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the credential resource was updated."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/32",
                  "title": "Unsupported content type",
                  "detail": "The response can't be returned in the requested format.",
                  "status": "406"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_32"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/38",
                  "title": "Precondition not met",
                  "detail": "The conditional headers aren't satisfied.",
                  "status": "412"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_38"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/39",
                  "title": "Credential exists",
                  "detail": "A credential of this type already exists.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_39"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/40",
                  "title": "Communication failed",
                  "detail": "Communication wasn't made with downstream services.",
                  "status": "502"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_40"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Credential"
        ],
        "description": "Removes the specified Credential API resource.\n\n**Side Effects**\n* If the credential being deleted is relied on by another resource or API, the deletion might cause unintended side effects within other APIs or the system as a whole.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "credential_id",
            "in": "path",
            "description": "ID of the credential collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific credential resource",
        "responses": {
          "204": {
            "description": "Indicates if the credential resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/entitlements": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "product,entitlementType,entitlementValue,allocation"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all entitlement resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-entitlements",
                  "version": "1.0",
                  "items": [
                    [
                      "Astra SDS",
                      "capacity",
                      "2",
                      null
                    ],
                    [
                      "Astra Enterprise",
                      "clusters",
                      "100",
                      "5e9fe8f7-4c54-441c-ac94-fd8451f9ca38"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/entitlement_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/entitlements/{entitlement_id}": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "description": "Returns the stored Entitlement API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "entitlement_id",
            "in": "path",
            "description": "ID of the entitlement collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific entitlement resource",
        "responses": {
          "200": {
            "description": "Returns the stored Entitlement API resource in the JSON response body.",
            "content": {
              "application/astra-entitlement+json": {
                "example": {
                  "type": "application/astra-entitlement",
                  "version": "1.0",
                  "id": "8bdafc19-bde6-5f45-9808-4893c845c9f5",
                  "product": "Astra SDS",
                  "productVersion": "1.0",
                  "entitlementType": "capacity",
                  "entitlementValue": "2",
                  "entitlementConsumption": "1",
                  "sourceLicense": "c8aa757a-5318-489f-8134-a2a1a6956a3e",
                  "validFromTimestamp": "2020-08-06T00:00:00.000000Z",
                  "validUntilTimestamp": "2021-08-06T00:00:00.000000Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/entitlement_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "description": "Indicates the desired values for the Group API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new group resource in the groups root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Group API resource to be created.",
          "required": true,
          "content": {
            "application/astra-group+json": {
              "example": {
                "type": "application/astra-group",
                "version": "1.0",
                "name": "engineering-group",
                "authProvider": "ldap",
                "authID": "CN=Engineering,CN=Groups,DC=example,DC=com"
              },
              "schema": {
                "$ref": "#/components/schemas/group_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created group resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-group+json": {
                "example": {
                  "type": "application/astra-group",
                  "version": "1.0",
                  "id": "d8560bb2-7c87-5331-a78d-4e870b22e9a9",
                  "name": "engineering-group",
                  "authProvider": "ldap",
                  "authID": "CN=Engineering,CN=Groups,DC=example,DC=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_post_response_body"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/14",
                  "title": "Unauthorized access",
                  "detail": "The user isn't enabled.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_14"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/32",
                  "title": "Unsupported content type",
                  "detail": "The response can't be returned in the requested format.",
                  "status": "406"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_32"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,authProvider,authID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all group resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-groups",
                  "version": "1.0",
                  "items": [
                    [
                      "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa",
                      "ldap",
                      "CN=Testers,CN=groups,DC=example,DC=com"
                    ],
                    [
                      "e324ec3a-706d-4f57-a95d-1d88c03e7b73",
                      "ldap",
                      "CN=Admins,CN=groups,DC=example,DC=com"
                    ],
                    [
                      "3070c84d-129b-4017-82a8-2c26a42dd77e",
                      "ldap",
                      "CN=SREs,CN=groups,DC=example,DC=com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Returns the stored Group API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific group resource",
        "responses": {
          "200": {
            "description": "Returns the stored Group API resource in the JSON response body.",
            "content": {
              "application/astra-group+json": {
                "example": {
                  "type": "application/astra-group",
                  "version": "1.0",
                  "id": "d8560bb2-7c87-5331-a78d-4e870b22e9a9",
                  "name": "engineering-group",
                  "authProvider": "ldap",
                  "authID": "CN=Engineering,CN=groups,DC=example,DC=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/12",
                  "title": "Invalid headers",
                  "detail": "The request headers are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific group resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-group+json": {
              "example": {
                "type": "application/astra-group",
                "version": "1.0",
                "name": "my-qa-group",
                "authID": "CN=QA,CN=Groups,DC=example,DC=com"
              },
              "schema": {
                "$ref": "#/components/schemas/group_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the group resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "description": "Removes the specified Group API resource.\n\n**Side Effects**\n* The following resources associated with the group are deleted:   \n* Role bindings referring to the group",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific group resource",
        "responses": {
          "204": {
            "description": "Indicates if the group resource was deleted."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/12",
                  "title": "Invalid headers",
                  "detail": "The request headers are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/roleBindings": {
      "post": {
        "tags": [
          "Role Binding"
        ],
        "description": "Indicates desired values for the Role Binding API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new roleBinding resource for a specific group",
        "requestBody": {
          "description": "Indicates desired values for the Role Binding API resource to be created.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "userID": "00000000-0000-0000-0000-000000000000",
                "groupID": "6f7f5bb3-1320-4861-bd8a-d3a4106d36b1",
                "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                "role": "viewer",
                "roleConstraints": [
                  "*"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created roleBinding resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "group",
                  "userID": "00000000-0000-0000-0000-000000000000",
                  "groupID": "6f7f5bb3-1320-4861-bd8a-d3a4106d36b1",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "accountID,userID,role"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the roleBinding resources associated with a specific group",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-roleBindings",
                  "version": "1.1",
                  "items": [
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "4c27d25a-9edb-4e85-9438-48dc8e917231",
                      "viewer"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "dc40a13f-e9b3-4cf5-900f-58de32174390",
                      "owner"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "c38abd8d-7dae-4659-8382-2e74a58738ba",
                      "owner"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/roleBindings/{roleBinding_id}": {
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific roleBinding resource",
        "responses": {
          "200": {
            "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Binding"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific roleBinding resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "role": "member",
                "roleConstraints": [
                  "namespaces:id='c832e1dc-d7c3-464e-9c62-47bf91c46ce8'"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Binding"
        ],
        "description": "Removes the specified Role Binding API resource.\n\n**Side Effects**\n* Deleting the last role-binding associated with a user with authProvider as 'local', or 'cloud-central' (not ldap) triggers the deletion of the user.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific roleBinding resource",
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Indicates desired values for the User API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new user resource for a specific group",
        "requestBody": {
          "description": "Indicates desired values for the User API resource to be created.",
          "required": true,
          "content": {
            "application/astra-user+json": {
              "example": {
                "type": "application/astra-user",
                "version": "1.2",
                "firstName": "John",
                "lastName": "Doe",
                "email": "jdoe@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/user_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created user resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-user+json": {
                "example": {
                  "type": "application/astra-user",
                  "version": "1.2",
                  "id": "5bad8e04-e2fd-5c43-98d7-300580993f49",
                  "state": "pending",
                  "isEnabled": "true",
                  "authID": "HteLK3hk28sdbDLKHReB",
                  "authProvider": "cloud-central",
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "jdoe@example.com",
                  "sendWelcomeEmail": "true",
                  "lastActTimestamp": "2020-08-05T14:24:54.128427Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,email"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the user resources associated with a specific group",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-users",
                  "version": "1.2",
                  "items": [
                    [
                      "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa",
                      "jdoe@example.com"
                    ],
                    [
                      "e324ec3a-706d-4f57-a95d-1d88c03e7b73",
                      "ssmith@example.com"
                    ],
                    [
                      "3070c84d-129b-4017-82a8-2c26a42dd77e",
                      "wjohns@example.com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns the stored User API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific user resource",
        "responses": {
          "200": {
            "description": "Returns the stored User API resource in the JSON response body.",
            "content": {
              "application/astra-user+json": {
                "example": {
                  "type": "application/astra-user",
                  "version": "1.2",
                  "id": "5bad8e04-e2fd-5c43-98d7-300580993f49",
                  "state": "active",
                  "isEnabled": "true",
                  "authID": "HteLK3hk28sdbDLKHReB",
                  "authProvider": "cloud-central",
                  "firstName": "John",
                  "lastName": "Doe",
                  "companyName": "NetApp, Inc.",
                  "email": "jdoe@example.com",
                  "phone": "408-555-22222",
                  "postalAddress": {
                    "addressCountry": "US",
                    "addressLocality": "Sunnyvale",
                    "addressRegion": "California",
                    "postalCode": "94089",
                    "streetAddress1": "495 East Java Drive"
                  },
                  "sendWelcomeEmail": "true",
                  "enableTimestamp": "2020-08-05T14:24:54.128427Z",
                  "lastActTimestamp": "2020-08-05T14:24:54.128427Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific user resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-user+json": {
              "example": {
                "type": "application/astra-user",
                "version": "1.2",
                "firstName": "John",
                "lastName": "Dale",
                "email": "jdale@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/user_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the user resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Removes the specified User API resource.\n\n**Side Effects**\n* The following resources associated with the user are deleted: notificationMarks, tokens, and all roleBindings referring to the user.  \n* For a user with \"authProvider\" as \"local\", the linked credential with \"keyType\" as \"passwordHash\" will also be deleted.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific user resource",
        "responses": {
          "204": {
            "description": "Indicates if the user resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/roleBindings": {
      "post": {
        "tags": [
          "Role Binding"
        ],
        "description": "Indicates desired values for the Role Binding API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new roleBinding resource for a specific user",
        "requestBody": {
          "description": "Indicates desired values for the Role Binding API resource to be created.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                "role": "viewer",
                "roleConstraints": [
                  "*"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created roleBinding resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "accountID,userID,role"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the roleBinding resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-roleBindings",
                  "version": "1.1",
                  "items": [
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "4c27d25a-9edb-4e85-9438-48dc8e917231",
                      "viewer"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "dc40a13f-e9b3-4cf5-900f-58de32174390",
                      "owner"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "c38abd8d-7dae-4659-8382-2e74a58738ba",
                      "owner"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/roleBindings/{roleBinding_id}": {
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific roleBinding resource",
        "responses": {
          "200": {
            "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Binding"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific roleBinding resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "role": "member",
                "roleConstraints": [
                  "namespaces:id='c832e1dc-d7c3-464e-9c62-47bf91c46ce8'"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Binding"
        ],
        "description": "Removes the specified Role Binding API resource.\n\n**Side Effects**\n* Deleting the last role-binding associated with a user with authProvider as 'local', or 'cloud-central' (not ldap) triggers the deletion of the user.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific roleBinding resource",
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/tokens": {
      "post": {
        "tags": [
          "Token"
        ],
        "description": "Indicates desired values for the Token API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new token resource for a specific user",
        "requestBody": {
          "description": "Indicates desired values for the Token API resource to be created.",
          "required": true,
          "content": {
            "application/astra-token+json": {
              "example": {
                "type": "application/astra-token",
                "version": "1.0",
                "name": "Snapshot Script"
              },
              "schema": {
                "$ref": "#/components/schemas/token_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created token resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-token+json": {
                "example": {
                  "type": "application/astra-token",
                  "version": "1.0",
                  "id": "822fab12-c224-5d1f-8118-5fb5d2def8b9",
                  "name": "Snapshot Script",
                  "userID": "09f8933c-ad74-4f4e-8ef5-1ffaa0fb8e9b",
                  "token": "QSBKV1QgVG9rZW4gd291bGQgZ28gaGVyZS4=",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Token"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the token resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-tokens",
                  "version": "1.0",
                  "items": [
                    [
                      "4e99da96-152e-4aee-9207-4b6d04d2238d",
                      "Snapshot Script"
                    ],
                    [
                      "43ab09af-e558-4b1b-a6d5-49df7c39f22c",
                      "Snapshot Taker"
                    ],
                    [
                      "cca48856-9e25-4170-b49a-d32265c5e5f1",
                      "Volume Checker"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/tokens/{token_id}": {
      "get": {
        "tags": [
          "Token"
        ],
        "description": "Returns the stored Token API resource in the JSON response body.\n* The \"token\" key/value will not be returned.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific token resource",
        "responses": {
          "200": {
            "description": "Returns the stored Token API resource in the JSON response body.\n* The \"token\" key/value will not be returned.",
            "content": {
              "application/astra-token+json": {
                "example": {
                  "type": "application/astra-token",
                  "version": "1.0",
                  "id": "822fab12-c224-5d1f-8118-5fb5d2def8b9",
                  "name": "Snapshot Script",
                  "userID": "09f8933c-ad74-4f4e-8ef5-1ffaa0fb8e9b",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Token"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific token resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-token+json": {
              "example": {
                "type": "application/astra-token",
                "version": "1.0",
                "name": "New Token Name"
              },
              "schema": {
                "$ref": "#/components/schemas/token_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the token resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Token"
        ],
        "description": "Removes the specified Token API resource.\n\n**Side Effects**\n* The corresponding API token credential is removed from the credential service as a side effect.  ",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific token resource",
        "responses": {
          "204": {
            "description": "Indicates if the token resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/unreadNotifications": {
      "get": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "notificationID,sequenceCount"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            },
            "example": "2"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            },
            "example": "count%20desc"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            },
            "example": "true"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the unreadNotification resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-unreadNotifications",
                  "version": "1.0",
                  "items": [
                    [
                      "4080cf5f-2261-4130-b8fb-8432e2e553e6",
                      48923
                    ],
                    [
                      "1b4e89f1-2e70-4a08-a015-e7064b0fb703",
                      47345
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/unreadNotification_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/groups/{group_id}/users/{user_id}/unreadNotifications/{unreadNotification_id}": {
      "get": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Returns the stored Unread Notification API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "unreadNotification_id",
            "in": "path",
            "description": "ID of the unreadNotification collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific unreadNotification resource",
        "responses": {
          "200": {
            "description": "Returns the stored Unread Notification API resource in the JSON response body.",
            "content": {
              "application/astra-unreadNotification+json": {
                "example": {
                  "type": "application/astra-unreadNotification",
                  "version": "1.0",
                  "id": "10df997b-629e-50f8-bc5f-a18b9a4ac5f6",
                  "notificationID": "4080cf5f-2261-4130-b8fb-8432e2e553e6",
                  "sequenceCount": 48923,
                  "severity": "warning",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/unreadNotification_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Removes the specified Unread Notification API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "unreadNotification_id",
            "in": "path",
            "description": "ID of the unreadNotification collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific unreadNotification resource",
        "responses": {
          "204": {
            "description": "Indicates if the unreadNotification resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/executionHooks": {
      "post": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Indicates the desired values for the Execution Hook API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new executionHook resource in the executionHooks root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Execution Hook API resource to be created.",
          "required": true,
          "content": {
            "application/astra-executionHook+json": {
              "example": {
                "type": "application/astra-executionHook",
                "version": "1.2",
                "name": "Payroll",
                "hookType": "custom",
                "action": "snapshot",
                "stage": "pre",
                "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                "arguments": [
                  "freeze"
                ],
                "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                "enabled": "true",
                "description": "Payroll production hook"
              },
              "schema": {
                "$ref": "#/components/schemas/executionHook_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created executionHook resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-executionHook+json": {
                "example": {
                  "type": "application/astra-executionHook",
                  "version": "1.2",
                  "id": "946e60cb-980b-5374-9e6e-9fe1f6780352",
                  "name": "Payroll",
                  "hookType": "custom",
                  "matchingCriteria": [],
                  "action": "snapshot",
                  "stage": "pre",
                  "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                  "arguments": [
                    "freeze"
                  ],
                  "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                  "enabled": "true",
                  "description": "Payroll production hook",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_162"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all executionHook resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-executionHooks",
                  "version": "1.2",
                  "items": [
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "4c64792c-806b-4457-938d-8e325a37c593",
                      "name": "Payroll",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerImage",
                          "value": "payroll"
                        },
                        {
                          "type": "podName",
                          "value": "^payroll-master"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                      "arguments": [
                        "freeze"
                      ],
                      "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                      "enabled": "true",
                      "description": "Payroll production hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "Order Processing",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerName",
                          "value": "^order-processing$"
                        },
                        {
                          "type": "podLabel",
                          "value": "^app=master$|^app=data$"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "63f4d6fd-b7f0-4eaa-9890-0b11123604b1",
                      "arguments": [
                        "freeze"
                      ],
                      "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "NetApp Postgres Hook",
                      "hookType": "netapp",
                      "matchingCriteria": [
                        {
                          "type": "podName",
                          "value": "^postgres"
                        },
                        {
                          "type": "containerImage",
                          "value": "3.8"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "3601ed09-1a74-4156-a1bd-9cb7144bac0e",
                      "arguments": [
                        "freeze"
                      ],
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "Redis Hook",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerName",
                          "value": "^redis-01$"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "3601ed09-1a74-4156-a1bd-9cb7144bac0e",
                      "arguments": [
                        "freeze"
                      ],
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/executionHooks/{executionHook_id}": {
      "get": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Returns the stored Execution Hook API resource in the JSON response body. Also populates matchingContainers and matchingImages based on the current matchingCriteria and the defined app.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific executionHook resource",
        "responses": {
          "200": {
            "description": "Returns the stored Execution Hook API resource in the JSON response body. Also populates matchingContainers and matchingImages based on the current matchingCriteria and the defined app.",
            "content": {
              "application/astra-executionHook+json": {
                "example": {
                  "type": "application/astra-executionHook",
                  "version": "1.2",
                  "id": "946e60cb-980b-5374-9e6e-9fe1f6780352",
                  "name": "Payroll",
                  "hookType": "custom",
                  "matchingCriteria": [
                    {
                      "type": "podLabel",
                      "value": "^env=production$"
                    },
                    {
                      "type": "containerName",
                      "value": "^payroll-master"
                    }
                  ],
                  "matchingImages": [
                    "docker.io/bitnami/payroll:3.7.8",
                    "docker.io/bitnami/payroll:4.1.2"
                  ],
                  "matchingContainers": [
                    {
                      "namespaceName": "payroll-east",
                      "podName": "payroll-release3-7",
                      "podLabels": [
                        {
                          "name": "env",
                          "value": "production"
                        },
                        {
                          "name": "app.kubernetes.io/managed-by",
                          "value": "Helm"
                        }
                      ],
                      "containerName": "payroll-master-0",
                      "containerImage": "docker.io/bitnami/payroll:3.7.8"
                    },
                    {
                      "namespaceName": "payroll-east",
                      "podName": "payroll-release3-7",
                      "podLabels": [
                        {
                          "name": "env",
                          "value": "production"
                        },
                        {
                          "name": "app.kubernetes.io/managed-by",
                          "value": "Helm"
                        }
                      ],
                      "containerName": "payroll-master-1",
                      "containerImage": "docker.io/bitnami/payroll:3.7.8"
                    }
                  ],
                  "action": "snapshot",
                  "stage": "pre",
                  "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                  "arguments": [
                    "freeze"
                  ],
                  "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                  "enabled": "true",
                  "description": "Payroll production hook",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing execution hook will impact any future actions of applications that use the updated execution hook.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific executionHook resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing execution hook will impact any future actions of applications that use the updated execution hook.",
          "required": true,
          "content": {
            "application/astra-executionHook+json": {
              "example": {
                "type": "application/astra-executionHook",
                "version": "1.2",
                "arguments": [
                  "freeze",
                  "10"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/executionHook_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the executionHook resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_162"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Removes the specified Execution Hook API resource.\n\n**Side Effects**\n* The deleted execution hook will no longer run as part of future actions.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific executionHook resource",
        "responses": {
          "204": {
            "description": "Indicates if the executionHook resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/events": {
      "get": {
        "tags": [
          "Event"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,summary"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all event resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-events",
                  "version": "1.4",
                  "items": [
                    [
                      "4f8273ee-883d-47f0-a512-9e27b6285f20",
                      "Discovering Applications in Cluster"
                    ],
                    [
                      "1cdd26dc-5eb0-4cf4-a0c1-39a9b83720e1",
                      "Application Discovered"
                    ],
                    [
                      "2064d1c1-4bc6-466e-9c30-b941a11be16a",
                      "Application Discovery Failed"
                    ],
                    [
                      "4325f971-ca9c-4a52-bc9a-da6ec62e6bfe",
                      "Application Discovered"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/event_1.4_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/events/{event_id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "description": "Returns the stored Event API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "event_id",
            "in": "path",
            "description": "ID of the event collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific event resource",
        "responses": {
          "200": {
            "description": "Returns the stored Event API resource in the JSON response body.",
            "content": {
              "application/astra-event+json": {
                "example": {
                  "type": "application/astra-event",
                  "version": "1.4",
                  "id": "c32df10b-8cfb-5a1e-9510-2a262b476009",
                  "name": "astra.app.discovery.failed",
                  "sequenceCount": 48923,
                  "summary": "Application Discovery Failed",
                  "eventTime": "2020-08-06T12:24:51.846543Z",
                  "source": "composite-compute",
                  "resourceID": "f670bf11-8850-44bd-b330-815af6186a06",
                  "additionalResourceIDs": [
                    "84dfee99-b7b2-46d2-9021-0a1a9a5df1d6",
                    "abb32003-07b9-49b1-9938-1cf6d2f33566"
                  ],
                  "resourceType": "application/astra-app",
                  "correlationID": "3c603442-cfca-4af9-9f1b-40dde5c7a806",
                  "severity": "warning",
                  "class": "user",
                  "description": "Discovering the application 'mysql' was unsuccessful. K8s error 442. Application marked in state 'error'.",
                  "resourceURI": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/managedClusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/apps/f670bf11-8850-44bd-b330-815af6186a06",
                  "resourceCollectionURL": [
                    "https://www.astra.io/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/f8b58091-4b9c-4c64-9b40-018dbaf7c5de/apps/f670bf11-8850-44bd-b330-815af6186a06",
                    "https://www.astra.io/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/923708f8-0435-45b5-8c00-fbdef3ffaf25/apps/f670bf11-8850-44bd-b330-815af6186a06"
                  ],
                  "userID": "abda967f-cd2c-4237-908e-99266648c553",
                  "accountID": "f126d214-bccf-4558-86b4-2137a41e734f",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/event_1.4_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/features": {
      "get": {
        "tags": [
          "Feature"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          }
        ],
        "summary": "Lists all feature resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-features",
                  "version": "1.1",
                  "items": [
                    {
                      "type": "application/astra-feature",
                      "version": "1.0",
                      "id": "c1d4d2f7-9b30-45a2-9657-8b24f17a4fd1",
                      "name": "astra.account.rbac",
                      "isEnabled": "true",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2021-02-19T22:10:22.448274Z",
                        "modificationTimestamp": "2021-02-19T22:10:22.448274Z",
                        "createdBy": "c9550bbb-e70b-4578-8504-07397f875bcb"
                      }
                    },
                    {
                      "type": "application/astra-feature",
                      "version": "1.0",
                      "id": "85c693cd-2f89-4944-982a-e885301162bd",
                      "name": "astra.account.smtp",
                      "isEnabled": "false",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2021-02-19T22:10:22.448274Z",
                        "modificationTimestamp": "2021-02-19T22:10:22.448274Z",
                        "createdBy": "c9550bbb-e70b-4578-8504-07397f875bcb"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/feature_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/features/{feature_id}": {
      "get": {
        "tags": [
          "Feature"
        ],
        "description": "Returns the stored Feature API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "feature_id",
            "in": "path",
            "description": "ID of the feature collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific feature resource",
        "responses": {
          "200": {
            "description": "Returns the stored Feature API resource in the JSON response body.",
            "content": {
              "application/astra-feature+json": {
                "example": {
                  "type": "application/astra-feature",
                  "version": "1.1",
                  "id": "2d960b50-10be-5a19-a3ef-80bd08c12a89",
                  "name": "astra.account.rbac",
                  "isEnabled": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/feature_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/hookSources": {
      "post": {
        "tags": [
          "Hook Source"
        ],
        "description": "Indicates the desired values for the Hook Source API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new hookSource resource in the hookSources root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Hook Source API resource to be created.",
          "required": true,
          "content": {
            "application/astra-hookSource+json": {
              "example": {
                "type": "application/astra-hookSource",
                "version": "1.0",
                "name": "Payroll script",
                "sourceType": "script",
                "source": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k",
                "description": "Pre and post hook script for payroll"
              },
              "schema": {
                "$ref": "#/components/schemas/hookSource_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created hookSource resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-hookSource+json": {
                "example": {
                  "type": "application/astra-hookSource",
                  "version": "1.0",
                  "id": "fae6dfbb-ecb8-58ff-a116-6357eb7c956a",
                  "name": "Payroll script",
                  "private": "false",
                  "preloaded": "false",
                  "sourceType": "script",
                  "source": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k",
                  "sourceMD5Checksum": "b1a4b8b0144c3f6be553b626130ca145",
                  "description": "Pre and post hook script for payroll",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/hookSource_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Hook Source"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all hookSource resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-hookSources",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-hookSource",
                      "version": "1.0",
                      "id": "2d6154dd-6863-4a26-8017-6be092b8b0bd",
                      "name": "Payroll script",
                      "private": "false",
                      "preloaded": "false",
                      "sourceType": "script",
                      "source": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k",
                      "sourceMD5Checksum": "b1a4b8b0144c3f6be553b626130ca145",
                      "description": "Pre and post hook script for payroll",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-hookSource",
                      "version": "1.0",
                      "id": "b71c6793-aa9b-4654-92ef-60663a0aedac",
                      "name": "Payroll script",
                      "private": "true",
                      "preloaded": "false",
                      "sourceType": "script",
                      "sourceMD5Checksum": "6469094cb279f6d91358bc5062d15baf",
                      "description": "Pre and post hook script for payroll",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-08T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-08T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-hookSource",
                      "version": "1.0",
                      "id": "682fe9d2-52d2-4c30-bcec-ecefddde359c",
                      "name": "NetApp preloaded ",
                      "private": "true",
                      "preloaded": "false",
                      "sourceType": "script",
                      "sourceMD5Checksum": "7864495443c1087104520a320a2225c9",
                      "description": "NetApp Postgres preloaded snapshot pre and post",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-07-12T12:24:52.256624Z",
                        "modificationTimestamp": "2020-07-12T12:24:52.256624Z",
                        "createdBy": "4428cfd4-27fd-4248-9f49-bd3a02043ab8"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/hookSource_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/hookSources/{hookSource_id}": {
      "get": {
        "tags": [
          "Hook Source"
        ],
        "description": "Returns the stored Hook Source API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "hookSource_id",
            "in": "path",
            "description": "ID of the hookSource collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific hookSource resource",
        "responses": {
          "200": {
            "description": "Returns the stored Hook Source API resource in the JSON response body.",
            "content": {
              "application/astra-hookSource+json": {
                "example": {
                  "type": "application/astra-hookSource",
                  "version": "1.0",
                  "id": "fae6dfbb-ecb8-58ff-a116-6357eb7c956a",
                  "name": "Payroll script",
                  "private": "false",
                  "preloaded": "false",
                  "sourceType": "script",
                  "source": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k",
                  "sourceMD5Checksum": "b1a4b8b0144c3f6be553b626130ca145",
                  "description": "Pre and post hook script for payroll",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/hookSource_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hook Source"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing source hook will immediately impact any future snapshots of applications that have matching execution hooks that use the updated source hook resource.\n* The MD5 checksum is computed on the value of the \"source\" field and set as the value of the \"sourceMD5Checksum\" field.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "hookSource_id",
            "in": "path",
            "description": "ID of the hookSource collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific hookSource resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing source hook will immediately impact any future snapshots of applications that have matching execution hooks that use the updated source hook resource.\n* The MD5 checksum is computed on the value of the \"source\" field and set as the value of the \"sourceMD5Checksum\" field.",
          "required": true,
          "content": {
            "application/astra-hookSource+json": {
              "example": {
                "type": "application/astra-hookSource",
                "version": "1.0",
                "source": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k",
                "description": "Pre and post hook script for order processing v2"
              },
              "schema": {
                "$ref": "#/components/schemas/hookSource_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the hookSource resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_71"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hook Source"
        ],
        "description": "Removes the specified Hook Source API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "hookSource_id",
            "in": "path",
            "description": "ID of the hookSource collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific hookSource resource",
        "responses": {
          "204": {
            "description": "Indicates if the hookSource resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_71"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_72"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/licenses": {
      "post": {
        "tags": [
          "License"
        ],
        "description": "Indicates the desired values for the License API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new license resource in the licenses root collection",
        "requestBody": {
          "description": "Indicates the desired values for the License API resource to be created.",
          "required": true,
          "content": {
            "application/astra-license+json": {
              "example": {
                "type": "application/astra-license",
                "version": "1.0",
                "allocation": "4185d09b-6687-4801-a832-c005a9d94f41",
                "licenseText": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
              },
              "schema": {
                "$ref": "#/components/schemas/license_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created license resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-license+json": {
                "example": {
                  "type": "application/astra-license",
                  "version": "1.0",
                  "id": "6db53b32-8417-5d3c-8ef0-552fc602c78f",
                  "allocation": "4185d09b-6687-4801-a832-c005a9d94f41",
                  "hostID": "99132549-e0c2-4203-9d1e-598628b4ff9b",
                  "isEvaluation": "false",
                  "licenseProtocol": "ASTRASDS-ENT-SUBS",
                  "licenseText": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9",
                  "validFromTimestamp": "2020-08-06T00:00:00.000000Z",
                  "validUntilTimestamp": "2021-08-06T00:00:00.000000Z",
                  "product": "Astra Control Center",
                  "productVersion": "1.0",
                  "productSN": "320000046",
                  "features": "ASTRA-ENT-STD",
                  "capacity": "4000",
                  "capacity2": "0",
                  "addons": [
                    {
                      "startDate": "2020-08-06T00:00:00.000000Z",
                      "endDate": "2021-08-06T00:00:00.000000Z",
                      "capacity": "4000",
                      "licenseProtocol": "ASTRA-ENT-STD",
                      "features": "p-nfs,dm-storage-policy-based-pvs-for-k8s,dm-spbm-based-vvols-for-vms,dm-storage-efficiency,dm-data-at-rest-encryption"
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/license_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_20"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_21"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_22"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_23"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "License"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,product"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all license resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-licenses",
                  "version": "1.0",
                  "items": [
                    [
                      "c8aa757a-5318-489f-8134-a2a1a6956a3e",
                      "Astra SDS"
                    ],
                    [
                      "0f7cc03d-9afc-4192-af7f-b29ab24f8f2a",
                      "Astra Enterprise"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/license_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/licenses/{license_id}": {
      "get": {
        "tags": [
          "License"
        ],
        "description": "Returns the stored License API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "license_id",
            "in": "path",
            "description": "ID of the license collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific license resource",
        "responses": {
          "200": {
            "description": "Returns the stored License API resource in the JSON response body.",
            "content": {
              "application/astra-license+json": {
                "example": {
                  "type": "application/astra-license",
                  "version": "1.0",
                  "id": "6db53b32-8417-5d3c-8ef0-552fc602c78f",
                  "allocation": "4185d09b-6687-4801-a832-c005a9d94f41",
                  "hostID": "99132549-e0c2-4203-9d1e-598628b4ff9b",
                  "isEvaluation": "false",
                  "licenseProtocol": "ASTRASDS-ENT-SUBS",
                  "licenseText": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9",
                  "validFromTimestamp": "2020-08-06T00:00:00.000000Z",
                  "validUntilTimestamp": "2021-08-06T00:00:00.000000Z",
                  "product": "Astra Control Center",
                  "productVersion": "1.0",
                  "productSN": "320000046",
                  "features": "ASTRA-ENT-STD",
                  "capacity": "4000",
                  "capacity2": "0",
                  "addons": [
                    {
                      "startDate": "2020-08-06T00:00:00.000000Z",
                      "endDate": "2021-08-06T00:00:00.000000Z",
                      "capacity": "4000",
                      "licenseProtocol": "ASTRA-ENT-STD",
                      "features": "p-nfs,dm-storage-policy-based-pvs-for-k8s,dm-spbm-based-vvols-for-vms,dm-storage-efficiency,dm-data-at-rest-encryption"
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/license_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "License"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Entitlements are recalculated to add or merge the license entitlements visible through the Entitlement API.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "license_id",
            "in": "path",
            "description": "ID of the license collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific license resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Entitlements are recalculated to add or merge the license entitlements visible through the Entitlement API.",
          "required": true,
          "content": {
            "application/astra-license+json": {
              "example": {
                "type": "application/astra-license",
                "version": "1.0",
                "allocation": "4185d09b-6687-4801-a832-c005a9d94f41",
                "licenseText": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
              },
              "schema": {
                "$ref": "#/components/schemas/license_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the license resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "License"
        ],
        "description": "Removes the specified License API resource. The automatically installed evaluation license cannot be deleted.\n\n**Side Effects**\n* Entitlements are recalculated to remove the license entitlements visible through the Entitlement API. If the automatically installed evaluation license was present on this system before deletion, it is reapplied to the system automatically.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "license_id",
            "in": "path",
            "description": "ID of the license collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific license resource",
        "responses": {
          "204": {
            "description": "Indicates if the license resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_163"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,summary"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            },
            "example": "4"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            },
            "example": "true"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all notification resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-notifications",
                  "version": "1.3",
                  "items": [
                    [
                      "4f8273ee-883d-47f0-a512-9e27b6285f20",
                      "Discovering Applications in Cluster"
                    ],
                    [
                      "1cdd26dc-5eb0-4cf4-a0c1-39a9b83720e1",
                      "Application Discovered"
                    ],
                    [
                      "275a8c6f-ebf6-4d10-b671-77d1b8c7c0a6",
                      "Application Discovery Failed"
                    ],
                    [
                      "4325f971-ca9c-4a52-bc9a-da6ec62e6bfe",
                      "Application Discovered"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification_1.3_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/notifications/{notification_id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "description": "Returns the stored Notification API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "notification_id",
            "in": "path",
            "description": "ID of the notification collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific notification resource",
        "responses": {
          "200": {
            "description": "Returns the stored Notification API resource in the JSON response body.",
            "content": {
              "application/astra-notification+json": {
                "example": {
                  "type": "application/astra-notification",
                  "version": "1.3",
                  "id": "03c645d6-75f0-59b0-95f2-862ae344ea27",
                  "name": "astra.app.discovery.failed",
                  "sequenceCount": 48923,
                  "summary": "Application Discovery Failed",
                  "eventTime": "2020-08-06T12:24:51.846543Z",
                  "source": "composite-compute",
                  "resourceID": "f670bf11-8850-44bd-b330-815af6186a06",
                  "additionalResourceIDs": [
                    "84dfee99-b7b2-46d2-9021-0a1a9a5df1d6",
                    "abb32003-07b9-49b1-9938-1cf6d2f33566"
                  ],
                  "resourceType": "application/astra-app",
                  "correlationID": "3c603442-cfca-4af9-9f1b-40dde5c7a806",
                  "severity": "warning",
                  "class": "user",
                  "description": "Discovering the application 'mysql' was unsuccessful. K8s error 442. Application marked in state 'error'.",
                  "destinations": [
                    "notification"
                  ],
                  "resourceURI": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/managedClusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/apps/f670bf11-8850-44bd-b330-815af6186a06",
                  "resourceCollectionURL": [
                    "https://www.astra.io/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/f8b58091-4b9c-4c64-9b40-018dbaf7c5de/apps/f670bf11-8850-44bd-b330-815af6186a06",
                    "https://www.astra.io/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/923708f8-0435-45b5-8c00-fbdef3ffaf25/apps/f670bf11-8850-44bd-b330-815af6186a06"
                  ],
                  "userID": "abda967f-cd2c-4237-908e-99266648c553",
                  "accountID": "f126d214-bccf-4558-86b4-2137a41e734f",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/notification_1.3_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/packages": {
      "post": {
        "tags": [
          "Package"
        ],
        "description": "Indicates desired values for the Package API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new package resource in the packages root collection",
        "requestBody": {
          "description": "Indicates desired values for the Package API resource to be created.",
          "required": true,
          "content": {
            "application/astra-package+json": {
              "example": {
                "type": "application/astra-package",
                "version": "1.0",
                "packageName": "acc",
                "packageVersion": "22.09.1",
                "packageType": "patch",
                "severityLevel": "recommended",
                "images": [
                  {
                    "imagePath": "/globalcicd/acc",
                    "imageName": "storage-provider",
                    "imageTag": "1.3.116",
                    "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e3364456781a161f1be239853dae33deafc"
                  },
                  {
                    "imagePath": "/globalcicd/acc",
                    "imageName": "storage-backend-metrics",
                    "imageTag": "1.3.45",
                    "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e3364456781a161f1be239853dae33deafc"
                  },
                  {
                    "imagePath": "/globalcicd/acc",
                    "imageName": "credentials",
                    "imageTag": "1.3.45",
                    "imageDigest": "sha256:2e04d178815537b0ad8c322445654e33642da781a161f1be239853dae33deafc"
                  }
                ],
                "files": [
                  {
                    "fileName": "astra_control_center_min.yaml",
                    "fileIdentifier": "astra_min",
                    "fileMediaType": "application/x-yaml",
                    "fileContents": "VGhpcyBpcyBzdXBwb3NlZCB0byBiZSBhIGNvbXByZXNzZWQgZmlsZSBjb250ZW50"
                  }
                ],
                "dependencies": [
                  {
                    "componentName": "acc",
                    "componentMinVersion": "22.04.29"
                  },
                  {
                    "componentName": "kubernetes",
                    "componentMinVersion": "v1.19.7",
                    "componentMaxVersion": "v1.22"
                  },
                  {
                    "componentName": "trident",
                    "componentMinVersion": "v21.01.1"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/package_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created package resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-package+json": {
                "example": {
                  "type": "application/astra-package",
                  "version": "1.0",
                  "id": "54edc2b3-18c5-5371-904b-ebcd04d88bdc",
                  "packageName": "acc",
                  "packageVersion": "22.09.1",
                  "packageType": "patch",
                  "packageState": "available",
                  "packageStateTransitions": [
                    {
                      "from": "verifying",
                      "to": [
                        "corrupt",
                        "incomplete",
                        "available"
                      ]
                    },
                    {
                      "from": "corrupt",
                      "to": [
                        "incomplete",
                        "available"
                      ]
                    },
                    {
                      "from": "incomplete",
                      "to": [
                        "corrupt",
                        "available"
                      ]
                    },
                    {
                      "from": "available",
                      "to": [
                        "corrupt",
                        "available"
                      ]
                    }
                  ],
                  "packageStateDetails": [],
                  "severityLevel": "recommended",
                  "images": [
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "storage-provider",
                      "imageTag": "1.3.116",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    },
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "storage-backend-metrics",
                      "imageTag": "1.3.45",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    },
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "credentials",
                      "imageTag": "1.3.45",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    }
                  ],
                  "files": [
                    {
                      "fileName": "astra_control_center_min.yaml",
                      "fileIdentifier": "astra_min",
                      "fileMediaType": "application/x-yaml",
                      "fileContents": "VGhpcyBpcyBzdXBwb3NlZCB0byBiZSBhIGNvbXByZXNzZWQgZmlsZSBjb250ZW50"
                    }
                  ],
                  "dependencies": [
                    {
                      "componentName": "acc",
                      "componentMinVersion": "22.04.29"
                    },
                    {
                      "componentName": "kubernetes",
                      "componentMinVersion": "v1.19.7",
                      "componentMaxVersion": "v1.20"
                    },
                    {
                      "componentName": "trident",
                      "componentMinVersion": "v21.01.1"
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/package_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Package"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,packageName,packageVersion,softwareType"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists all package resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-packages",
                  "version": "1.0",
                  "items": [
                    [
                      "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                      "acc",
                      "22.01.0",
                      "install"
                    ],
                    [
                      "e8507dad-d33f-44b3-9c15-ec55ba6f6473",
                      "acc",
                      "22.01.1",
                      "patch"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/package_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/packages/{package_id}": {
      "get": {
        "tags": [
          "Package"
        ],
        "description": "Returns the stored Package API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "ID of the package collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific package resource",
        "responses": {
          "200": {
            "description": "Returns the stored Package API resource in the JSON response body.",
            "content": {
              "application/astra-package+json": {
                "example": {
                  "type": "application/astra-package",
                  "version": "1.0",
                  "id": "54edc2b3-18c5-5371-904b-ebcd04d88bdc",
                  "packageName": "acc",
                  "packageVersion": "22.09.1",
                  "packageType": "patch",
                  "packageState": "available",
                  "packageStateTransitions": [
                    {
                      "from": "verifying",
                      "to": [
                        "corrupt",
                        "incomplete",
                        "available"
                      ]
                    },
                    {
                      "from": "corrupt",
                      "to": [
                        "incomplete",
                        "available"
                      ]
                    },
                    {
                      "from": "incomplete",
                      "to": [
                        "corrupt",
                        "available"
                      ]
                    },
                    {
                      "from": "available",
                      "to": [
                        "corrupt",
                        "available"
                      ]
                    }
                  ],
                  "packageStateDetails": [],
                  "severityLevel": "recommended",
                  "images": [
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "storage-provider",
                      "imageTag": "1.3.116",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    },
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "storage-backend-metrics",
                      "imageTag": "1.3.45",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    },
                    {
                      "imagePath": "/globalcicd/acc",
                      "imageName": "credentials",
                      "imageTag": "1.3.45",
                      "imageDigest": "sha256:2e04d178815537b0ad8c3224e8754e33642da781a161f1be239853dae33deafc"
                    }
                  ],
                  "files": [
                    {
                      "fileName": "astra_control_center_min.yaml",
                      "fileIdentifier": "astra_min",
                      "fileMediaType": "application/x-yaml",
                      "fileContents": "VGhpcyBpcyBzdXBwb3NlZCB0byBiZSBhIGNvbXByZXNzZWQgZmlsZSBjb250ZW50"
                    }
                  ],
                  "dependencies": [
                    {
                      "componentName": "acc",
                      "componentMinVersion": "22.04.29"
                    },
                    {
                      "componentName": "kubernetes",
                      "componentMinVersion": "v1.19.7",
                      "componentMaxVersion": "v1.20"
                    },
                    {
                      "componentName": "trident",
                      "componentMinVersion": "v21.01.1"
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/package_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Package"
        ],
        "description": "Removes the specified Package API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "package_id",
            "in": "path",
            "description": "ID of the package collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific package resource",
        "responses": {
          "204": {
            "description": "Indicates if the package resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/roleBindings": {
      "post": {
        "tags": [
          "Role Binding"
        ],
        "description": "Indicates desired values for the Role Binding API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new roleBinding resource in the roleBindings root collection",
        "requestBody": {
          "description": "Indicates desired values for the Role Binding API resource to be created.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                "role": "viewer",
                "roleConstraints": [
                  "*"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created roleBinding resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "accountID,userID,role"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all roleBinding resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-roleBindings",
                  "version": "1.1",
                  "items": [
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "4c27d25a-9edb-4e85-9438-48dc8e917231",
                      "viewer"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "dc40a13f-e9b3-4cf5-900f-58de32174390",
                      "owner"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "c38abd8d-7dae-4659-8382-2e74a58738ba",
                      "owner"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/roleBindings/{roleBinding_id}": {
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific roleBinding resource",
        "responses": {
          "200": {
            "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Binding"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific roleBinding resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "role": "member",
                "roleConstraints": [
                  "namespaces:id='c832e1dc-d7c3-464e-9c62-47bf91c46ce8'"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Binding"
        ],
        "description": "Removes the specified Role Binding API resource.\n\n**Side Effects**\n* Deleting the last role-binding associated with a user with authProvider as 'local', or 'cloud-central' (not ldap) triggers the deletion of the user.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific roleBinding resource",
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/settings": {
      "get": {
        "tags": [
          "Setting"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          }
        ],
        "summary": "Lists all setting resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-settings",
                  "version": "1.1",
                  "items": [
                    {
                      "type": "application/astra-setting",
                      "version": "1.0",
                      "id": "5da0a2ed-c51d-4d91-8b98-ed3aa8a88cc5",
                      "name": "astra.account.smtp",
                      "currentConfig": {
                        "credential": "",
                        "isEnabled": "false",
                        "port": 587,
                        "relayServer": "smtp.sendgrid.net"
                      },
                      "configSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "astra.account.smtp",
                        "type": "object",
                        "properties": {
                          "credential": {
                            "type": "string",
                            "description": "The credential ID for SMTP authentication."
                          },
                          "isEnabled": {
                            "type": "string",
                            "description": "This property determines if this setting is enabled or not."
                          },
                          "port": {
                            "type": "integer",
                            "description": "The SMTP port. For an unencrypted or a TLS connection, use port 25, 2525, or 587."
                          },
                          "relayServer": {
                            "type": "string",
                            "description": "This setting is sometimes referred to as the external SMTP server or the SMTP relay."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "relayServer",
                          "port",
                          "isEnabled"
                        ]
                      },
                      "state": "valid",
                      "stateUnready": [],
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2021-06-04T20:14:52Z",
                        "modificationTimestamp": "2021-06-04T20:14:52Z",
                        "createdBy": "c9550bbb-e70b-4578-8504-07397f875bcb",
                        "modifiedBy": "65e1571b-1b46-4f05-95b0-7d7f5a93da6a"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/setting_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/settings/{setting_id}": {
      "get": {
        "tags": [
          "Setting"
        ],
        "description": "Returns the stored Setting API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "setting_id",
            "in": "path",
            "description": "ID of the setting collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific setting resource",
        "responses": {
          "200": {
            "description": "Returns the stored Setting API resource in the JSON response body.",
            "content": {
              "application/astra-setting+json": {
                "example": {
                  "type": "application/astra-setting",
                  "version": "1.1",
                  "id": "ea510866-47d3-5130-8468-563df4cd6a28",
                  "name": "astra.account.smtp",
                  "currentConfig": {
                    "credential": "",
                    "isEnabled": "false",
                    "port": 587,
                    "relayServer": "smtp.sendgrid.net"
                  },
                  "configSchema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "astra.account.smtp",
                    "type": "object",
                    "properties": {
                      "credential": {
                        "type": "string",
                        "description": "The credential ID for SMTP authentication."
                      },
                      "isEnabled": {
                        "type": "string",
                        "description": "This property determines if this setting is enabled or not."
                      },
                      "port": {
                        "type": "integer",
                        "description": "The SMTP port. For an unencrypted or a TLS connection, use port 25, 2525, or 587."
                      },
                      "relayServer": {
                        "type": "string",
                        "description": "This setting is sometimes referred to as the external SMTP server or the SMTP relay."
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "relayServer",
                      "port",
                      "isEnabled"
                    ]
                  },
                  "state": "valid",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/setting_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Setting"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "setting_id",
            "in": "path",
            "description": "ID of the setting collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific setting resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-setting+json": {
              "example": {
                "type": "application/astra-setting",
                "version": "1.1",
                "desiredConfig": {
                  "credential": "e3d2ea77-398e-49be-85fd-ec66d9426a06",
                  "port": 587,
                  "relayServer": "[smtp.sendgrid.net](http://smtp.sendgrid.net)",
                  "isEnabled": "true"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/setting_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the setting resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/41",
                  "title": "Service not ready",
                  "detail": "Currently, the service can't respond to this request.",
                  "status": "503"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_41"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/subscriptions": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "description": "Indicates desired values for the Subscription API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new subscription resource in the subscriptions root collection",
        "requestBody": {
          "description": "Indicates desired values for the Subscription API resource to be created.",
          "required": true,
          "content": {
            "application/astra-subscription+json": {
              "example": {
                "type": "application/astra-subscription",
                "version": "1.2",
                "terms": "trial"
              },
              "schema": {
                "$ref": "#/components/schemas/subscription_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created subscription resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-subscription+json": {
                "example": {
                  "type": "application/astra-subscription",
                  "version": "1.2",
                  "id": "40b4106f-b743-5d83-95c7-d539b2b45f63",
                  "customerProfileID": "2157047189",
                  "paymentProfileID": "E7CEB0A9F1BECA32A02493E1B31D5955",
                  "paymentExpiry": "2022-02-01T00:00:00Z",
                  "purchaseOrderNumber": "72384632",
                  "marketplace": "netapp",
                  "licenseSN": "278343",
                  "terms": "trial",
                  "status": "active",
                  "appLimit": 0,
                  "namespaceLimit": 10,
                  "subscriptionPeriod": 90,
                  "gracePeriod": 7,
                  "reminderBeforePeriod": 30,
                  "onboardStatus": "in progress",
                  "costPerAppUnit": 0,
                  "costPerNamespaceUnit": 0.005,
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/subscription_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          }
        ],
        "summary": "Lists all subscription resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-subscriptions",
                  "version": "1.2",
                  "items": [
                    {
                      "type": "application/astra-subscription",
                      "version": "1.1",
                      "id": "d4c865c9-64a7-4661-ae4a-3307dffcd3da",
                      "customerProfileID": "2157047189",
                      "paymentProfileID": "E7CEB0A9F1BECA32A02493E1B31D5955",
                      "paymentExpiry": "2022-02-01T00:00:00Z",
                      "purchaseOrderNumber": "72384632",
                      "marketplace": "netapp",
                      "licenseSN": "278343",
                      "terms": "trial",
                      "status": "inactive",
                      "appLimit": 0,
                      "namespaceLimit": 10,
                      "subscriptionPeriod": 90,
                      "gracePeriod": 7,
                      "reminderBeforePeriod": 30,
                      "onboardStatus": "success",
                      "costPerAppUnit": 0,
                      "costPerNamespaceUnit": 0.005,
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-05-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-05-06T12:24:52.256624Z",
                        "createdBy": "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa"
                      }
                    },
                    {
                      "type": "application/astra-subscription",
                      "version": "1.1",
                      "id": "4c43ed8b-078f-4fe3-b8c6-5d515f6382e6",
                      "customerProfileID": "2157047189",
                      "paymentProfileID": "E7CEB0A9F1BECA32A02493E1B31D5955",
                      "paymentExpiry": "2022-05-01T00:00:00Z",
                      "purchaseOrderNumber": "92374658",
                      "marketplace": "netapp",
                      "licenseSN": "374623",
                      "terms": "paid",
                      "status": "active",
                      "appLimit": 0,
                      "namespaceLimit": -1,
                      "subscriptionPeriod": -1,
                      "gracePeriod": -1,
                      "reminderBeforePeriod": -1,
                      "onboardStatus": "success",
                      "costPerAppUnit": 0,
                      "costPerNamespaceUnit": 0.005,
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/subscription_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "description": "Returns the stored Subscription API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "subscription_id",
            "in": "path",
            "description": "ID of the subscription collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific subscription resource",
        "responses": {
          "200": {
            "description": "Returns the stored Subscription API resource in the JSON response body.",
            "content": {
              "application/astra-subscription+json": {
                "example": {
                  "type": "application/astra-subscription",
                  "version": "1.2",
                  "id": "40b4106f-b743-5d83-95c7-d539b2b45f63",
                  "customerProfileID": "2157047189",
                  "paymentProfileID": "E7CEB0A9F1BECA32A02493E1B31D5955",
                  "paymentExpiry": "2022-02-01T00:00:00Z",
                  "purchaseOrderNumber": "72384632",
                  "marketplace": "netapp",
                  "licenseSN": "278343",
                  "terms": "trial",
                  "status": "active",
                  "onboardStatus": "success",
                  "costPerAppUnit": 0,
                  "costPerNamespaceUnit": 0.005,
                  "appLimit": 0,
                  "namespaceLimit": 10,
                  "subscriptionPeriod": 90,
                  "gracePeriod": 7,
                  "reminderBeforePeriod": 30,
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/subscription_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the user cancels the subscription, the PUT endpoint must be called with \"status\": \"inactive\".\n* When the status is set to \"inactive\", the pending charges for this subscription are sent to Zuora and the Zuora subscription will be marked as \"inactive\" in some way.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "subscription_id",
            "in": "path",
            "description": "ID of the subscription collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific subscription resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the user cancels the subscription, the PUT endpoint must be called with \"status\": \"inactive\".\n* When the status is set to \"inactive\", the pending charges for this subscription are sent to Zuora and the Zuora subscription will be marked as \"inactive\" in some way.",
          "required": true,
          "content": {
            "application/astra-subscription+json": {
              "example": {
                "type": "application/astra-subscription",
                "version": "1.2",
                "customerProfileID": "2157047189",
                "paymentProfileID": "E7CEB0A9F1BECA32A02493E1B31D5955",
                "paymentExpiry": "2022-05-01T00:00:00Z"
              },
              "schema": {
                "$ref": "#/components/schemas/subscription_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the subscription resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "description": "Removes the specified Subscription API resource.\n\n**Side Effects**\n* Subscription is deleted along with all the charges associated with it.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "subscription_id",
            "in": "path",
            "description": "ID of the subscription collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific subscription resource",
        "responses": {
          "204": {
            "description": "Indicates if the subscription resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/upgrades": {
      "get": {
        "tags": [
          "Upgrade"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,componentName,upgradeVersion"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all upgrade resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-upgrades",
                  "version": "1.1",
                  "items": [
                    [
                      "01982783-b1eb-4dca-a3fe-a385a3186c53",
                      "acc",
                      "21.07.1"
                    ],
                    [
                      "0a5abab2-39b2-4101-87b9-0d9b8f537ca1",
                      "acc",
                      "21.07.2"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/upgrade_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/upgrades/{upgrade_id}": {
      "get": {
        "tags": [
          "Upgrade"
        ],
        "description": "Returns the stored Upgrade API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "upgrade_id",
            "in": "path",
            "description": "ID of the upgrade collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific upgrade resource",
        "responses": {
          "200": {
            "description": "Returns the stored Upgrade API resource in the JSON response body.",
            "content": {
              "application/astra-upgrade+json": {
                "example": {
                  "type": "application/astra-upgrade",
                  "version": "1.1",
                  "id": "aa9a8e88-c012-55b1-b514-7cd94dc79008",
                  "componentName": "trident",
                  "componentInstance": "https://<dns_name>/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/fdda3ff3-a46a-43a4-902e-444fde2baeba/storageBackends/72d19c3c-eb43-4bec-b23e-a228c900aded",
                  "componentID": "72d19c3c-eb43-4bec-b23e-a228c900aded",
                  "upgradeVersion": "21.07.1",
                  "currentVersion": "21.04.1",
                  "dependencies": [],
                  "state": "scheduled",
                  "stateDesired": "scheduled",
                  "stateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/upgrade_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Upgrade"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Upgrades are scheduled or run based on desired state.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "upgrade_id",
            "in": "path",
            "description": "ID of the upgrade collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific upgrade resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Upgrades are scheduled or run based on desired state.",
          "required": true,
          "content": {
            "application/astra-upgrade+json": {
              "example": {
                "type": "application/astra-upgrade",
                "version": "1.1",
                "stateDesired": "running"
              },
              "schema": {
                "$ref": "#/components/schemas/upgrade_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the upgrade resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Indicates desired values for the User API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new user resource in the users root collection",
        "requestBody": {
          "description": "Indicates desired values for the User API resource to be created.",
          "required": true,
          "content": {
            "application/astra-user+json": {
              "example": {
                "type": "application/astra-user",
                "version": "1.2",
                "firstName": "John",
                "lastName": "Doe",
                "email": "jdoe@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/user_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created user resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-user+json": {
                "example": {
                  "type": "application/astra-user",
                  "version": "1.2",
                  "id": "5bad8e04-e2fd-5c43-98d7-300580993f49",
                  "state": "pending",
                  "isEnabled": "true",
                  "authID": "HteLK3hk28sdbDLKHReB",
                  "authProvider": "cloud-central",
                  "firstName": "John",
                  "lastName": "Doe",
                  "email": "jdoe@example.com",
                  "sendWelcomeEmail": "true",
                  "lastActTimestamp": "2020-08-05T14:24:54.128427Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,email"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all user resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-users",
                  "version": "1.2",
                  "items": [
                    [
                      "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa",
                      "jdoe@example.com"
                    ],
                    [
                      "e324ec3a-706d-4f57-a95d-1d88c03e7b73",
                      "ssmith@example.com"
                    ],
                    [
                      "3070c84d-129b-4017-82a8-2c26a42dd77e",
                      "wjohns@example.com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Returns the stored User API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific user resource",
        "responses": {
          "200": {
            "description": "Returns the stored User API resource in the JSON response body.",
            "content": {
              "application/astra-user+json": {
                "example": {
                  "type": "application/astra-user",
                  "version": "1.2",
                  "id": "5bad8e04-e2fd-5c43-98d7-300580993f49",
                  "state": "active",
                  "isEnabled": "true",
                  "authID": "HteLK3hk28sdbDLKHReB",
                  "authProvider": "cloud-central",
                  "firstName": "John",
                  "lastName": "Doe",
                  "companyName": "NetApp, Inc.",
                  "email": "jdoe@example.com",
                  "phone": "408-555-22222",
                  "postalAddress": {
                    "addressCountry": "US",
                    "addressLocality": "Sunnyvale",
                    "addressRegion": "California",
                    "postalCode": "94089",
                    "streetAddress1": "495 East Java Drive"
                  },
                  "sendWelcomeEmail": "true",
                  "enableTimestamp": "2020-08-05T14:24:54.128427Z",
                  "lastActTimestamp": "2020-08-05T14:24:54.128427Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/user_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific user resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-user+json": {
              "example": {
                "type": "application/astra-user",
                "version": "1.2",
                "firstName": "John",
                "lastName": "Dale",
                "email": "jdale@example.com"
              },
              "schema": {
                "$ref": "#/components/schemas/user_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the user resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Removes the specified User API resource.\n\n**Side Effects**\n* The following resources associated with the user are deleted: notificationMarks, tokens, and all roleBindings referring to the user.  \n* For a user with \"authProvider\" as \"local\", the linked credential with \"keyType\" as \"passwordHash\" will also be deleted.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the user collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific user resource",
        "responses": {
          "204": {
            "description": "Indicates if the user resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/roleBindings": {
      "post": {
        "tags": [
          "Role Binding"
        ],
        "description": "Indicates desired values for the Role Binding API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new roleBinding resource for a specific user",
        "requestBody": {
          "description": "Indicates desired values for the Role Binding API resource to be created.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                "role": "viewer",
                "roleConstraints": [
                  "*"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created roleBinding resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "accountID,userID,role"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the roleBinding resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-roleBindings",
                  "version": "1.1",
                  "items": [
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "4c27d25a-9edb-4e85-9438-48dc8e917231",
                      "viewer"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "dc40a13f-e9b3-4cf5-900f-58de32174390",
                      "owner"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "c38abd8d-7dae-4659-8382-2e74a58738ba",
                      "owner"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/roleBindings/{roleBinding_id}": {
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific roleBinding resource",
        "responses": {
          "200": {
            "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Binding"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific roleBinding resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "role": "member",
                "roleConstraints": [
                  "namespaces:id='c832e1dc-d7c3-464e-9c62-47bf91c46ce8'"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Binding"
        ],
        "description": "Removes the specified Role Binding API resource.\n\n**Side Effects**\n* Deleting the last role-binding associated with a user with authProvider as 'local', or 'cloud-central' (not ldap) triggers the deletion of the user.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific roleBinding resource",
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/tokens": {
      "post": {
        "tags": [
          "Token"
        ],
        "description": "Indicates desired values for the Token API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new token resource for a specific user",
        "requestBody": {
          "description": "Indicates desired values for the Token API resource to be created.",
          "required": true,
          "content": {
            "application/astra-token+json": {
              "example": {
                "type": "application/astra-token",
                "version": "1.0",
                "name": "Snapshot Script"
              },
              "schema": {
                "$ref": "#/components/schemas/token_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created token resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-token+json": {
                "example": {
                  "type": "application/astra-token",
                  "version": "1.0",
                  "id": "822fab12-c224-5d1f-8118-5fb5d2def8b9",
                  "name": "Snapshot Script",
                  "userID": "09f8933c-ad74-4f4e-8ef5-1ffaa0fb8e9b",
                  "token": "QSBKV1QgVG9rZW4gd291bGQgZ28gaGVyZS4=",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Token"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the token resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-tokens",
                  "version": "1.0",
                  "items": [
                    [
                      "4e99da96-152e-4aee-9207-4b6d04d2238d",
                      "Snapshot Script"
                    ],
                    [
                      "43ab09af-e558-4b1b-a6d5-49df7c39f22c",
                      "Snapshot Taker"
                    ],
                    [
                      "cca48856-9e25-4170-b49a-d32265c5e5f1",
                      "Volume Checker"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/tokens/{token_id}": {
      "get": {
        "tags": [
          "Token"
        ],
        "description": "Returns the stored Token API resource in the JSON response body.\n* The \"token\" key/value will not be returned.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific token resource",
        "responses": {
          "200": {
            "description": "Returns the stored Token API resource in the JSON response body.\n* The \"token\" key/value will not be returned.",
            "content": {
              "application/astra-token+json": {
                "example": {
                  "type": "application/astra-token",
                  "version": "1.0",
                  "id": "822fab12-c224-5d1f-8118-5fb5d2def8b9",
                  "name": "Snapshot Script",
                  "userID": "09f8933c-ad74-4f4e-8ef5-1ffaa0fb8e9b",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/token_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Token"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific token resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-token+json": {
              "example": {
                "type": "application/astra-token",
                "version": "1.0",
                "name": "New Token Name"
              },
              "schema": {
                "$ref": "#/components/schemas/token_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the token resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Token"
        ],
        "description": "Removes the specified Token API resource.\n\n**Side Effects**\n* The corresponding API token credential is removed from the credential service as a side effect.  ",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "token_id",
            "in": "path",
            "description": "ID of the token collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific token resource",
        "responses": {
          "204": {
            "description": "Indicates if the token resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/unreadNotifications": {
      "get": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "notificationID,sequenceCount"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            },
            "example": "2"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            },
            "example": "count%20desc"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            },
            "example": "true"
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the unreadNotification resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-unreadNotifications",
                  "version": "1.0",
                  "items": [
                    [
                      "4080cf5f-2261-4130-b8fb-8432e2e553e6",
                      48923
                    ],
                    [
                      "1b4e89f1-2e70-4a08-a015-e7064b0fb703",
                      47345
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/unreadNotification_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/unreadNotifications/{unreadNotification_id}": {
      "get": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Returns the stored Unread Notification API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "unreadNotification_id",
            "in": "path",
            "description": "ID of the unreadNotification collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific unreadNotification resource",
        "responses": {
          "200": {
            "description": "Returns the stored Unread Notification API resource in the JSON response body.",
            "content": {
              "application/astra-unreadNotification+json": {
                "example": {
                  "type": "application/astra-unreadNotification",
                  "version": "1.0",
                  "id": "10df997b-629e-50f8-bc5f-a18b9a4ac5f6",
                  "notificationID": "4080cf5f-2261-4130-b8fb-8432e2e553e6",
                  "sequenceCount": 48923,
                  "severity": "warning",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/unreadNotification_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Unread Notification"
        ],
        "description": "Removes the specified Unread Notification API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "unreadNotification_id",
            "in": "path",
            "description": "ID of the unreadNotification collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific unreadNotification resource",
        "responses": {
          "204": {
            "description": "Indicates if the unreadNotification resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "description": "Indicates the desired values for the Group API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new group resource for a specific user",
        "requestBody": {
          "description": "Indicates the desired values for the Group API resource to be created.",
          "required": true,
          "content": {
            "application/astra-group+json": {
              "example": {
                "type": "application/astra-group",
                "version": "1.0",
                "name": "engineering-group",
                "authProvider": "ldap",
                "authID": "CN=Engineering,CN=Groups,DC=example,DC=com"
              },
              "schema": {
                "$ref": "#/components/schemas/group_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created group resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-group+json": {
                "example": {
                  "type": "application/astra-group",
                  "version": "1.0",
                  "id": "d8560bb2-7c87-5331-a78d-4e870b22e9a9",
                  "name": "engineering-group",
                  "authProvider": "ldap",
                  "authID": "CN=Engineering,CN=Groups,DC=example,DC=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_post_response_body"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/14",
                  "title": "Unauthorized access",
                  "detail": "The user isn't enabled.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_14"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/32",
                  "title": "Unsupported content type",
                  "detail": "The response can't be returned in the requested format.",
                  "status": "406"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_32"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,authProvider,authID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the group resources associated with a specific user",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-groups",
                  "version": "1.0",
                  "items": [
                    [
                      "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa",
                      "ldap",
                      "CN=Testers,CN=groups,DC=example,DC=com"
                    ],
                    [
                      "e324ec3a-706d-4f57-a95d-1d88c03e7b73",
                      "ldap",
                      "CN=Admins,CN=groups,DC=example,DC=com"
                    ],
                    [
                      "3070c84d-129b-4017-82a8-2c26a42dd77e",
                      "ldap",
                      "CN=SREs,CN=groups,DC=example,DC=com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/groups/{group_id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Returns the stored Group API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific group resource",
        "responses": {
          "200": {
            "description": "Returns the stored Group API resource in the JSON response body.",
            "content": {
              "application/astra-group+json": {
                "example": {
                  "type": "application/astra-group",
                  "version": "1.0",
                  "id": "d8560bb2-7c87-5331-a78d-4e870b22e9a9",
                  "name": "engineering-group",
                  "authProvider": "ldap",
                  "authID": "CN=Engineering,CN=groups,DC=example,DC=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/group_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/12",
                  "title": "Invalid headers",
                  "detail": "The request headers are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific group resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-group+json": {
              "example": {
                "type": "application/astra-group",
                "version": "1.0",
                "name": "my-qa-group",
                "authID": "CN=QA,CN=Groups,DC=example,DC=com"
              },
              "schema": {
                "$ref": "#/components/schemas/group_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the group resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/7",
                  "title": "Invalid JSON payload",
                  "detail": "The request body is not valid JSON.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "description": "Removes the specified Group API resource.\n\n**Side Effects**\n* The following resources associated with the group are deleted:   \n* Role bindings referring to the group",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the group collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific group resource",
        "responses": {
          "204": {
            "description": "Indicates if the group resource was deleted."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/12",
                  "title": "Invalid headers",
                  "detail": "The request headers are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_35"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/groups/{group_id}/roleBindings": {
      "post": {
        "tags": [
          "Role Binding"
        ],
        "description": "Indicates desired values for the Role Binding API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new roleBinding resource for a specific group",
        "requestBody": {
          "description": "Indicates desired values for the Role Binding API resource to be created.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "userID": "00000000-0000-0000-0000-000000000000",
                "groupID": "6f7f5bb3-1320-4861-bd8a-d3a4106d36b1",
                "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                "role": "viewer",
                "roleConstraints": [
                  "*"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created roleBinding resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "group",
                  "userID": "00000000-0000-0000-0000-000000000000",
                  "groupID": "6f7f5bb3-1320-4861-bd8a-d3a4106d36b1",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "accountID,userID,role"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Indicates the sort order of resource when listing a collection.\n\n\nURL examples: \"orderBy=name\", \"orderBy=name%20desc\"\n\n\nOpenAPI examples: \"name desc\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_orderBy"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Indicates the number of resources to skip over when listing a collection.\n\n\nURL examples: \"skip=1\"\n\n\nOpenAPI examples: \"1\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_skip"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Indicates if the total number of resources should be returned in the metadata object.\n\n\nURL examples: \"count=true\"\n\n\nOpenAPI examples: \"true\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_count"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists the roleBinding resources associated with a specific group",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-roleBindings",
                  "version": "1.1",
                  "items": [
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "4c27d25a-9edb-4e85-9438-48dc8e917231",
                      "viewer"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "dc40a13f-e9b3-4cf5-900f-58de32174390",
                      "owner"
                    ],
                    [
                      "9fd87309-067f-48c9-a331-527796c14cf3",
                      "c38abd8d-7dae-4659-8382-2e74a58738ba",
                      "owner"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/users/{user_id}/groups/{group_id}/roleBindings/{roleBinding_id}": {
      "get": {
        "tags": [
          "Role Binding"
        ],
        "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific roleBinding resource",
        "responses": {
          "200": {
            "description": "Returns the stored Role Binding API resource in the JSON response body.\nIf the request is against /accounts/{account_id}/core/v1/users/{user_id}/roleBindings endpoint, only roleBinding resources where the user ID matches the user ID in the request URL will be permitted to be read.\nIf the request is against /accounts/{account_id}/core/v1/groups/{group_id}/roleBindings, only roleBinding resources where the group ID matches the group ID in the request URL will be permitted to be read.",
            "content": {
              "application/astra-roleBinding+json": {
                "example": {
                  "type": "application/astra-roleBinding",
                  "version": "1.1",
                  "id": "a198f052-5cd7-59d3-9f27-9ea32a21fbca",
                  "principalType": "user",
                  "userID": "4c27d25a-9edb-4e85-9438-48dc8e917231",
                  "groupID": "00000000-0000-0000-0000-000000000000",
                  "accountID": "9fd87309-067f-48c9-a331-527796c14cf3",
                  "role": "viewer",
                  "roleConstraints": [
                    "*"
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role Binding"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific roleBinding resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-roleBinding+json": {
              "example": {
                "type": "application/astra-roleBinding",
                "version": "1.1",
                "role": "member",
                "roleConstraints": [
                  "namespaces:id='c832e1dc-d7c3-464e-9c62-47bf91c46ce8'"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/roleBinding_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role Binding"
        ],
        "description": "Removes the specified Role Binding API resource.\n\n**Side Effects**\n* Deleting the last role-binding associated with a user with authProvider as 'local', or 'cloud-central' (not ldap) triggers the deletion of the user.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of the containing user resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "ID of the containing group resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "roleBinding_id",
            "in": "path",
            "description": "ID of the roleBinding collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific roleBinding resource",
        "responses": {
          "204": {
            "description": "Indicates if the roleBinding resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/appBackups": {
      "get": {
        "tags": [
          "Application Backup"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists all appBackup resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appBackups",
                  "version": "1.2",
                  "items": [
                    [
                      "5cb608f9-571b-492e-a520-5bfb900a9b9c",
                      "app-name-245",
                      "pending"
                    ],
                    [
                      "f8faa690-7e09-48a4-b33c-7965712acd0c",
                      "app-name-244",
                      "completed"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appBackup_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/96",
                  "title": "Backups not listed",
                  "detail": "The backups didn't list because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_96"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/appBackups/{appBackup_id}": {
      "get": {
        "tags": [
          "Application Backup"
        ],
        "description": "Returns the stored Application Backup API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the appBackup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appBackup resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Backup API resource in the JSON response body.",
            "content": {
              "application/astra-appBackup+json": {
                "example": {
                  "type": "application/astra-appBackup",
                  "version": "1.2",
                  "id": "bab39d53-2d04-5297-b92e-58df89a2117b",
                  "name": "app-name-245",
                  "bucketID": "0afbe357-a717-4c7a-8b3d-d0368959c8de",
                  "scheduleID": "1fe83650-9b3c-41ef-bb25-a2910c19c33e",
                  "state": "pending",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appBackup_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/95",
                  "title": "Backup not retrieved",
                  "detail": "The backup wasn't retrieved because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_95"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Backup"
        ],
        "description": "Removes the specified Application Backup API resource.\nBackups in progress will be canceled, and then deleted.\n\n**Side Effects**\n* If a backup is complete, the backup data is deleted.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the appBackup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific appBackup resource",
        "responses": {
          "204": {
            "description": "Indicates if the appBackup resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/97",
                  "title": "Backup not deleted",
                  "detail": "The backup wasn't deleted because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_97"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/128",
                  "title": "Backup cancellation not allowed",
                  "detail": "A pending backup can't be canceled.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_128"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/appBackups/{appBackup_id}/appAssets": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the containing appBackup resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "assetType,assetName"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appAsset resources associated with a specific appBackup",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appAssets",
                  "version": "1.1",
                  "items": [
                    [
                      "Pod",
                      "mediawiki-69c6fcf864-2wx6l"
                    ],
                    [
                      "ReplicaSet",
                      "mediawiki-69c6fcf864"
                    ],
                    [
                      "Service",
                      "mediawiki"
                    ],
                    [
                      "Deployment",
                      "mediawiki"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_50"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_46"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/appBackups/{appBackup_id}/appAssets/{appAsset_id}": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns the stored Application Asset API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the containing appBackup resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appAsset_id",
            "in": "path",
            "description": "ID of the appAsset collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appAsset resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Asset API resource in the JSON response body.",
            "content": {
              "application/astra-appAsset+json": {
                "example": {
                  "type": "application/astra-appAsset",
                  "version": "1.1",
                  "id": "6415e851-b820-553b-9432-ebd057d1917d",
                  "assetType": "Pod",
                  "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "GVK": {
                    "group": "apps",
                    "kind": "Pod",
                    "version": "v1"
                  },
                  "assetID": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6",
                  "labels": [
                    {
                      "name": "app",
                      "value": "mediawiki"
                    },
                    {
                      "name": "pod-template-hash",
                      "value": "69c6fcf864"
                    }
                  ],
                  "assetName": "mediawiki-69c6fcf864-2wx6l",
                  "namespace": "wiki",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/buckets": {
      "post": {
        "tags": [
          "Bucket"
        ],
        "description": "Indicates the desired values for the Bucket API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new bucket resource in the buckets root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Bucket API resource to be created.",
          "required": true,
          "content": {
            "application/astra-bucket+json": {
              "example": {
                "type": "application/astra-bucket",
                "version": "1.2",
                "name": "Test Bucket",
                "credentialID": "d5b3854c-38de-42c6-9269-b5c052aba76f",
                "provider": "gcp",
                "bucketParameters": {
                  "gcp": {
                    "bucketName": "bucketName"
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/bucket_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created bucket resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-bucket+json": {
                "example": {
                  "type": "application/astra-bucket",
                  "version": "1.2",
                  "id": "9b296ce0-c545-5022-acfa-1980c5aaea97",
                  "name": "Test Bucket",
                  "credentialID": "8f039324-7795-40bf-a5ca-4442580f7ab0",
                  "state": "available",
                  "stateDetails": [],
                  "provider": "gcp",
                  "bucketParameters": {
                    "gcp": {
                      "bucketName": "bucketName"
                    }
                  },
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/bucket_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bucket"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Lists all bucket resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-buckets",
                  "version": "1.2",
                  "items": [
                    [
                      "4c753e39-25e9-4b36-a8de-69f168aa59cd",
                      "Test Bucket",
                      "gcp"
                    ],
                    [
                      "d8fd585d-6429-4c08-a308-af193a88eac7",
                      "Local",
                      "ontap-s3"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/bucket_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/buckets/{bucket_id}": {
      "get": {
        "tags": [
          "Bucket"
        ],
        "description": "Returns the stored Bucket API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "bucket_id",
            "in": "path",
            "description": "ID of the bucket collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific bucket resource",
        "responses": {
          "200": {
            "description": "Returns the stored Bucket API resource in the JSON response body.",
            "content": {
              "application/astra-bucket+json": {
                "example": {
                  "type": "application/astra-bucket",
                  "version": "1.2",
                  "id": "9b296ce0-c545-5022-acfa-1980c5aaea97",
                  "name": "Test Bucket",
                  "credentialID": "8f039324-7795-40bf-a5ca-4442580f7ab0",
                  "state": "available",
                  "stateDetails": [],
                  "provider": "gcp",
                  "bucketParameters": {
                    "gcp": {
                      "bucketName": "bucketName"
                    }
                  },
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/bucket_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bucket"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "bucket_id",
            "in": "path",
            "description": "ID of the bucket collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific bucket resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-bucket+json": {
              "example": {
                "type": "application/astra-bucket",
                "version": "1.2",
                "name": "New Bucket Name"
              },
              "schema": {
                "$ref": "#/components/schemas/bucket_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the bucket resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bucket"
        ],
        "description": "Removes the specified Bucket API resource.\n\n**Side Effects**\n* Internal data structures are cleaned up.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "bucket_id",
            "in": "path",
            "description": "ID of the bucket collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific bucket resource",
        "responses": {
          "204": {
            "description": "Indicates if the bucket resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds": {
      "post": {
        "tags": [
          "Cloud"
        ],
        "description": "Indicates the desired values for the Cloud API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new cloud resource in the clouds root collection",
        "requestBody": {
          "description": "Indicates the desired values for the Cloud API resource to be created.",
          "required": true,
          "content": {
            "application/astra-cloud+json": {
              "example": {
                "type": "application/astra-cloud",
                "version": "1.1",
                "name": "GKE",
                "cloudType": "gcp",
                "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31"
              },
              "schema": {
                "$ref": "#/components/schemas/cloud_1.1_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created cloud resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-cloud+json": {
                "example": {
                  "type": "application/astra-cloud",
                  "version": "1.1",
                  "id": "1c9512c3-ec62-5ed8-8013-02fc090b9d03",
                  "name": "GKE",
                  "state": "discovering",
                  "stateUnready": [
                    "Cloud discovery in progress"
                  ],
                  "cloudType": "gcp",
                  "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cloud_1.1_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_140"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cloud"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all cloud resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clouds",
                  "version": "1.1",
                  "items": [
                    [
                      "2f9e63fa-8ba8-414a-a57c-0f3042b80682",
                      "gcp",
                      "discovering"
                    ],
                    [
                      "f723febe-b167-44dd-b07d-c075a8bbe4f3",
                      "aws",
                      "failed"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cloud_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}": {
      "get": {
        "tags": [
          "Cloud"
        ],
        "description": "Returns the stored Cloud API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the cloud collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific cloud resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cloud API resource in the JSON response body.",
            "content": {
              "application/astra-cloud+json": {
                "example": {
                  "type": "application/astra-cloud",
                  "version": "1.1",
                  "id": "1c9512c3-ec62-5ed8-8013-02fc090b9d03",
                  "name": "GKE",
                  "state": "discovering",
                  "stateUnready": [
                    "Cloud discovery in progress"
                  ],
                  "cloudType": "gcp",
                  "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cloud_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cloud"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* An update will trigger a rediscovery of SAs and clusters.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the cloud collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific cloud resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* An update will trigger a rediscovery of SAs and clusters.",
          "required": true,
          "content": {
            "application/astra-cloud+json": {
              "example": {
                "type": "application/astra-cloud",
                "version": "1.1"
              },
              "schema": {
                "$ref": "#/components/schemas/cloud_1.1_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the cloud resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_140"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cloud"
        ],
        "description": "Deletes the requested cloud instance and any non-managed clusters and volumes associated with that specific cloud.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the cloud collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific cloud resource",
        "responses": {
          "204": {
            "description": "Indicates if the cloud resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/141",
                  "title": "Action blocked: Delete cloud instance",
                  "detail": "The cloud instance wasn't deleted because there are managed clusters associated with this cloud instance.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_141"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "description": "Indicates the desired values for the Cluster API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new cluster resource for a specific cloud",
        "requestBody": {
          "description": "Indicates the desired values for the Cluster API resource to be created.",
          "required": true,
          "content": {
            "application/astra-cluster+json": {
              "example": {
                "type": "application/astra-cluster",
                "version": "1.4",
                "name": "GKE-22",
                "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31"
              },
              "schema": {
                "$ref": "#/components/schemas/cluster_1.4_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created cluster resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-cluster+json": {
                "example": {
                  "type": "application/astra-cluster",
                  "version": "1.4",
                  "id": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64",
                  "name": "GKE-22",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "unmanaged",
                  "managedStateUnready": [],
                  "protectionState": "full",
                  "protectionStateDetails": [],
                  "tridentVersion": "21.07.2",
                  "tridentManagedState": "managed",
                  "tridentManagedStateDetails": [],
                  "inUse": "false",
                  "clusterType": "kubernetes",
                  "clusterVersion": "1.91.1",
                  "clusterVersionString": "1.19.1",
                  "clusterCreationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "namespaces": [
                    "kube-system",
                    "kube-public",
                    "my-app-1"
                  ],
                  "defaultStorageClass": "31c95aba-99d9-4987-b1bb-000dfce5952c",
                  "cloudID": "548bdc1f-f00e-4a23-a062-83265d224d46",
                  "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31",
                  "location": "europe-west4",
                  "isMultizonal": "false",
                  "apiServiceID": "6bf33af2-872a-4553-a891-26b510c3edbe",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cluster_1.4_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_58"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_59"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_62"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_160"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/64",
                  "title": "Storage classes not found",
                  "detail": "Storage classes from Trident weren't found.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_64"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_66"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cluster"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,managedState"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the cluster resources associated with a specific cloud",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clusters",
                  "version": "1.4",
                  "items": [
                    [
                      "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                      "GKE-21",
                      "managed"
                    ],
                    [
                      "04dc80fa-d1d8-4850-a49f-3b70d0ec1369",
                      "GKE-22",
                      "unmanaged"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cluster_1.4_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "description": "Returns the stored Cluster API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific cluster resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cluster API resource in the JSON response body.",
            "content": {
              "application/astra-cluster+json": {
                "example": {
                  "type": "application/astra-cluster",
                  "version": "1.4",
                  "id": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64",
                  "name": "GKE-22",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "unmanaged",
                  "managedStateUnready": [],
                  "protectionState": "full",
                  "protectionStateDetails": [],
                  "tridentVersion": "21.07.2",
                  "tridentManagedState": "managed",
                  "tridentManagedStateDetails": [],
                  "inUse": "false",
                  "clusterType": "kubernetes",
                  "clusterVersion": "1.91.1",
                  "clusterVersionString": "1.19.1",
                  "clusterCreationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "namespaces": [
                    "kube-system",
                    "kube-public",
                    "my-app-1"
                  ],
                  "defaultStorageClass": "31c95aba-99d9-4987-b1bb-000dfce5952c",
                  "cloudID": "548bdc1f-f00e-4a23-a062-83265d224d46",
                  "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31",
                  "location": "europe-west4",
                  "isMultizonal": "false",
                  "apiServiceID": "6bf33af2-872a-4553-a891-26b510c3edbe",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cluster_1.4_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/65",
                  "title": "Cluster GET not performed",
                  "detail": "The cluster GET call didn't perform the lookup operation on the cluster.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_65"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cluster"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the cluster is in a managed state, an update to credentialID will eventually trigger another attempt to collect the cluster.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific cluster resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the cluster is in a managed state, an update to credentialID will eventually trigger another attempt to collect the cluster.",
          "required": true,
          "content": {
            "application/astra-cluster+json": {
              "example": {
                "type": "application/astra-cluster",
                "version": "1.4"
              },
              "schema": {
                "$ref": "#/components/schemas/cluster_1.4_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the cluster resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_67"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/65",
                  "title": "Cluster GET not performed",
                  "detail": "The cluster GET call didn't perform the lookup operation on the cluster.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_65"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_66"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cluster"
        ],
        "description": "Removes the specified Cluster API resource.\n\n**Side Effects**\n* Internal data structures are cleaned up.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific cluster resource",
        "responses": {
          "204": {
            "description": "Indicates if the cluster resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/clusterNodes": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "name,instanceType"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the clusterNode resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clusterNodes",
                  "version": "1.0",
                  "items": [
                    [
                      "test-0",
                      "e2-medium"
                    ],
                    [
                      "test-1",
                      "e2-medium"
                    ],
                    [
                      "test-2",
                      "e2-medium"
                    ],
                    [
                      "test-3",
                      "e2-micro"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/clusterNodes/{clusterNode_id}": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns the stored Cluster Node API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "clusterNode_id",
            "in": "path",
            "description": "ID of the clusterNode collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific clusterNode resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cluster Node API resource in the JSON response body.",
            "content": {
              "application/astra-clusterNode+json": {
                "example": {
                  "type": "application/astra-clusterNode",
                  "version": "1.0",
                  "id": "5df0e09f-2c30-5b8a-b6b6-4fb4063525e4",
                  "name": "test-0",
                  "role": "node-role.kubernetes.io/worker",
                  "labels": [],
                  "creationTime": "2020-09-06T04:35:23.593845Z",
                  "externalIP": "192.168.12.44",
                  "internalIP": "10.0.1.1",
                  "zone": "us-west1-c",
                  "region": "us-east1",
                  "instanceType": "e2-medium",
                  "kernelVersion": "4.18.0-147.0.3.el8_1.x86_64",
                  "osImage": "Red Hat Enterprise Linux CoreOS 42.81.20191203.0",
                  "numCpus": "2",
                  "memory": "67108864Ki",
                  "state": "running",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/storageClasses": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the storageClass resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-storageClasses",
                  "version": "1.1",
                  "items": [
                    [
                      "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                      "my-storage-class"
                    ],
                    [
                      "e8507dad-d33f-44b3-9c15-ec55ba6f6473",
                      "standard"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/storageClasses/{storageClass_id}": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns the stored Storage Class API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "storageClass_id",
            "in": "path",
            "description": "ID of the storageClass collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific storageClass resource",
        "responses": {
          "200": {
            "description": "Returns the stored Storage Class API resource in the JSON response body.",
            "content": {
              "application/astra-storageClass+json": {
                "example": {
                  "type": "application/astra-storageClass",
                  "version": "1.1",
                  "id": "ad9be22b-53c7-540c-8647-76afe2878952",
                  "name": "my-storage-class",
                  "provisioner": "csi.trident.netapp.io",
                  "available": "eligible",
                  "allowVolumeExpansion": "true",
                  "reclaimPolicy": "recycle",
                  "volumeBindingMode": "immediate",
                  "isDefault": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,kubernetesLabels"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the namespace resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-namespaces",
                  "version": "1.1",
                  "items": [
                    [
                      "7d451d2f-196e-4234-aee9-7e2376047e63",
                      "kube-system",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ],
                    [
                      "66b0873b-214f-4ac7-89d8-922432f941eb",
                      "jenkins",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clouds/{cloud_id}/clusters/{cluster_id}/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns the stored Namespace API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cloud_id",
            "in": "path",
            "description": "ID of the containing cloud resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "namespace_id",
            "in": "path",
            "description": "ID of the namespace collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific namespace resource",
        "responses": {
          "200": {
            "description": "Returns the stored Namespace API resource in the JSON response body.",
            "content": {
              "application/astra-namespace+json": {
                "example": {
                  "type": "application/astra-namespace",
                  "version": "1.1",
                  "id": "2de811a6-ce8f-512c-9c3a-9585ca66de22",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/namespaces/7d451d2f-196e-4234-aee9-7e2376047e63",
                      "type": "application/vnd.netapp.astra.namespace"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/e0490197-872e-4de8-9287-b04a938e801f/clusters/0f284377-e5dc-4dcd-bacd-3197f2b8a347/namespaces",
                      "type": "application/vnd.netapp.astra.namespaces"
                    }
                  ],
                  "name": "kube-system",
                  "namespaceState": "discovered",
                  "namespaceStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/9",
                      "title": "Namespace Discovered",
                      "detail": "The namespace was discovered in the indicated managed cluster"
                    }
                  ],
                  "kubernetesLabels": [
                    {
                      "name": "app.kubernetes.io/environment",
                      "value": "dev"
                    }
                  ],
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "systemType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,managedState"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all cluster resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clusters",
                  "version": "1.4",
                  "items": [
                    [
                      "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                      "GKE-21",
                      "managed"
                    ],
                    [
                      "04dc80fa-d1d8-4850-a49f-3b70d0ec1369",
                      "GKE-22",
                      "unmanaged"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cluster_1.4_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "description": "Returns the stored Cluster API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific cluster resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cluster API resource in the JSON response body.",
            "content": {
              "application/astra-cluster+json": {
                "example": {
                  "type": "application/astra-cluster",
                  "version": "1.4",
                  "id": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64",
                  "name": "GKE-22",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "unmanaged",
                  "managedStateUnready": [],
                  "protectionState": "full",
                  "protectionStateDetails": [],
                  "tridentVersion": "21.07.2",
                  "tridentManagedState": "managed",
                  "tridentManagedStateDetails": [],
                  "inUse": "false",
                  "clusterType": "kubernetes",
                  "clusterVersion": "1.91.1",
                  "clusterVersionString": "1.19.1",
                  "clusterCreationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "namespaces": [
                    "kube-system",
                    "kube-public",
                    "my-app-1"
                  ],
                  "defaultStorageClass": "31c95aba-99d9-4987-b1bb-000dfce5952c",
                  "cloudID": "548bdc1f-f00e-4a23-a062-83265d224d46",
                  "credentialID": "6fa2f917-f730-41b8-9c15-17f531843b31",
                  "location": "europe-west4",
                  "isMultizonal": "false",
                  "apiServiceID": "6bf33af2-872a-4553-a891-26b510c3edbe",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/cluster_1.4_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/65",
                  "title": "Cluster GET not performed",
                  "detail": "The cluster GET call didn't perform the lookup operation on the cluster.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_65"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cluster"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the cluster is in a managed state, an update to credentialID will eventually trigger another attempt to collect the cluster.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific cluster resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* If the cluster is in a managed state, an update to credentialID will eventually trigger another attempt to collect the cluster.",
          "required": true,
          "content": {
            "application/astra-cluster+json": {
              "example": {
                "type": "application/astra-cluster",
                "version": "1.4"
              },
              "schema": {
                "$ref": "#/components/schemas/cluster_1.4_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the cluster resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_67"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/65",
                  "title": "Cluster GET not performed",
                  "detail": "The cluster GET call didn't perform the lookup operation on the cluster.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_65"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_66"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cluster"
        ],
        "description": "Removes the specified Cluster API resource.\n\n**Side Effects**\n* Internal data structures are cleaned up.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the cluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific cluster resource",
        "responses": {
          "204": {
            "description": "Indicates if the cluster resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/clusterNodes": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "name,instanceType"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the clusterNode resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clusterNodes",
                  "version": "1.0",
                  "items": [
                    [
                      "test-0",
                      "e2-medium"
                    ],
                    [
                      "test-1",
                      "e2-medium"
                    ],
                    [
                      "test-2",
                      "e2-medium"
                    ],
                    [
                      "test-3",
                      "e2-micro"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/clusterNodes/{clusterNode_id}": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns the stored Cluster Node API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "clusterNode_id",
            "in": "path",
            "description": "ID of the clusterNode collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific clusterNode resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cluster Node API resource in the JSON response body.",
            "content": {
              "application/astra-clusterNode+json": {
                "example": {
                  "type": "application/astra-clusterNode",
                  "version": "1.0",
                  "id": "5df0e09f-2c30-5b8a-b6b6-4fb4063525e4",
                  "name": "test-0",
                  "role": "node-role.kubernetes.io/worker",
                  "labels": [],
                  "creationTime": "2020-09-06T04:35:23.593845Z",
                  "externalIP": "192.168.12.44",
                  "internalIP": "10.0.1.1",
                  "zone": "us-west1-c",
                  "region": "us-east1",
                  "instanceType": "e2-medium",
                  "kernelVersion": "4.18.0-147.0.3.el8_1.x86_64",
                  "osImage": "Red Hat Enterprise Linux CoreOS 42.81.20191203.0",
                  "numCpus": "2",
                  "memory": "67108864Ki",
                  "state": "running",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/storageClasses": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the storageClass resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-storageClasses",
                  "version": "1.1",
                  "items": [
                    [
                      "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                      "my-storage-class"
                    ],
                    [
                      "e8507dad-d33f-44b3-9c15-ec55ba6f6473",
                      "standard"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/storageClasses/{storageClass_id}": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns the stored Storage Class API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "storageClass_id",
            "in": "path",
            "description": "ID of the storageClass collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific storageClass resource",
        "responses": {
          "200": {
            "description": "Returns the stored Storage Class API resource in the JSON response body.",
            "content": {
              "application/astra-storageClass+json": {
                "example": {
                  "type": "application/astra-storageClass",
                  "version": "1.1",
                  "id": "ad9be22b-53c7-540c-8647-76afe2878952",
                  "name": "my-storage-class",
                  "provisioner": "csi.trident.netapp.io",
                  "available": "eligible",
                  "allowVolumeExpansion": "true",
                  "reclaimPolicy": "recycle",
                  "volumeBindingMode": "immediate",
                  "isDefault": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,kubernetesLabels"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the namespace resources associated with a specific cluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-namespaces",
                  "version": "1.1",
                  "items": [
                    [
                      "7d451d2f-196e-4234-aee9-7e2376047e63",
                      "kube-system",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ],
                    [
                      "66b0873b-214f-4ac7-89d8-922432f941eb",
                      "jenkins",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/clusters/{cluster_id}/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns the stored Namespace API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "cluster_id",
            "in": "path",
            "description": "ID of the containing cluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "namespace_id",
            "in": "path",
            "description": "ID of the namespace collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific namespace resource",
        "responses": {
          "200": {
            "description": "Returns the stored Namespace API resource in the JSON response body.",
            "content": {
              "application/astra-namespace+json": {
                "example": {
                  "type": "application/astra-namespace",
                  "version": "1.1",
                  "id": "2de811a6-ce8f-512c-9c3a-9585ca66de22",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/namespaces/7d451d2f-196e-4234-aee9-7e2376047e63",
                      "type": "application/vnd.netapp.astra.namespace"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/e0490197-872e-4de8-9287-b04a938e801f/clusters/0f284377-e5dc-4dcd-bacd-3197f2b8a347/namespaces",
                      "type": "application/vnd.netapp.astra.namespaces"
                    }
                  ],
                  "name": "kube-system",
                  "namespaceState": "discovered",
                  "namespaceStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/9",
                      "title": "Namespace Discovered",
                      "detail": "The namespace was discovered in the indicated managed cluster"
                    }
                  ],
                  "kubernetesLabels": [
                    {
                      "name": "app.kubernetes.io/environment",
                      "value": "dev"
                    }
                  ],
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "systemType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,kubernetesLabels"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all namespace resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-namespaces",
                  "version": "1.1",
                  "items": [
                    [
                      "7d451d2f-196e-4234-aee9-7e2376047e63",
                      "kube-system",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ],
                    [
                      "66b0873b-214f-4ac7-89d8-922432f941eb",
                      "jenkins",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns the stored Namespace API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "namespace_id",
            "in": "path",
            "description": "ID of the namespace collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific namespace resource",
        "responses": {
          "200": {
            "description": "Returns the stored Namespace API resource in the JSON response body.",
            "content": {
              "application/astra-namespace+json": {
                "example": {
                  "type": "application/astra-namespace",
                  "version": "1.1",
                  "id": "2de811a6-ce8f-512c-9c3a-9585ca66de22",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/namespaces/7d451d2f-196e-4234-aee9-7e2376047e63",
                      "type": "application/vnd.netapp.astra.namespace"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/e0490197-872e-4de8-9287-b04a938e801f/clusters/0f284377-e5dc-4dcd-bacd-3197f2b8a347/namespaces",
                      "type": "application/vnd.netapp.astra.namespaces"
                    }
                  ],
                  "name": "kube-system",
                  "namespaceState": "discovered",
                  "namespaceStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/9",
                      "title": "Namespace Discovered",
                      "detail": "The namespace was discovered in the indicated managed cluster"
                    }
                  ],
                  "kubernetesLabels": [
                    {
                      "name": "app.kubernetes.io/environment",
                      "value": "dev"
                    }
                  ],
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "systemType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters": {
      "post": {
        "tags": [
          "Managed Cluster"
        ],
        "description": "Indicates desired values for the Managed Cluster API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new managedCluster resource in the managedClusters root collection",
        "requestBody": {
          "description": "Indicates desired values for the Managed Cluster API resource to be created.",
          "required": true,
          "content": {
            "application/astra-managedCluster+json": {
              "example": {
                "type": "application/astra-managedCluster",
                "version": "1.2",
                "id": "6f2fa469-cdae-54be-a451-d0e94a47fa62",
                "defaultStorageClass": "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                "tridentManagedStateDesired": "managed"
              },
              "schema": {
                "$ref": "#/components/schemas/managedCluster_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created managedCluster resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-managedCluster+json": {
                "example": {
                  "type": "application/astra-managedCluster",
                  "version": "1.2",
                  "id": "6f2fa469-cdae-54be-a451-d0e94a47fa62",
                  "name": "GKE-22",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "managed",
                  "managedStateUnready": [],
                  "managedTimestamp": "2020-08-06T12:24:52.256624Z",
                  "protectionState": "full",
                  "protectionStateDetails": [],
                  "tridentVersion": "21.07.2",
                  "tridentManagedState": "managed",
                  "tridentManagedStateDesired": "managed",
                  "tridentManagedStateDetails": [],
                  "inUse": "false",
                  "clusterType": "kubernetes",
                  "clusterVersion": "1.91.1",
                  "clusterVersionString": "1.19.1",
                  "clusterCreationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "namespaces": [
                    "kube-system",
                    "kube-public",
                    "my-app-1"
                  ],
                  "defaultStorageClass": "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                  "cloudID": "548bdc1f-f00e-4a23-a062-83265d224d46",
                  "credentialID": "055e365a-2215-40de-aecb-a4070a7e6f1e",
                  "location": "europe-west4",
                  "isMultizonal": "false",
                  "apiServiceID": "6bf33af2-872a-4553-a891-26b510c3edbe",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/managedCluster_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Managed Cluster"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,managedState"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all managedCluster resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-managedClusters",
                  "version": "1.2",
                  "items": [
                    [
                      "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                      "GKE-21",
                      "managed"
                    ],
                    [
                      "04dc80fa-d1d8-4850-a49f-3b70d0ec1369",
                      "GKE-22",
                      "unmanaged"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/managedCluster_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}": {
      "get": {
        "tags": [
          "Managed Cluster"
        ],
        "description": "Returns the stored Managed Cluster API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the managedCluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific managedCluster resource",
        "responses": {
          "200": {
            "description": "Returns the stored Managed Cluster API resource in the JSON response body.",
            "content": {
              "application/astra-managedCluster+json": {
                "example": {
                  "type": "application/astra-managedCluster",
                  "version": "1.2",
                  "id": "6f2fa469-cdae-54be-a451-d0e94a47fa62",
                  "name": "GKE-22",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "managed",
                  "managedStateUnready": [],
                  "managedTimestamp": "2020-08-06T12:24:52.256624Z",
                  "protectionState": "full",
                  "protectionStateDetails": [],
                  "tridentVersion": "21.07.2",
                  "tridentManagedState": "managed",
                  "tridentManagedStateDesired": "managed",
                  "tridentManagedStateDetails": [],
                  "inUse": "true",
                  "clusterType": "kubernetes",
                  "clusterVersion": "1.91.1",
                  "clusterVersionString": "1.19.1",
                  "clusterCreationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "namespaces": [
                    "kube-system",
                    "kube-public",
                    "my-app-1"
                  ],
                  "defaultStorageClass": "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                  "cloudID": "548bdc1f-f00e-4a23-a062-83265d224d46",
                  "credentialID": "055e365a-2215-40de-aecb-a4070a7e6f1e",
                  "location": "europe-west4",
                  "isMultizonal": "false",
                  "apiServiceID": "6bf33af2-872a-4553-a891-26b510c3edbe",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/managedCluster_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managed Cluster"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* When defaultStorageClass is changed, the Kubernetes default storage class will be updated.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the managedCluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific managedCluster resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* When defaultStorageClass is changed, the Kubernetes default storage class will be updated.",
          "required": true,
          "content": {
            "application/astra-managedCluster+json": {
              "example": {
                "type": "application/astra-managedCluster",
                "version": "1.2",
                "defaultStorageClass": "0b146cda-7fc1-4f32-804c-8130a38a7e1c"
              },
              "schema": {
                "$ref": "#/components/schemas/managedCluster_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the managedCluster resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managed Cluster"
        ],
        "description": "Removes the specified Managed Cluster API resource.\n\n**Side Effects**\n* Internal data structures are cleaned up.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the managedCluster collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific managedCluster resource",
        "responses": {
          "204": {
            "description": "Indicates if the managedCluster resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v2/managedClusters/{managedCluster_id}/apps": {
      "post": {
        "tags": [
          "App"
        ],
        "description": "Indicates the desired values for the App API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new app resource for a specific managedCluster",
        "requestBody": {
          "description": "Indicates the desired values for the App API resource to be created.",
          "required": true,
          "content": {
            "application/astra-app+json": {
              "example": {
                "type": "application/astra-app",
                "version": "2.2",
                "name": "jenkins",
                "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                "namespaceScopedResources": [
                  {
                    "namespace": "production"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/app_2.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created app resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-app+json": {
                "example": {
                  "type": "application/astra-app",
                  "version": "2.2",
                  "id": "39c1c79f-efab-5357-88fb-20e628c4dd96",
                  "links": [],
                  "name": "jenkins",
                  "namespaceScopedResources": [
                    {
                      "namespace": "production",
                      "labelSelectors": []
                    }
                  ],
                  "state": "pending",
                  "stateDetails": [],
                  "protectionState": "none",
                  "protectionStateDetails": [],
                  "namespaces": [
                    "production"
                  ],
                  "clusterName": "GKE-22",
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "clusterType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_147"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_156"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_148"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_151"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_155"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_161"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "App"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the app resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-apps",
                  "version": "2.2",
                  "items": [
                    [
                      "2ff50f4b-fe40-4980-913f-8a4469184822",
                      "mysql",
                      "ready"
                    ],
                    [
                      "ae1e6561-9e22-406c-8a5a-762f4604da00",
                      "jenkins",
                      "ready"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v2/managedClusters/{managedCluster_id}/apps/{app_id}": {
      "get": {
        "tags": [
          "App"
        ],
        "description": "Returns the stored App API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific app resource",
        "responses": {
          "200": {
            "description": "Returns the stored App API resource in the JSON response body.",
            "content": {
              "application/astra-app+json": {
                "example": {
                  "type": "application/astra-app",
                  "version": "2.2",
                  "id": "39c1c79f-efab-5357-88fb-20e628c4dd96",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/topology/v2/managedClusters/6a358976-c3ac-49aa-b043-9c9b425c90ac/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/topology/v1/clouds/892814c9-77a1-46f3-b54a-82c34cdf0032/clusters/6a358976-c3ac-49aa-b043-9c9b425c90ac/namespaces/da78daf6-8e11-4220-a461-6b1d4a6dc231/apps"
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appBackups",
                      "type": "application/astra-appBackup",
                      "title": "disruptiveBackup",
                      "hints": {
                        "allow": [],
                        "permissions": [
                          "appBackup-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appBackups",
                      "type": "application/astra-appBackup",
                      "title": "nonDisruptiveBackup",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appBackup-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps",
                      "type": "application/astra-app",
                      "title": "restore",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "app-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appSnaps",
                      "type": "application/astra-appSnap",
                      "title": "snapshot",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appSnap-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps",
                      "type": "application/astra-app",
                      "title": "clone",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "app-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f",
                      "type": "application/astra-app",
                      "title": "inPlaceRestore",
                      "hints": {
                        "allow": [
                          "PUT"
                        ],
                        "permissions": [
                          "app-update"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appMirrors",
                      "type": "application/astra-appMirror",
                      "title": "replication",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appMirror-create"
                        ]
                      }
                    }
                  ],
                  "name": "jenkins",
                  "namespaceScopedResources": [
                    {
                      "namespace": "production-clone",
                      "labelSelectors": [
                        "app = jenkins,release = production"
                      ]
                    }
                  ],
                  "namespaceMapping": [
                    {
                      "source": "production",
                      "destination": "production-clone"
                    }
                  ],
                  "state": "ready",
                  "stateDetails": [],
                  "protectionState": "none",
                  "protectionStateDetails": [],
                  "namespaces": [
                    "production-clone"
                  ],
                  "snapshotID": "8d561930-0437-4647-b3e6-49b8a5362e3d",
                  "clusterName": "GKE-24",
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "clusterType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "App"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "forceUpdate",
            "in": "header",
            "description": "Flag that enables destructive overwrites. Only include this when requesting an in-place restore (IPR).",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "example": "true"
          }
        ],
        "summary": "Modifies a specific app resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-app+json": {
              "example": {
                "type": "application/astra-app",
                "version": "2.2",
                "name": "mysql-old"
              },
              "schema": {
                "$ref": "#/components/schemas/app_2.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the app resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_147"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_152"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_155"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "App"
        ],
        "description": "Removes the specified App API resource.\n\n**Side Effects**\n* If the application is still running on a cluster, the application is no longer considered to be under management and will no longer appear under /apps.\n* First, the application goes into the deleting state and then deletes all associated schedules, snapshots, backups, and the stored application state.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific app resource",
        "responses": {
          "204": {
            "description": "Indicates if the app resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/91",
                  "title": "Application not deleted",
                  "detail": "The application wasn't deleted because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_91"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/112",
                  "title": "Application not ready",
                  "detail": "The application is currently unavailable.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_112"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_119"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_157"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/apps/{app_id}/appAssets": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "assetType,assetName"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appAsset resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appAssets",
                  "version": "1.1",
                  "items": [
                    [
                      "Pod",
                      "mediawiki-69c6fcf864-2wx6l"
                    ],
                    [
                      "ReplicaSet",
                      "mediawiki-69c6fcf864"
                    ],
                    [
                      "Service",
                      "mediawiki"
                    ],
                    [
                      "Deployment",
                      "mediawiki"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_50"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_46"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/apps/{app_id}/appAssets/{appAsset_id}": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns the stored Application Asset API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appAsset_id",
            "in": "path",
            "description": "ID of the appAsset collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appAsset resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Asset API resource in the JSON response body.",
            "content": {
              "application/astra-appAsset+json": {
                "example": {
                  "type": "application/astra-appAsset",
                  "version": "1.1",
                  "id": "6415e851-b820-553b-9432-ebd057d1917d",
                  "assetType": "Pod",
                  "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "GVK": {
                    "group": "apps",
                    "kind": "Pod",
                    "version": "v1"
                  },
                  "assetID": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6",
                  "labels": [
                    {
                      "name": "app",
                      "value": "mediawiki"
                    },
                    {
                      "name": "pod-template-hash",
                      "value": "69c6fcf864"
                    }
                  ],
                  "assetName": "mediawiki-69c6fcf864-2wx6l",
                  "namespace": "wiki",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/clusterNodes": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "name,instanceType"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the clusterNode resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-clusterNodes",
                  "version": "1.0",
                  "items": [
                    [
                      "test-0",
                      "e2-medium"
                    ],
                    [
                      "test-1",
                      "e2-medium"
                    ],
                    [
                      "test-2",
                      "e2-medium"
                    ],
                    [
                      "test-3",
                      "e2-micro"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/clusterNodes/{clusterNode_id}": {
      "get": {
        "tags": [
          "Cluster Node"
        ],
        "description": "Returns the stored Cluster Node API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "clusterNode_id",
            "in": "path",
            "description": "ID of the clusterNode collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific clusterNode resource",
        "responses": {
          "200": {
            "description": "Returns the stored Cluster Node API resource in the JSON response body.",
            "content": {
              "application/astra-clusterNode+json": {
                "example": {
                  "type": "application/astra-clusterNode",
                  "version": "1.0",
                  "id": "5df0e09f-2c30-5b8a-b6b6-4fb4063525e4",
                  "name": "test-0",
                  "role": "node-role.kubernetes.io/worker",
                  "labels": [],
                  "creationTime": "2020-09-06T04:35:23.593845Z",
                  "externalIP": "192.168.12.44",
                  "internalIP": "10.0.1.1",
                  "zone": "us-west1-c",
                  "region": "us-east1",
                  "instanceType": "e2-medium",
                  "kernelVersion": "4.18.0-147.0.3.el8_1.x86_64",
                  "osImage": "Red Hat Enterprise Linux CoreOS 42.81.20191203.0",
                  "numCpus": "2",
                  "memory": "67108864Ki",
                  "state": "running",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/clusterNode_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/storageClasses": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the storageClass resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-storageClasses",
                  "version": "1.1",
                  "items": [
                    [
                      "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                      "my-storage-class"
                    ],
                    [
                      "e8507dad-d33f-44b3-9c15-ec55ba6f6473",
                      "standard"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/storageClasses/{storageClass_id}": {
      "get": {
        "tags": [
          "Storage Class"
        ],
        "description": "Returns the stored Storage Class API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "storageClass_id",
            "in": "path",
            "description": "ID of the storageClass collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific storageClass resource",
        "responses": {
          "200": {
            "description": "Returns the stored Storage Class API resource in the JSON response body.",
            "content": {
              "application/astra-storageClass+json": {
                "example": {
                  "type": "application/astra-storageClass",
                  "version": "1.1",
                  "id": "ad9be22b-53c7-540c-8647-76afe2878952",
                  "name": "my-storage-class",
                  "provisioner": "csi.trident.netapp.io",
                  "available": "eligible",
                  "allowVolumeExpansion": "true",
                  "reclaimPolicy": "recycle",
                  "volumeBindingMode": "immediate",
                  "isDefault": "true",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageClass_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/volumes": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the volume resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-volumes",
                  "version": "1.2",
                  "items": [
                    [
                      "24fe6e79-bf8d-45c9-96af-ef1d11fbd4a0",
                      "myVolume"
                    ],
                    [
                      "20a370f4-957f-446a-9126-08853d01933a",
                      "secondVol"
                    ],
                    [
                      "48e349a2-5bcd-4c59-896c-12b8240e634b",
                      "smallVol"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/volumes/{volume_id}": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns the stored Volume API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "volume_id",
            "in": "path",
            "description": "ID of the volume collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific volume resource",
        "responses": {
          "200": {
            "description": "Returns the stored Volume API resource in the JSON response body.",
            "content": {
              "application/astra-volume+json": {
                "example": {
                  "type": "application/astra-volume",
                  "version": "1.2",
                  "id": "ab5c9fb8-ddba-526f-8bd3-8d5b72cf4f7f",
                  "name": "myVolume",
                  "state": "ready",
                  "size": "512 GiB",
                  "used": 10000000000,
                  "usedPercentage": 10,
                  "total": 10000000000,
                  "creationToken": "ba7d4e0c-6ae3-4b6e-859d-9463e7ca4b4e",
                  "snapshotPossible": "true",
                  "storageClass": "gold",
                  "pvcName": "myVolume",
                  "internalName": "trident_sd234234_23424_897d_876sd65w",
                  "appsUsing": [],
                  "orchestrator": "trident",
                  "serviceLevel": "gold",
                  "exportPolicy": "astra-vp-default",
                  "nodeId": "94d16dd2-9beb-4edb-ab58-1a00e9a90052",
                  "healthState": "normal",
                  "healthStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,kubernetesLabels"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the namespace resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-namespaces",
                  "version": "1.1",
                  "items": [
                    [
                      "7d451d2f-196e-4234-aee9-7e2376047e63",
                      "kube-system",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ],
                    [
                      "66b0873b-214f-4ac7-89d8-922432f941eb",
                      "jenkins",
                      [
                        {
                          "name": "app.kubernetes.io/environment",
                          "value": "dev"
                        }
                      ]
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "description": "Returns the stored Namespace API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "namespace_id",
            "in": "path",
            "description": "ID of the namespace collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific namespace resource",
        "responses": {
          "200": {
            "description": "Returns the stored Namespace API resource in the JSON response body.",
            "content": {
              "application/astra-namespace+json": {
                "example": {
                  "type": "application/astra-namespace",
                  "version": "1.1",
                  "id": "2de811a6-ce8f-512c-9c3a-9585ca66de22",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/namespaces/7d451d2f-196e-4234-aee9-7e2376047e63",
                      "type": "application/vnd.netapp.astra.namespace"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/e0490197-872e-4de8-9287-b04a938e801f/clusters/0f284377-e5dc-4dcd-bacd-3197f2b8a347/namespaces",
                      "type": "application/vnd.netapp.astra.namespaces"
                    }
                  ],
                  "name": "kube-system",
                  "namespaceState": "discovered",
                  "namespaceStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/9",
                      "title": "Namespace Discovered",
                      "detail": "The namespace was discovered in the indicated managed cluster"
                    }
                  ],
                  "kubernetesLabels": [
                    {
                      "name": "app.kubernetes.io/environment",
                      "value": "dev"
                    }
                  ],
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "systemType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/namespace_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/apiResources": {
      "get": {
        "tags": [
          "Kubernetes API Resource"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,kind,apiVersion"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the apiResource resources associated with a specific managedCluster",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-apiResources",
                  "version": "1.0",
                  "items": [
                    [
                      "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                      "ClusterRole",
                      "rbac.authorization.k8s.io/v1"
                    ],
                    [
                      "e8507dad-d33f-44b3-9c15-ec55ba6f6473",
                      "ClusterRoleBinding",
                      "rbac.authorization.k8s.io/v1"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apiResource_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/managedClusters/{managedCluster_id}/apiResources/{apiResource_id}": {
      "get": {
        "tags": [
          "Kubernetes API Resource"
        ],
        "description": "Returns the specific API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "managedCluster_id",
            "in": "path",
            "description": "ID of the containing managedCluster resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "apiResource_id",
            "in": "path",
            "description": "ID of the apiResource collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific apiResource resource",
        "responses": {
          "200": {
            "description": "Returns the specific API resource in the JSON response body.",
            "content": {
              "application/astra-apiResource+json": {
                "example": {
                  "type": "application/astra-apiResource",
                  "version": "1.0",
                  "id": "e280ff62-be35-4f31-a31b-a210a1ad1b33",
                  "kind": "ClusterRole",
                  "apiVersion": "rbac.authorization.k8s.io/v1",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/apiResource_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/storageBackends": {
      "post": {
        "tags": [
          "Storage Backend"
        ],
        "description": "Indicates desired values for the Storage Backend API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new storageBackend resource in the storageBackends root collection",
        "requestBody": {
          "description": "Indicates desired values for the Storage Backend API resource to be created.",
          "required": true,
          "content": {
            "application/astra-storageBackend+json": {
              "example": {
                "type": "application/astra-storageBackend",
                "version": "1.3",
                "backendName": "st1-45",
                "backendType": "ontap",
                "backendCredentialsName": "st1-45-cred"
              },
              "schema": {
                "$ref": "#/components/schemas/storageBackend_1.3_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created storageBackend resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-storageBackend+json": {
                "example": {
                  "type": "application/astra-storageBackend",
                  "version": "1.3",
                  "id": "04ad4237-3c89-5ca5-8a40-282ab5eb6428",
                  "backendName": "st1-45",
                  "backendType": "ontap",
                  "backendVersion": "9.8",
                  "backendCredentialsName": "st1-45-cred",
                  "state": "running",
                  "stateUnready": [],
                  "managedState": "managed",
                  "managedStateUnready": [],
                  "protectionState": "unknown",
                  "protectionStateUnready": [
                    "Waiting for storage backend discovery"
                  ],
                  "ontap": {
                    "authenticationStyle": "basic",
                    "backendManagementIP": "10.193.179.105",
                    "managementIPs": [
                      "10.193.188.110",
                      "10.193.179.105",
                      "10.193.179.106"
                    ]
                  },
                  "capabilities": {
                    "flexClone": "true",
                    "snapMirror": "true",
                    "s3": "true"
                  },
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageBackend_1.3_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Storage Backend"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists all storageBackend resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-storageBackends",
                  "version": "1.3",
                  "items": [
                    [
                      "d6ee1e51-d65f-415a-a3d4-6d7fa8b64943",
                      "st1-45",
                      "running"
                    ],
                    [
                      "a5c508b7-aacd-4d19-9455-53c0d183ab4e",
                      "st2-67",
                      "discovered"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageBackend_1.3_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/storageBackends/{storageBackend_id}": {
      "get": {
        "tags": [
          "Storage Backend"
        ],
        "description": "Returns the stored Storage Backend API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "storageBackend_id",
            "in": "path",
            "description": "ID of the storageBackend collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific storageBackend resource",
        "responses": {
          "200": {
            "description": "Returns the stored Storage Backend API resource in the JSON response body.",
            "content": {
              "application/astra-storageBackend+json": {
                "example": {
                  "type": "application/astra-storageBackend",
                  "version": "1.3",
                  "id": "04ad4237-3c89-5ca5-8a40-282ab5eb6428",
                  "backendName": "st1-45",
                  "backendType": "ontap",
                  "backendVersion": "9.8",
                  "backendCredentialsName": "st1-45-cred",
                  "state": "discovered",
                  "stateUnready": [],
                  "managedState": "unmanaged",
                  "managedStateUnready": [],
                  "protectionState": "unknown",
                  "protectionStateUnready": [
                    "Waiting for storage backend discovery"
                  ],
                  "capabilities": {
                    "flexClone": "true",
                    "snapMirror": "true",
                    "s3": "true"
                  },
                  "ontap": {
                    "authenticationStyle": "basic",
                    "backendManagementIP": "10.193.179.105",
                    "managementIPs": [
                      "10.193.188.110",
                      "10.193.179.105",
                      "10.193.179.106"
                    ]
                  },
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/storageBackend_1.3_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage Backend"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Specifying a configuration version results in storage backend type-specific configuration changes being applied, which can include the initial installation of a storage backend.\n* Specifying a configuration version might result in storageClass resources being added, modified, or removed.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "storageBackend_id",
            "in": "path",
            "description": "ID of the storageBackend collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific storageBackend resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Specifying a configuration version results in storage backend type-specific configuration changes being applied, which can include the initial installation of a storage backend.\n* Specifying a configuration version might result in storageClass resources being added, modified, or removed.",
          "required": true,
          "content": {
            "application/astra-storageBackend+json": {
              "example": {
                "type": "application/astra-storageBackend",
                "version": "1.3",
                "backendName": "st1-46"
              },
              "schema": {
                "$ref": "#/components/schemas/storageBackend_1.3_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the storageBackend resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage Backend"
        ],
        "description": "Removes the specified Storage Backend API resource.\n\n**Side Effects**\n* All backendConfig resources associated with the storage backend are removed.\n* All backendNode resources associated with the storage backend are removed.\n* The storage backend might be removed.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "storageBackend_id",
            "in": "path",
            "description": "ID of the storageBackend collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific storageBackend resource",
        "responses": {
          "204": {
            "description": "Indicates if the storageBackend resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/storageBackends/{storageBackend_id}/volumes": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "storageBackend_id",
            "in": "path",
            "description": "ID of the containing storageBackend resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the volume resources associated with a specific storageBackend",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-volumes",
                  "version": "1.2",
                  "items": [
                    [
                      "24fe6e79-bf8d-45c9-96af-ef1d11fbd4a0",
                      "myVolume"
                    ],
                    [
                      "20a370f4-957f-446a-9126-08853d01933a",
                      "secondVol"
                    ],
                    [
                      "48e349a2-5bcd-4c59-896c-12b8240e634b",
                      "smallVol"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/storageBackends/{storageBackend_id}/volumes/{volume_id}": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns the stored Volume API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "storageBackend_id",
            "in": "path",
            "description": "ID of the containing storageBackend resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "volume_id",
            "in": "path",
            "description": "ID of the volume collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific volume resource",
        "responses": {
          "200": {
            "description": "Returns the stored Volume API resource in the JSON response body.",
            "content": {
              "application/astra-volume+json": {
                "example": {
                  "type": "application/astra-volume",
                  "version": "1.2",
                  "id": "ab5c9fb8-ddba-526f-8bd3-8d5b72cf4f7f",
                  "name": "myVolume",
                  "state": "ready",
                  "size": "512 GiB",
                  "used": 10000000000,
                  "usedPercentage": 10,
                  "total": 10000000000,
                  "creationToken": "ba7d4e0c-6ae3-4b6e-859d-9463e7ca4b4e",
                  "snapshotPossible": "true",
                  "storageClass": "gold",
                  "pvcName": "myVolume",
                  "internalName": "trident_sd234234_23424_897d_876sd65w",
                  "appsUsing": [],
                  "orchestrator": "trident",
                  "serviceLevel": "gold",
                  "exportPolicy": "astra-vp-default",
                  "nodeId": "94d16dd2-9beb-4edb-ab58-1a00e9a90052",
                  "healthState": "normal",
                  "healthStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/volumes": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists all volume resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-volumes",
                  "version": "1.2",
                  "items": [
                    [
                      "24fe6e79-bf8d-45c9-96af-ef1d11fbd4a0",
                      "myVolume"
                    ],
                    [
                      "20a370f4-957f-446a-9126-08853d01933a",
                      "secondVol"
                    ],
                    [
                      "48e349a2-5bcd-4c59-896c-12b8240e634b",
                      "smallVol"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/topology/v1/volumes/{volume_id}": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns the stored Volume API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "volume_id",
            "in": "path",
            "description": "ID of the volume collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific volume resource",
        "responses": {
          "200": {
            "description": "Returns the stored Volume API resource in the JSON response body.",
            "content": {
              "application/astra-volume+json": {
                "example": {
                  "type": "application/astra-volume",
                  "version": "1.2",
                  "id": "ab5c9fb8-ddba-526f-8bd3-8d5b72cf4f7f",
                  "name": "myVolume",
                  "state": "ready",
                  "size": "512 GiB",
                  "used": 10000000000,
                  "usedPercentage": 10,
                  "total": 10000000000,
                  "creationToken": "ba7d4e0c-6ae3-4b6e-859d-9463e7ca4b4e",
                  "snapshotPossible": "true",
                  "storageClass": "gold",
                  "pvcName": "myVolume",
                  "internalName": "trident_sd234234_23424_897d_876sd65w",
                  "appsUsing": [],
                  "orchestrator": "trident",
                  "serviceLevel": "gold",
                  "exportPolicy": "astra-vp-default",
                  "nodeId": "94d16dd2-9beb-4edb-ab58-1a00e9a90052",
                  "healthState": "normal",
                  "healthStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/appMirrors": {
      "post": {
        "tags": [
          "AppMirror"
        ],
        "description": "Indicates the desired values for the AppMirror API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new appMirror resource in the appMirrors root collection",
        "requestBody": {
          "description": "Indicates the desired values for the AppMirror API resource to be created.",
          "required": true,
          "content": {
            "application/astra-appMirror+json": {
              "example": {
                "type": "application/astra-appMirror",
                "version": "1.0",
                "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                "stateDesired": "established"
              },
              "schema": {
                "$ref": "#/components/schemas/appMirror_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created appMirror resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-appMirror+json": {
                "example": {
                  "type": "application/astra-appMirror",
                  "version": "1.0",
                  "id": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253",
                  "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                  "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                  "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                  "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                  "state": "establishing",
                  "stateTransitions": [
                    {
                      "from": "establishing",
                      "to": [
                        "established",
                        "deleting"
                      ]
                    },
                    {
                      "from": "established",
                      "to": [
                        "failingOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failingOver",
                      "to": [
                        "failedOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failedOver",
                      "to": [
                        "establishing",
                        "deleting"
                      ]
                    },
                    {
                      "from": "deleting",
                      "to": [
                        "deleted"
                      ]
                    }
                  ],
                  "stateDesired": "established",
                  "stateAllowed": [
                    "deleted"
                  ],
                  "stateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/3",
                      "title": "AppMirror is being established",
                      "detail": "The AppMirror relationship is in the process of being established."
                    }
                  ],
                  "healthState": "warning",
                  "healthStateTransitions": [
                    {
                      "from": "indeterminate",
                      "to": [
                        "normal",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "normal",
                      "to": [
                        "indeterminate",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "warning",
                      "to": [
                        "indeterminate",
                        "normal",
                        "critical"
                      ]
                    },
                    {
                      "from": "critical",
                      "to": [
                        "indeterminate",
                        "normal",
                        "warning"
                      ]
                    }
                  ],
                  "healthStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/4",
                      "title": "AppMirror not yet established",
                      "detail": "The relationship is in the process of being established, so it's not protecting the app data yet."
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_150"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppMirror"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all appMirror resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appMirrors",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-appMirror",
                      "version": "1.0",
                      "id": "f1c98c2e-6391-42d3-8b21-3e75dac048a3",
                      "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                      "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                      "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                      "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                      "namespaceMapping": [
                        {
                          "clusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                          "namespaces": [
                            "ns1-src",
                            "ns2-src"
                          ]
                        },
                        {
                          "clusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                          "namespaces": [
                            "ns1-dest",
                            "ns2-dest"
                          ]
                        }
                      ],
                      "state": "established",
                      "stateTransitions": [
                        {
                          "from": "establishing",
                          "to": [
                            "established",
                            "deleting"
                          ]
                        },
                        {
                          "from": "established",
                          "to": [
                            "failingOver",
                            "deleting"
                          ]
                        },
                        {
                          "from": "failingOver",
                          "to": [
                            "failedOver",
                            "deleting"
                          ]
                        },
                        {
                          "from": "failedOver",
                          "to": [
                            "establishing",
                            "deleting"
                          ]
                        },
                        {
                          "from": "deleting",
                          "to": [
                            "deleted"
                          ]
                        }
                      ],
                      "stateDesired": "established",
                      "stateAllowed": [
                        "failedOver",
                        "deleted"
                      ],
                      "stateDetails": [
                        {
                          "type": "https://astra.netapp.io/stateDetails/1",
                          "title": "AppMirror relationship established",
                          "detail": "The AppMirror relationship has been successfully established."
                        }
                      ],
                      "healthState": "normal",
                      "healthStateTransitions": [
                        {
                          "from": "indeterminate",
                          "to": [
                            "normal",
                            "warning",
                            "critical"
                          ]
                        },
                        {
                          "from": "normal",
                          "to": [
                            "indeterminate",
                            "warning",
                            "critical"
                          ]
                        },
                        {
                          "from": "warning",
                          "to": [
                            "indeterminate",
                            "normal",
                            "critical"
                          ]
                        },
                        {
                          "from": "critical",
                          "to": [
                            "indeterminate",
                            "normal",
                            "warning"
                          ]
                        }
                      ],
                      "healthStateDetails": [
                        {
                          "type": "https://astra.netapp.io/stateDetails/2",
                          "title": "SnapMirror syncing successfully",
                          "detail": "All SnapMirror relationships are synchronizing as expected."
                        }
                      ],
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/appMirrors/{appMirror_id}": {
      "get": {
        "tags": [
          "AppMirror"
        ],
        "description": "Returns the stored AppMirror API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appMirror resource",
        "responses": {
          "200": {
            "description": "Returns the stored AppMirror API resource in the JSON response body.",
            "content": {
              "application/astra-appMirror+json": {
                "example": {
                  "type": "application/astra-appMirror",
                  "version": "1.0",
                  "id": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253",
                  "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                  "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                  "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                  "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                  "namespaceMapping": [
                    {
                      "clusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                      "namespaces": [
                        "ns1-src",
                        "ns2-src"
                      ]
                    },
                    {
                      "clusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                      "namespaces": [
                        "ns1-dest",
                        "ns2-dest"
                      ]
                    }
                  ],
                  "state": "established",
                  "stateTransitions": [
                    {
                      "from": "establishing",
                      "to": [
                        "established",
                        "deleting"
                      ]
                    },
                    {
                      "from": "established",
                      "to": [
                        "failingOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failingOver",
                      "to": [
                        "failedOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failedOver",
                      "to": [
                        "establishing",
                        "deleting"
                      ]
                    },
                    {
                      "from": "deleting",
                      "to": [
                        "deleted"
                      ]
                    }
                  ],
                  "stateDesired": "established",
                  "stateAllowed": [
                    "failedOver",
                    "deleted"
                  ],
                  "stateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/1",
                      "title": "AppMirror relationship established",
                      "detail": "The AppMirror relationship has been successfully established."
                    }
                  ],
                  "healthState": "normal",
                  "healthStateTransitions": [
                    {
                      "from": "indeterminate",
                      "to": [
                        "normal",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "normal",
                      "to": [
                        "indeterminate",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "warning",
                      "to": [
                        "indeterminate",
                        "normal",
                        "critical"
                      ]
                    },
                    {
                      "from": "critical",
                      "to": [
                        "indeterminate",
                        "normal",
                        "warning"
                      ]
                    }
                  ],
                  "healthStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/2",
                      "title": "SnapMirror syncing successfully",
                      "detail": "All SnapMirror relationships are synchronizing as expected."
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppMirror"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Various side effects based on desiredState.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific appMirror resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Various side effects based on desiredState.",
          "required": true,
          "content": {
            "application/astra-appMirror+json": {
              "example": {
                "type": "application/astra-appMirror",
                "version": "1.0",
                "stateDesired": "failedOver"
              },
              "schema": {
                "$ref": "#/components/schemas/appMirror_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the appMirror resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppMirror"
        ],
        "description": "Removes the specified AppMirror API resource.\nStarts a process to asynchronously remove the AppMirror resource, along with any resources on the source and destination clusters that were created as a result of the AppMirror relationship. The resources removed are dependent on the state of the relationship at the time of deletion.\n\n**Side Effects**\n* The stateDesired field is set to \"deleted\".\n* The state field is set to \"deleting\".\n* If state is \"established\", the TridentMirrorRelationships and PersistentVolumeClaims created by the AppMirror relationship will be deleted.\n* If state is \"failedOver\", the TridentMirrorRelationships created by the AppMirror relationship will be deleted and the PersistentVolumeClaims in the destination application will be left in place.\n* When the asynchronous delete operation is completed, the AppMirror API resource will be removed from both the source and destination applications.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific appMirror resource",
        "responses": {
          "204": {
            "description": "Indicates if the appMirror resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v2/apps": {
      "post": {
        "tags": [
          "App"
        ],
        "description": "Indicates the desired values for the App API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          }
        ],
        "summary": "Creates a new app resource in the apps root collection",
        "requestBody": {
          "description": "Indicates the desired values for the App API resource to be created.",
          "required": true,
          "content": {
            "application/astra-app+json": {
              "example": {
                "type": "application/astra-app",
                "version": "2.2",
                "name": "jenkins",
                "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                "namespaceScopedResources": [
                  {
                    "namespace": "production"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/app_2.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created app resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-app+json": {
                "example": {
                  "type": "application/astra-app",
                  "version": "2.2",
                  "id": "39c1c79f-efab-5357-88fb-20e628c4dd96",
                  "links": [],
                  "name": "jenkins",
                  "namespaceScopedResources": [
                    {
                      "namespace": "production",
                      "labelSelectors": []
                    }
                  ],
                  "state": "pending",
                  "stateDetails": [],
                  "protectionState": "none",
                  "protectionStateDetails": [],
                  "namespaces": [
                    "production"
                  ],
                  "clusterName": "GKE-22",
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "clusterType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_147"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_156"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_148"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_151"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_155"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_161"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "App"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all app resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-apps",
                  "version": "2.2",
                  "items": [
                    [
                      "2ff50f4b-fe40-4980-913f-8a4469184822",
                      "mysql",
                      "ready"
                    ],
                    [
                      "ae1e6561-9e22-406c-8a5a-762f4604da00",
                      "jenkins",
                      "ready"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v2/apps/{app_id}": {
      "get": {
        "tags": [
          "App"
        ],
        "description": "Returns the stored App API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific app resource",
        "responses": {
          "200": {
            "description": "Returns the stored App API resource in the JSON response body.",
            "content": {
              "application/astra-app+json": {
                "example": {
                  "type": "application/astra-app",
                  "version": "2.2",
                  "id": "39c1c79f-efab-5357-88fb-20e628c4dd96",
                  "links": [
                    {
                      "rel": "canonical",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/topology/v2/managedClusters/6a358976-c3ac-49aa-b043-9c9b425c90ac/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f"
                    },
                    {
                      "rel": "collection",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/topology/v1/clouds/892814c9-77a1-46f3-b54a-82c34cdf0032/clusters/6a358976-c3ac-49aa-b043-9c9b425c90ac/namespaces/da78daf6-8e11-4220-a461-6b1d4a6dc231/apps"
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appBackups",
                      "type": "application/astra-appBackup",
                      "title": "disruptiveBackup",
                      "hints": {
                        "allow": [],
                        "permissions": [
                          "appBackup-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appBackups",
                      "type": "application/astra-appBackup",
                      "title": "nonDisruptiveBackup",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appBackup-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps",
                      "type": "application/astra-app",
                      "title": "restore",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "app-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appSnaps",
                      "type": "application/astra-appSnap",
                      "title": "snapshot",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appSnap-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps",
                      "type": "application/astra-app",
                      "title": "clone",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "app-create"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v2/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f",
                      "type": "application/astra-app",
                      "title": "inPlaceRestore",
                      "hints": {
                        "allow": [
                          "PUT"
                        ],
                        "permissions": [
                          "app-update"
                        ]
                      }
                    },
                    {
                      "rel": "related",
                      "href": "/accounts/652f7a18-d4ed-47b2-b467-15bf2154d079/k8s/v1/apps/27467088-2e99-4bd8-aa9b-014d5f44a62f/appMirrors",
                      "type": "application/astra-appMirror",
                      "title": "replication",
                      "hints": {
                        "allow": [
                          "POST"
                        ],
                        "permissions": [
                          "appMirror-create"
                        ]
                      }
                    }
                  ],
                  "name": "jenkins",
                  "namespaceScopedResources": [
                    {
                      "namespace": "production-clone",
                      "labelSelectors": [
                        "app = jenkins,release = production"
                      ]
                    }
                  ],
                  "namespaceMapping": [
                    {
                      "source": "production",
                      "destination": "production-clone"
                    }
                  ],
                  "state": "ready",
                  "stateDetails": [],
                  "protectionState": "none",
                  "protectionStateDetails": [],
                  "namespaces": [
                    "production-clone"
                  ],
                  "snapshotID": "8d561930-0437-4647-b3e6-49b8a5362e3d",
                  "clusterName": "GKE-24",
                  "clusterID": "0f284377-e5dc-4dcd-bacd-3197f2b8a347",
                  "clusterType": "kubernetes",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/app_2.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "App"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "forceUpdate",
            "in": "header",
            "description": "Flag that enables destructive overwrites. Only include this when requesting an in-place restore (IPR).",
            "schema": {
              "type": "string",
              "enum": [
                "true"
              ]
            },
            "example": "true"
          }
        ],
        "summary": "Modifies a specific app resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-app+json": {
              "example": {
                "type": "application/astra-app",
                "version": "2.2",
                "name": "mysql-old"
              },
              "schema": {
                "$ref": "#/components/schemas/app_2.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the app resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_147"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_152"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_155"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "App"
        ],
        "description": "Removes the specified App API resource.\n\n**Side Effects**\n* If the application is still running on a cluster, the application is no longer considered to be under management and will no longer appear under /apps.\n* First, the application goes into the deleting state and then deletes all associated schedules, snapshots, backups, and the stored application state.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific app resource",
        "responses": {
          "204": {
            "description": "Indicates if the app resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/91",
                  "title": "Application not deleted",
                  "detail": "The application wasn't deleted because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_91"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/112",
                  "title": "Application not ready",
                  "detail": "The application is currently unavailable.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_112"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_119"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_157"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appAssets": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "assetType,assetName"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appAsset resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appAssets",
                  "version": "1.1",
                  "items": [
                    [
                      "Pod",
                      "mediawiki-69c6fcf864-2wx6l"
                    ],
                    [
                      "ReplicaSet",
                      "mediawiki-69c6fcf864"
                    ],
                    [
                      "Service",
                      "mediawiki"
                    ],
                    [
                      "Deployment",
                      "mediawiki"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_50"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_46"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appAssets/{appAsset_id}": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns the stored Application Asset API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appAsset_id",
            "in": "path",
            "description": "ID of the appAsset collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appAsset resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Asset API resource in the JSON response body.",
            "content": {
              "application/astra-appAsset+json": {
                "example": {
                  "type": "application/astra-appAsset",
                  "version": "1.1",
                  "id": "6415e851-b820-553b-9432-ebd057d1917d",
                  "assetType": "Pod",
                  "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "GVK": {
                    "group": "apps",
                    "kind": "Pod",
                    "version": "v1"
                  },
                  "assetID": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6",
                  "labels": [
                    {
                      "name": "app",
                      "value": "mediawiki"
                    },
                    {
                      "name": "pod-template-hash",
                      "value": "69c6fcf864"
                    }
                  ],
                  "assetName": "mediawiki-69c6fcf864-2wx6l",
                  "namespace": "wiki",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appMirrors": {
      "post": {
        "tags": [
          "AppMirror"
        ],
        "description": "Indicates the desired values for the AppMirror API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new appMirror resource for a specific app",
        "requestBody": {
          "description": "Indicates the desired values for the AppMirror API resource to be created.",
          "required": true,
          "content": {
            "application/astra-appMirror+json": {
              "example": {
                "type": "application/astra-appMirror",
                "version": "1.0",
                "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                "stateDesired": "established"
              },
              "schema": {
                "$ref": "#/components/schemas/appMirror_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created appMirror resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-appMirror+json": {
                "example": {
                  "type": "application/astra-appMirror",
                  "version": "1.0",
                  "id": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253",
                  "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                  "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                  "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                  "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                  "state": "establishing",
                  "stateTransitions": [
                    {
                      "from": "establishing",
                      "to": [
                        "established",
                        "deleting"
                      ]
                    },
                    {
                      "from": "established",
                      "to": [
                        "failingOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failingOver",
                      "to": [
                        "failedOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failedOver",
                      "to": [
                        "establishing",
                        "deleting"
                      ]
                    },
                    {
                      "from": "deleting",
                      "to": [
                        "deleted"
                      ]
                    }
                  ],
                  "stateDesired": "established",
                  "stateAllowed": [
                    "deleted"
                  ],
                  "stateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/3",
                      "title": "AppMirror is being established",
                      "detail": "The AppMirror relationship is in the process of being established."
                    }
                  ],
                  "healthState": "warning",
                  "healthStateTransitions": [
                    {
                      "from": "indeterminate",
                      "to": [
                        "normal",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "normal",
                      "to": [
                        "indeterminate",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "warning",
                      "to": [
                        "indeterminate",
                        "normal",
                        "critical"
                      ]
                    },
                    {
                      "from": "critical",
                      "to": [
                        "indeterminate",
                        "normal",
                        "warning"
                      ]
                    }
                  ],
                  "healthStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/4",
                      "title": "AppMirror not yet established",
                      "detail": "The relationship is in the process of being established, so it's not protecting the app data yet."
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_150"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppMirror"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the appMirror resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appMirrors",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-appMirror",
                      "version": "1.0",
                      "id": "f1c98c2e-6391-42d3-8b21-3e75dac048a3",
                      "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                      "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                      "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                      "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                      "namespaceMapping": [
                        {
                          "clusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                          "namespaces": [
                            "ns1-src",
                            "ns2-src"
                          ]
                        },
                        {
                          "clusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                          "namespaces": [
                            "ns1-dest",
                            "ns2-dest"
                          ]
                        }
                      ],
                      "state": "established",
                      "stateTransitions": [
                        {
                          "from": "establishing",
                          "to": [
                            "established",
                            "deleting"
                          ]
                        },
                        {
                          "from": "established",
                          "to": [
                            "failingOver",
                            "deleting"
                          ]
                        },
                        {
                          "from": "failingOver",
                          "to": [
                            "failedOver",
                            "deleting"
                          ]
                        },
                        {
                          "from": "failedOver",
                          "to": [
                            "establishing",
                            "deleting"
                          ]
                        },
                        {
                          "from": "deleting",
                          "to": [
                            "deleted"
                          ]
                        }
                      ],
                      "stateDesired": "established",
                      "stateAllowed": [
                        "failedOver",
                        "deleted"
                      ],
                      "stateDetails": [
                        {
                          "type": "https://astra.netapp.io/stateDetails/1",
                          "title": "AppMirror relationship established",
                          "detail": "The AppMirror relationship has been successfully established."
                        }
                      ],
                      "healthState": "normal",
                      "healthStateTransitions": [
                        {
                          "from": "indeterminate",
                          "to": [
                            "normal",
                            "warning",
                            "critical"
                          ]
                        },
                        {
                          "from": "normal",
                          "to": [
                            "indeterminate",
                            "warning",
                            "critical"
                          ]
                        },
                        {
                          "from": "warning",
                          "to": [
                            "indeterminate",
                            "normal",
                            "critical"
                          ]
                        },
                        {
                          "from": "critical",
                          "to": [
                            "indeterminate",
                            "normal",
                            "warning"
                          ]
                        }
                      ],
                      "healthStateDetails": [
                        {
                          "type": "https://astra.netapp.io/stateDetails/2",
                          "title": "SnapMirror syncing successfully",
                          "detail": "All SnapMirror relationships are synchronizing as expected."
                        }
                      ],
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "11c0cfa1-4f27-4ef7-a21c-cb452fc5c9aa"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appMirrors/{appMirror_id}": {
      "get": {
        "tags": [
          "AppMirror"
        ],
        "description": "Returns the stored AppMirror API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appMirror resource",
        "responses": {
          "200": {
            "description": "Returns the stored AppMirror API resource in the JSON response body.",
            "content": {
              "application/astra-appMirror+json": {
                "example": {
                  "type": "application/astra-appMirror",
                  "version": "1.0",
                  "id": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253",
                  "sourceAppID": "efd639b6-fc92-4112-8841-0c0ab7890ae0",
                  "sourceClusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                  "destinationAppID": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b",
                  "destinationClusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                  "namespaceMapping": [
                    {
                      "clusterID": "5789e026-c2e2-41e9-ab00-9766bcfa8951",
                      "namespaces": [
                        "ns1-src",
                        "ns2-src"
                      ]
                    },
                    {
                      "clusterID": "c5d023a9-4061-4a8a-bfbf-3be11ff06226",
                      "namespaces": [
                        "ns1-dest",
                        "ns2-dest"
                      ]
                    }
                  ],
                  "state": "established",
                  "stateTransitions": [
                    {
                      "from": "establishing",
                      "to": [
                        "established",
                        "deleting"
                      ]
                    },
                    {
                      "from": "established",
                      "to": [
                        "failingOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failingOver",
                      "to": [
                        "failedOver",
                        "deleting"
                      ]
                    },
                    {
                      "from": "failedOver",
                      "to": [
                        "establishing",
                        "deleting"
                      ]
                    },
                    {
                      "from": "deleting",
                      "to": [
                        "deleted"
                      ]
                    }
                  ],
                  "stateDesired": "established",
                  "stateAllowed": [
                    "failedOver",
                    "deleted"
                  ],
                  "stateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/1",
                      "title": "AppMirror relationship established",
                      "detail": "The AppMirror relationship has been successfully established."
                    }
                  ],
                  "healthState": "normal",
                  "healthStateTransitions": [
                    {
                      "from": "indeterminate",
                      "to": [
                        "normal",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "normal",
                      "to": [
                        "indeterminate",
                        "warning",
                        "critical"
                      ]
                    },
                    {
                      "from": "warning",
                      "to": [
                        "indeterminate",
                        "normal",
                        "critical"
                      ]
                    },
                    {
                      "from": "critical",
                      "to": [
                        "indeterminate",
                        "normal",
                        "warning"
                      ]
                    }
                  ],
                  "healthStateDetails": [
                    {
                      "type": "https://astra.netapp.io/stateDetails/2",
                      "title": "SnapMirror syncing successfully",
                      "detail": "All SnapMirror relationships are synchronizing as expected."
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appMirror_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppMirror"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Various side effects based on desiredState.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific appMirror resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Various side effects based on desiredState.",
          "required": true,
          "content": {
            "application/astra-appMirror+json": {
              "example": {
                "type": "application/astra-appMirror",
                "version": "1.0",
                "stateDesired": "failedOver"
              },
              "schema": {
                "$ref": "#/components/schemas/appMirror_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the appMirror resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppMirror"
        ],
        "description": "Removes the specified AppMirror API resource.\nStarts a process to asynchronously remove the AppMirror resource, along with any resources on the source and destination clusters that were created as a result of the AppMirror relationship. The resources removed are dependent on the state of the relationship at the time of deletion.\n\n**Side Effects**\n* The stateDesired field is set to \"deleted\".\n* The state field is set to \"deleting\".\n* If state is \"established\", the TridentMirrorRelationships and PersistentVolumeClaims created by the AppMirror relationship will be deleted.\n* If state is \"failedOver\", the TridentMirrorRelationships created by the AppMirror relationship will be deleted and the PersistentVolumeClaims in the destination application will be left in place.\n* When the asynchronous delete operation is completed, the AppMirror API resource will be removed from both the source and destination applications.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appMirror_id",
            "in": "path",
            "description": "ID of the appMirror collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific appMirror resource",
        "responses": {
          "204": {
            "description": "Indicates if the appMirror resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/volumes": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the volume resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-volumes",
                  "version": "1.2",
                  "items": [
                    [
                      "24fe6e79-bf8d-45c9-96af-ef1d11fbd4a0",
                      "myVolume"
                    ],
                    [
                      "20a370f4-957f-446a-9126-08853d01933a",
                      "secondVol"
                    ],
                    [
                      "48e349a2-5bcd-4c59-896c-12b8240e634b",
                      "smallVol"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/volumes/{volume_id}": {
      "get": {
        "tags": [
          "Volume"
        ],
        "description": "Returns the stored Volume API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "volume_id",
            "in": "path",
            "description": "ID of the volume collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific volume resource",
        "responses": {
          "200": {
            "description": "Returns the stored Volume API resource in the JSON response body.",
            "content": {
              "application/astra-volume+json": {
                "example": {
                  "type": "application/astra-volume",
                  "version": "1.2",
                  "id": "ab5c9fb8-ddba-526f-8bd3-8d5b72cf4f7f",
                  "name": "myVolume",
                  "state": "ready",
                  "size": "512 GiB",
                  "used": 10000000000,
                  "usedPercentage": 10,
                  "total": 10000000000,
                  "creationToken": "ba7d4e0c-6ae3-4b6e-859d-9463e7ca4b4e",
                  "snapshotPossible": "true",
                  "storageClass": "gold",
                  "pvcName": "myVolume",
                  "internalName": "trident_sd234234_23424_897d_876sd65w",
                  "appsUsing": [],
                  "orchestrator": "trident",
                  "serviceLevel": "gold",
                  "exportPolicy": "astra-vp-default",
                  "nodeId": "94d16dd2-9beb-4edb-ab58-1a00e9a90052",
                  "healthState": "normal",
                  "healthStateDetails": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/volume_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/schedules": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "description": "Indicates desired values for the Schedule API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new schedule resource for a specific app",
        "requestBody": {
          "description": "Indicates desired values for the Schedule API resource to be created.",
          "required": true,
          "content": {
            "application/astra-schedule+json": {
              "example": {
                "type": "application/astra-schedule",
                "version": "1.3",
                "name": "Backup Schedule",
                "enabled": "true",
                "granularity": "monthly",
                "minute": "0",
                "hour": "0",
                "dayOfMonth": "1",
                "snapshotRetention": "12",
                "backupRetention": "12"
              },
              "schema": {
                "$ref": "#/components/schemas/schedule_1.3_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created schedule resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-schedule+json": {
                "example": {
                  "type": "application/astra-schedule",
                  "version": "1.3",
                  "id": "49cbc480-5f7d-51e2-8f30-52b9a83a03b1",
                  "name": "Backup Schedule",
                  "enabled": "true",
                  "granularity": "monthly",
                  "minute": "0",
                  "hour": "0",
                  "dayOfMonth": "1",
                  "snapshotRetention": "12",
                  "backupRetention": "12",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/schedule_1.3_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_153"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_154"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,granularity"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the schedule resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-schedules",
                  "version": "1.3",
                  "items": [
                    [
                      "0d6d20d6-8b7c-498a-b57b-5734210c209a",
                      "Backup Schedule",
                      "monthly"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/schedule_1.3_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/schedules/{schedule_id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "description": "Returns the stored Schedule API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "schedule_id",
            "in": "path",
            "description": "ID of the schedule collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific schedule resource",
        "responses": {
          "200": {
            "description": "Returns the stored Schedule API resource in the JSON response body.",
            "content": {
              "application/astra-schedule+json": {
                "example": {
                  "type": "application/astra-schedule",
                  "version": "1.3",
                  "id": "49cbc480-5f7d-51e2-8f30-52b9a83a03b1",
                  "name": "Backup Schedule",
                  "enabled": "true",
                  "granularity": "monthly",
                  "minute": "0",
                  "hour": "0",
                  "dayOfMonth": "1",
                  "snapshotRetention": "12",
                  "backupRetention": "12",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/schedule_1.3_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "schedule_id",
            "in": "path",
            "description": "ID of the schedule collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific schedule resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.",
          "required": true,
          "content": {
            "application/astra-schedule+json": {
              "example": {
                "type": "application/astra-schedule",
                "version": "1.3",
                "granularity": "daily",
                "minute": "0",
                "hour": "0",
                "snapshotRetention": "12",
                "backupRetention": "12"
              },
              "schema": {
                "$ref": "#/components/schemas/schedule_1.3_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the schedule resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "description": "Removes the specified Schedule API resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "schedule_id",
            "in": "path",
            "description": "ID of the schedule collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific schedule resource",
        "responses": {
          "204": {
            "description": "Indicates if the schedule resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appBackups": {
      "post": {
        "tags": [
          "Application Backup"
        ],
        "description": "Indicates the desired values for the Application Backup API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new appBackup resource for a specific app",
        "requestBody": {
          "description": "Indicates the desired values for the Application Backup API resource to be created.",
          "required": true,
          "content": {
            "application/astra-appBackup+json": {
              "example": {
                "type": "application/astra-appBackup",
                "version": "1.2",
                "name": "app-name-245"
              },
              "schema": {
                "$ref": "#/components/schemas/appBackup_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created appBackup resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-appBackup+json": {
                "example": {
                  "type": "application/astra-appBackup",
                  "version": "1.2",
                  "id": "bab39d53-2d04-5297-b92e-58df89a2117b",
                  "name": "app-name-245",
                  "bucketID": "0afbe357-a717-4c7a-8b3d-d0368959c8de",
                  "scheduleID": "1fe83650-9b3c-41ef-bb25-a2910c19c33e",
                  "state": "pending",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appBackup_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_131"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_143"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_148"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/94",
                  "title": "Backup not created",
                  "detail": "The backup wasn't created because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_94"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Application Backup"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appBackup resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appBackups",
                  "version": "1.2",
                  "items": [
                    [
                      "5cb608f9-571b-492e-a520-5bfb900a9b9c",
                      "app-name-245",
                      "pending"
                    ],
                    [
                      "f8faa690-7e09-48a4-b33c-7965712acd0c",
                      "app-name-244",
                      "completed"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appBackup_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/96",
                  "title": "Backups not listed",
                  "detail": "The backups didn't list because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_96"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appBackups/{appBackup_id}": {
      "get": {
        "tags": [
          "Application Backup"
        ],
        "description": "Returns the stored Application Backup API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the appBackup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appBackup resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Backup API resource in the JSON response body.",
            "content": {
              "application/astra-appBackup+json": {
                "example": {
                  "type": "application/astra-appBackup",
                  "version": "1.2",
                  "id": "bab39d53-2d04-5297-b92e-58df89a2117b",
                  "name": "app-name-245",
                  "bucketID": "0afbe357-a717-4c7a-8b3d-d0368959c8de",
                  "scheduleID": "1fe83650-9b3c-41ef-bb25-a2910c19c33e",
                  "state": "pending",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appBackup_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/95",
                  "title": "Backup not retrieved",
                  "detail": "The backup wasn't retrieved because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_95"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Backup"
        ],
        "description": "Removes the specified Application Backup API resource.\nBackups in progress will be canceled, and then deleted.\n\n**Side Effects**\n* If a backup is complete, the backup data is deleted.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the appBackup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific appBackup resource",
        "responses": {
          "204": {
            "description": "Indicates if the appBackup resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/97",
                  "title": "Backup not deleted",
                  "detail": "The backup wasn't deleted because of an internal server issue.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_97"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/128",
                  "title": "Backup cancellation not allowed",
                  "detail": "A pending backup can't be canceled.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_128"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appBackups/{appBackup_id}/appAssets": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the containing appBackup resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "assetType,assetName"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appAsset resources associated with a specific appBackup",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appAssets",
                  "version": "1.1",
                  "items": [
                    [
                      "Pod",
                      "mediawiki-69c6fcf864-2wx6l"
                    ],
                    [
                      "ReplicaSet",
                      "mediawiki-69c6fcf864"
                    ],
                    [
                      "Service",
                      "mediawiki"
                    ],
                    [
                      "Deployment",
                      "mediawiki"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_50"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_46"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appBackups/{appBackup_id}/appAssets/{appAsset_id}": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns the stored Application Asset API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appBackup_id",
            "in": "path",
            "description": "ID of the containing appBackup resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appAsset_id",
            "in": "path",
            "description": "ID of the appAsset collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appAsset resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Asset API resource in the JSON response body.",
            "content": {
              "application/astra-appAsset+json": {
                "example": {
                  "type": "application/astra-appAsset",
                  "version": "1.1",
                  "id": "6415e851-b820-553b-9432-ebd057d1917d",
                  "assetType": "Pod",
                  "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "GVK": {
                    "group": "apps",
                    "kind": "Pod",
                    "version": "v1"
                  },
                  "assetID": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6",
                  "labels": [
                    {
                      "name": "app",
                      "value": "mediawiki"
                    },
                    {
                      "name": "pod-template-hash",
                      "value": "69c6fcf864"
                    }
                  ],
                  "assetName": "mediawiki-69c6fcf864-2wx6l",
                  "namespace": "wiki",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appSnaps": {
      "post": {
        "tags": [
          "Application Snapshot"
        ],
        "description": "Indicates the desired values for the Application Snapshot API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new appSnap resource for a specific app",
        "requestBody": {
          "description": "Indicates the desired values for the Application Snapshot API resource to be created.",
          "required": true,
          "content": {
            "application/astra-appSnap+json": {
              "example": {
                "type": "application/astra-appSnap",
                "version": "1.2",
                "name": "app-name-245"
              },
              "schema": {
                "$ref": "#/components/schemas/appSnap_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created appSnap resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-appSnap+json": {
                "example": {
                  "type": "application/astra-appSnap",
                  "version": "1.2",
                  "id": "4f56a1df-8f47-541a-bd81-77260053a2f6",
                  "name": "app-name-245",
                  "scheduleID": "1fe83650-9b3c-41ef-bb25-a2910c19c33e",
                  "state": "pending",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appSnap_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_148"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_149"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Application Snapshot"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,name,state"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appSnap resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appSnaps",
                  "version": "1.2",
                  "items": [
                    [
                      "2b6dafc3-2172-4431-a482-6306b2703130",
                      "app-name-245",
                      "pending"
                    ],
                    [
                      "6fd9b31a-3924-4c9a-878b-175fa9538b8c",
                      "app-name-244",
                      "completed"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appSnap_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appSnaps/{appSnap_id}": {
      "get": {
        "tags": [
          "Application Snapshot"
        ],
        "description": "Returns the stored Application Snapshot API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appSnap_id",
            "in": "path",
            "description": "ID of the appSnap collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appSnap resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Snapshot API resource in the JSON response body.",
            "content": {
              "application/astra-appSnap+json": {
                "example": {
                  "type": "application/astra-appSnap",
                  "version": "1.2",
                  "id": "4f56a1df-8f47-541a-bd81-77260053a2f6",
                  "name": "app-name-245",
                  "scheduleID": "1fe83650-9b3c-41ef-bb25-a2910c19c33e",
                  "state": "pending",
                  "stateUnready": [],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appSnap_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application Snapshot"
        ],
        "description": "Removes the specified Application Snapshot API resource.\n\n**Side Effects**\n* If a snapshot is in progress, the snapshot is cancelled.\n* If a snapshot is complete, the snapshot data is deleted.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appSnap_id",
            "in": "path",
            "description": "ID of the appSnap collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific appSnap resource",
        "responses": {
          "204": {
            "description": "Indicates if the appSnap resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/144",
                  "title": "Backup in progress",
                  "detail": "The snapshot wasn't deleted because it is currently being used by a backup.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_144"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appSnaps/{appSnap_id}/appAssets": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appSnap_id",
            "in": "path",
            "description": "ID of the containing appSnap resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "assetType,assetName"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          }
        ],
        "summary": "Lists the appAsset resources associated with a specific appSnap",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-appAssets",
                  "version": "1.1",
                  "items": [
                    [
                      "Pod",
                      "mediawiki-69c6fcf864-2wx6l"
                    ],
                    [
                      "ReplicaSet",
                      "mediawiki-69c6fcf864"
                    ],
                    [
                      "Service",
                      "mediawiki"
                    ],
                    [
                      "Deployment",
                      "mediawiki"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_50"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_46"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/appSnaps/{appSnap_id}/appAssets/{appAsset_id}": {
      "get": {
        "tags": [
          "Application Asset"
        ],
        "description": "Returns the stored Application Asset API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appSnap_id",
            "in": "path",
            "description": "ID of the containing appSnap resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "appAsset_id",
            "in": "path",
            "description": "ID of the appAsset collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific appAsset resource",
        "responses": {
          "200": {
            "description": "Returns the stored Application Asset API resource in the JSON response body.",
            "content": {
              "application/astra-appAsset+json": {
                "example": {
                  "type": "application/astra-appAsset",
                  "version": "1.1",
                  "id": "6415e851-b820-553b-9432-ebd057d1917d",
                  "assetType": "Pod",
                  "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                  "GVK": {
                    "group": "apps",
                    "kind": "Pod",
                    "version": "v1"
                  },
                  "assetID": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6",
                  "labels": [
                    {
                      "name": "app",
                      "value": "mediawiki"
                    },
                    {
                      "name": "pod-template-hash",
                      "value": "69c6fcf864"
                    }
                  ],
                  "assetName": "mediawiki-69c6fcf864-2wx6l",
                  "namespace": "wiki",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/executionHooks": {
      "post": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Indicates the desired values for the Execution Hook API resource to be created.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new executionHook resource for a specific app",
        "requestBody": {
          "description": "Indicates the desired values for the Execution Hook API resource to be created.",
          "required": true,
          "content": {
            "application/astra-executionHook+json": {
              "example": {
                "type": "application/astra-executionHook",
                "version": "1.2",
                "name": "Payroll",
                "hookType": "custom",
                "action": "snapshot",
                "stage": "pre",
                "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                "arguments": [
                  "freeze"
                ],
                "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                "enabled": "true",
                "description": "Payroll production hook"
              },
              "schema": {
                "$ref": "#/components/schemas/executionHook_1.2_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created executionHook resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-executionHook+json": {
                "example": {
                  "type": "application/astra-executionHook",
                  "version": "1.2",
                  "id": "946e60cb-980b-5374-9e6e-9fe1f6780352",
                  "name": "Payroll",
                  "hookType": "custom",
                  "matchingCriteria": [],
                  "action": "snapshot",
                  "stage": "pre",
                  "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                  "arguments": [
                    "freeze"
                  ],
                  "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                  "enabled": "true",
                  "description": "Payroll production hook",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_162"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the executionHook resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-executionHooks",
                  "version": "1.2",
                  "items": [
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "4c64792c-806b-4457-938d-8e325a37c593",
                      "name": "Payroll",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerImage",
                          "value": "payroll"
                        },
                        {
                          "type": "podName",
                          "value": "^payroll-master"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                      "arguments": [
                        "freeze"
                      ],
                      "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                      "enabled": "true",
                      "description": "Payroll production hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "Order Processing",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerName",
                          "value": "^order-processing$"
                        },
                        {
                          "type": "podLabel",
                          "value": "^app=master$|^app=data$"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "63f4d6fd-b7f0-4eaa-9890-0b11123604b1",
                      "arguments": [
                        "freeze"
                      ],
                      "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "NetApp Postgres Hook",
                      "hookType": "netapp",
                      "matchingCriteria": [
                        {
                          "type": "podName",
                          "value": "^postgres"
                        },
                        {
                          "type": "containerImage",
                          "value": "3.8"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "3601ed09-1a74-4156-a1bd-9cb7144bac0e",
                      "arguments": [
                        "freeze"
                      ],
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    },
                    {
                      "type": "application/astra-executionHook",
                      "version": "1.1",
                      "id": "6659892c-c621-44e8-a0bb-8dbdf378a2dd",
                      "name": "Redis Hook",
                      "hookType": "custom",
                      "matchingCriteria": [
                        {
                          "type": "containerName",
                          "value": "^redis-01$"
                        }
                      ],
                      "action": "snapshot",
                      "stage": "pre",
                      "hookSourceID": "3601ed09-1a74-4156-a1bd-9cb7144bac0e",
                      "arguments": [
                        "freeze"
                      ],
                      "enabled": "true",
                      "description": "Order processing hook",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "64182074-ddb6-42eb-b7f4-b6a02cf9ba7c"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/executionHooks/{executionHook_id}": {
      "get": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Returns the stored Execution Hook API resource in the JSON response body. Also populates matchingContainers and matchingImages based on the current matchingCriteria and the defined app.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific executionHook resource",
        "responses": {
          "200": {
            "description": "Returns the stored Execution Hook API resource in the JSON response body. Also populates matchingContainers and matchingImages based on the current matchingCriteria and the defined app.",
            "content": {
              "application/astra-executionHook+json": {
                "example": {
                  "type": "application/astra-executionHook",
                  "version": "1.2",
                  "id": "946e60cb-980b-5374-9e6e-9fe1f6780352",
                  "name": "Payroll",
                  "hookType": "custom",
                  "matchingCriteria": [
                    {
                      "type": "podLabel",
                      "value": "^env=production$"
                    },
                    {
                      "type": "containerName",
                      "value": "^payroll-master"
                    }
                  ],
                  "matchingImages": [
                    "docker.io/bitnami/payroll:3.7.8",
                    "docker.io/bitnami/payroll:4.1.2"
                  ],
                  "matchingContainers": [
                    {
                      "namespaceName": "payroll-east",
                      "podName": "payroll-release3-7",
                      "podLabels": [
                        {
                          "name": "env",
                          "value": "production"
                        },
                        {
                          "name": "app.kubernetes.io/managed-by",
                          "value": "Helm"
                        }
                      ],
                      "containerName": "payroll-master-0",
                      "containerImage": "docker.io/bitnami/payroll:3.7.8"
                    },
                    {
                      "namespaceName": "payroll-east",
                      "podName": "payroll-release3-7",
                      "podLabels": [
                        {
                          "name": "env",
                          "value": "production"
                        },
                        {
                          "name": "app.kubernetes.io/managed-by",
                          "value": "Helm"
                        }
                      ],
                      "containerName": "payroll-master-1",
                      "containerImage": "docker.io/bitnami/payroll:3.7.8"
                    }
                  ],
                  "action": "snapshot",
                  "stage": "pre",
                  "hookSourceID": "50e89023-ba84-435d-bb47-1833f4c250ff",
                  "arguments": [
                    "freeze"
                  ],
                  "appID": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9",
                  "enabled": "true",
                  "description": "Payroll production hook",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHook_1.2_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing execution hook will impact any future actions of applications that use the updated execution hook.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific executionHook resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Updating an existing execution hook will impact any future actions of applications that use the updated execution hook.",
          "required": true,
          "content": {
            "application/astra-executionHook+json": {
              "example": {
                "type": "application/astra-executionHook",
                "version": "1.2",
                "arguments": [
                  "freeze",
                  "10"
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/executionHook_1.2_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the executionHook resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_162"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Execution Hook"
        ],
        "description": "Removes the specified Execution Hook API resource.\n\n**Side Effects**\n* The deleted execution hook will no longer run as part of future actions.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHook_id",
            "in": "path",
            "description": "ID of the executionHook collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific executionHook resource",
        "responses": {
          "204": {
            "description": "Indicates if the executionHook resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_73"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/executionHookOverrides": {
      "post": {
        "tags": [
          "Execution Hook Override"
        ],
        "description": "Indicates the desired values for the Execution Hook Override API resource to be created.",
        "deprecated": true,
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Creates a new executionHookOverride resource for a specific app",
        "requestBody": {
          "description": "Indicates the desired values for the Execution Hook Override API resource to be created.",
          "required": true,
          "content": {
            "application/astra-executionHookOverride+json": {
              "example": {
                "type": "application/astra-executionHookOverride",
                "version": "1.0",
                "executionHookID": "eb863cc6-0d9a-454d-8ef7-81b7cac91929",
                "enabled": "false"
              },
              "schema": {
                "$ref": "#/components/schemas/executionHookOverride_1.0_post_request_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created executionHookOverride resource in the JSON response body.",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/astra-executionHookOverride+json": {
                "example": {
                  "type": "application/astra-executionHookOverride",
                  "version": "1.0",
                  "id": "c11af802-5e53-5897-8cd9-2de730494be3",
                  "executionHookID": "eb863cc6-0d9a-454d-8ef7-81b7cac91929",
                  "enabled": "false",
                  "appID": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHookOverride_1.0_post_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Execution Hook Override"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "deprecated": true,
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists the executionHookOverride resources associated with a specific app",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-executionHookOverrides",
                  "version": "1.0",
                  "items": [
                    {
                      "type": "application/astra-executionHookOverride",
                      "version": "1.0",
                      "id": "36d06222-bd0c-4897-89c2-c16dd9265e12",
                      "executionHookID": "eb863cc6-0d9a-454d-8ef7-81b7cac91929",
                      "enabled": "false",
                      "appID": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "863feb92-8619-4298-b222-c48a886024f8"
                      }
                    },
                    {
                      "type": "application/astra-executionHookOverride",
                      "version": "1.0",
                      "id": "f8d1ce66-6c0e-4d3a-96c5-a5e76669442d",
                      "executionHookID": "eb863cc6-0d9a-454d-8ef7-81b7cac91929",
                      "enabled": "false",
                      "appID": "36b076ae-b7c4-4e96-a323-ed167ede74ba",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "863feb92-8619-4298-b222-c48a886024f8"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHookOverride_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/k8s/v1/apps/{app_id}/executionHookOverrides/{executionHookOverride_id}": {
      "get": {
        "tags": [
          "Execution Hook Override"
        ],
        "description": "Returns the stored Execution Hook Override API resource in the JSON response body.",
        "deprecated": true,
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHookOverride_id",
            "in": "path",
            "description": "ID of the executionHookOverride collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific executionHookOverride resource",
        "responses": {
          "200": {
            "description": "Returns the stored Execution Hook Override API resource in the JSON response body.",
            "content": {
              "application/astra-executionHookOverride+json": {
                "example": {
                  "type": "application/astra-executionHookOverride",
                  "version": "1.0",
                  "id": "c11af802-5e53-5897-8cd9-2de730494be3",
                  "executionHookID": "eb863cc6-0d9a-454d-8ef7-81b7cac91929",
                  "enabled": "false",
                  "appID": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/executionHookOverride_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Execution Hook Override"
        ],
        "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Any execution hook with a hookType value of \"netapp\" that applies to the specified application will be disabled if the value of enabled is changed from \"true\" to \"false\" during the replace operation.\n* Any execution hook with a hookType value of \"netapp\" that applies to the specified application will be enabled if the value of enabled is changed from \"false\" to \"true\" during the replace operation.",
        "deprecated": true,
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHookOverride_id",
            "in": "path",
            "description": "ID of the executionHookOverride collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Modifies a specific executionHookOverride resource",
        "requestBody": {
          "description": "Replaces the entire stored resource with the supplied JSON request body while preserving key values that are not user-modifiable.\n\n**Side Effects**\n* Any execution hook with a hookType value of \"netapp\" that applies to the specified application will be disabled if the value of enabled is changed from \"true\" to \"false\" during the replace operation.\n* Any execution hook with a hookType value of \"netapp\" that applies to the specified application will be enabled if the value of enabled is changed from \"false\" to \"true\" during the replace operation.",
          "required": true,
          "content": {
            "application/astra-executionHookOverride+json": {
              "example": {
                "type": "application/astra-executionHookOverride",
                "version": "1.0",
                "enabled": "false"
              },
              "schema": {
                "$ref": "#/components/schemas/executionHookOverride_1.0_put_request_body"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates if the executionHookOverride resource was updated."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_7"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_8"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_9"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/10",
                  "title": "JSON resource conflict",
                  "detail": "The request body JSON contains a field that conflicts with an idempotent value.",
                  "status": "409"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_10"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Execution Hook Override"
        ],
        "description": "Removes the specified Execution Hook Override API resource.\n\n**Side Effects**\n* Any execution hook with a hookType value of \"netapp\" that applies to the specified application will be enabled when a new execution hook override is deleted if it had an enabled value of \"false\".",
        "deprecated": true,
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the containing app resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          {
            "name": "executionHookOverride_id",
            "in": "path",
            "description": "ID of the executionHookOverride collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Deletes a specific executionHookOverride resource",
        "responses": {
          "204": {
            "description": "Indicates if the executionHookOverride resource was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/ldapGroups": {
      "get": {
        "tags": [
          "LDAP Group"
        ],
        "description": "Returns a JSON array of JSON objects containing the results of the request URL.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,cn,dn"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all ldapGroup resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of JSON objects containing the results of the request URL.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-ldapGroups",
                  "version": "1.0",
                  "items": [
                    [
                      "4a461f57-70e6-5732-882e-8d5f684f15a1",
                      "boulder_sysadmins",
                      "cn=boulder_sysadmins,ou=groups,dc=example,dc=com"
                    ],
                    [
                      "da4bbb6f-8f2c-57eb-a9cf-6eeffbf9e35d",
                      "rtp_sysadmins",
                      "cn=rtp_sysadmins,ou=groups,dc=example,dc=com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ldapGroup_1.0_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/14",
                  "title": "Unauthorized access",
                  "detail": "The user isn't enabled.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_14"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/32",
                  "title": "Unsupported content type",
                  "detail": "The response can't be returned in the requested format.",
                  "status": "406"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_32"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/ldapGroups/{ldapGroup_id}": {
      "get": {
        "tags": [
          "LDAP Group"
        ],
        "description": "Returns a JSON object representing the stored LDAP resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "ldapGroup_id",
            "in": "path",
            "description": "ID of the ldapGroup collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific ldapGroup resource",
        "responses": {
          "200": {
            "description": "Returns a JSON object representing the stored LDAP resource.",
            "content": {
              "application/astra-ldapGroup+json": {
                "example": {
                  "type": "application/astra-ldapGroup",
                  "version": "1.0",
                  "id": "cb05a289-a7a1-502c-a2bc-7e75dba8fddc",
                  "cn": "boulder_sysadmins",
                  "dn": "cn=boulder_sysadmins,ou=groups,dc=example,dc=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ldapGroup_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/ldapUsers": {
      "get": {
        "tags": [
          "LDAP User"
        ],
        "description": "Returns a JSON array of JSON objects containing the results of the request URL.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            },
            "example": "id,cn,dn"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          },
          {
            "name": "continue",
            "in": "query",
            "description": "Indicates the token to resume listing from.\n\n\nURL examples: \"continue=<Continue Token from Collection Metadata>\"\n\n\nOpenAPI examples: \"<Continue Token from Collection Metadata>\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_continue"
            }
          }
        ],
        "summary": "Lists all ldapUser resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of JSON objects containing the results of the request URL.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-ldapUsers",
                  "version": "1.0",
                  "items": [
                    [
                      "b4bcef18-14ad-5bc1-91ce-3cce15aa8791",
                      "John Doe",
                      "cn=John Doe,ou=people,dc=example,dc=com"
                    ],
                    [
                      "98b10d6f-8693-555f-b258-70de4cc7301f",
                      "Jane Doe",
                      "cn=Jane Doe,ou=people,dc=example,dc=com"
                    ]
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ldapUser_1.0_list_response_body"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_12"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/14",
                  "title": "Unauthorized access",
                  "detail": "The user isn't enabled.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_14"
                    }
                  ]
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/32",
                  "title": "Unsupported content type",
                  "detail": "The response can't be returned in the requested format.",
                  "status": "406"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_32"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/34",
                  "title": "Internal server error",
                  "detail": "The server was unable to process this request.",
                  "status": "500"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_34"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/ldapUsers/{ldapUser_id}": {
      "get": {
        "tags": [
          "LDAP User"
        ],
        "description": "Returns a JSON object representing the stored LDAP resource.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "ldapUser_id",
            "in": "path",
            "description": "ID of the ldapUser collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific ldapUser resource",
        "responses": {
          "200": {
            "description": "Returns a JSON object representing the stored LDAP resource.",
            "content": {
              "application/astra-ldapUser+json": {
                "example": {
                  "type": "application/astra-ldapUser",
                  "version": "1.0",
                  "id": "2add73ff-89dc-5ff1-be85-39d97549556d",
                  "email": "johndoe@example.com",
                  "firstName": "John",
                  "lastName": "Doe",
                  "cn": "John Doe",
                  "dn": "cn=John Doe,ou=people,dc=example,dc=com",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ldapUser_1.0_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Indicates which fields should be returned when listing a collection.\n\n\nURL examples: \"include=id\", \"include=id,name\"\n\n\nOpenAPI examples: \"id\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_include"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Indicates the maximum number of resources to return when listing a collection.\n\n\nURL examples: \"limit=2\"\n\n\nOpenAPI examples: \"2\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Indicates which fields should be matched in order to return a resource when listing a collection.\n\n\nSupported operators are:\n* eq - Equality\n* lt/gt - Less than/Greater than\n* lte/gte - Less than or equals to/Greater than or equals to\n\n\nURL example: \"filter=field%20eq%20%27value%27\"\n\n\nOpenAPI examples: \"field eq 'value'\"",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/query_filter"
            }
          }
        ],
        "summary": "Lists all task resources",
        "responses": {
          "200": {
            "description": "Returns a JSON array of all matching resources in the collection. If individual fields are specified in the request, the items JSON array will contain the fields requested for each matching resource in the order specified.",
            "content": {
              "application/json": {
                "example": {
                  "type": "application/astra-tasks",
                  "version": "1.1",
                  "items": [
                    {
                      "type": "application/astra-task",
                      "version": "1.0",
                      "id": "ae1e6561-9e22-406c-8a5a-762f4604da00",
                      "name": "astra.backup.prep",
                      "summary": "Backup preparation",
                      "description": "Task to prepare for the application backup",
                      "service": "nautilus",
                      "parentTaskID": "9cc8c321-6af1-406c-8158-2c6582c247f8",
                      "userID": "abda967f-cd2c-4237-908e-99266648c553",
                      "resourceID": "626a0978-d55f-4841-8b7c-dc0c0f592c6f",
                      "resourceURI": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/k8s/v1/apps/7c8bef49-697e-4fb4-810c-675cef4cf6c9/appSnaps/5cb608f9-571b-492e-a520-5bfb900a9b9c",
                      "resourceCollectionURI": [
                        "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/f8b58091-4b9c-4c64-9b40-018dbaf7c5de/apps/f670bf11-8850-44bd-b330-815af6186a06/appSnaps/5cb608f9-571b-492e-a520-5bfb900a9b9c",
                        "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/923708f8-0435-45b5-8c00-fbdef3ffaf25/apps/f670bf11-8850-44bd-b330-815af6186a06/appSnaps/5cb608f9-571b-492e-a520-5bfb900a9b9c"
                      ],
                      "state": "running",
                      "stateTransitions": [
                        {
                          "from": "running",
                          "to": [
                            "paused",
                            "cancelled"
                          ]
                        },
                        {
                          "from": "paused",
                          "to": [
                            "running",
                            "cancelled"
                          ]
                        }
                      ],
                      "stateDetails": [],
                      "orderHint": 0,
                      "percentDone": 20.25,
                      "startTime": "2020-08-06T12:24:52.256624Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "00000000-0000-0000-0000-000000000000"
                      }
                    },
                    {
                      "type": "application/astra-task",
                      "version": "1.0",
                      "id": "bc1e6561-9e22-406c-8a5a-762f4604da00",
                      "name": "astra.backup",
                      "summary": "Backup",
                      "description": "Task to take a Backup for an application",
                      "service": "nautilus",
                      "userID": "abda967f-cd2c-4237-908e-99266648c553",
                      "resourceID": "736a0978-d55f-4841-8b7c-dc0c0f592c6f",
                      "resourceURI": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/k8s/v1/apps/7c8bef49-697e-4fb4-810c-675cef4cf6c9/appBackups/736a0978-d55f-4841-8b7c-dc0c0f592c6f",
                      "resourceCollectionURI": [
                        "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/f8b58091-4b9c-4c64-9b40-018dbaf7c5de/apps/f670bf11-8850-44bd-b330-815af6186a06/appBackups/736a0978-d55f-4841-8b7c-dc0c0f592c6f",
                        "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/923708f8-0435-45b5-8c00-fbdef3ffaf25/apps/f670bf11-8850-44bd-b330-815af6186a06/appBackups/736a0978-d55f-4841-8b7c-dc0c0f592c6f"
                      ],
                      "state": "completed",
                      "stateTransitions": [
                        {
                          "from": "running",
                          "to": [
                            "paused",
                            "cancelled"
                          ]
                        },
                        {
                          "from": "paused",
                          "to": [
                            "running",
                            "cancelled"
                          ]
                        }
                      ],
                      "stateDetails": [],
                      "orderHint": 0,
                      "percentDone": 100,
                      "startTime": "2020-08-06T12:24:52.256624Z",
                      "endTime": "2020-08-06T12:26:52.256624Z",
                      "metadata": {
                        "labels": [],
                        "creationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "modificationTimestamp": "2020-08-06T12:24:52.256624Z",
                        "createdBy": "00000000-0000-0000-0000-000000000000"
                      }
                    }
                  ],
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/task_1.1_list_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/2",
                  "title": "Collection not found",
                  "detail": "The collection specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_2"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/core/v1/tasks/{task_id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "description": "Returns the stored Task API resource in the JSON response body.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the containing account resource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            },
            "example": "{{.Account}}"
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "ID of the task collection to list",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          }
        ],
        "summary": "Retrieves a specific task resource",
        "responses": {
          "200": {
            "description": "Returns the stored Task API resource in the JSON response body.",
            "content": {
              "application/astra-task+json": {
                "example": {
                  "type": "application/astra-task",
                  "version": "1.1",
                  "id": "26e8e8ef-5549-5928-98dd-2c3d43a608e8",
                  "name": "astra.backup.prep",
                  "summary": "Backup preparation",
                  "description": "Task to prepare for the application backup",
                  "service": "nautilus",
                  "userID": "abda967f-cd2c-4237-908e-99266648c553",
                  "parentTaskID": "9cc8c321-6af1-406c-8158-2c6582c247f8",
                  "resourceID": "626a0978-d55f-4841-8b7c-dc0c0f592c6f",
                  "resourceURI": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/k8s/v1/apps/7c8bef49-697e-4fb4-810c-675cef4cf6c9/appSnaps/2b6dafc3-2172-4431-a482-6306b2703130",
                  "resourceCollectionURI": [
                    "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/f8b58091-4b9c-4c64-9b40-018dbaf7c5de/apps/f670bf11-8850-44bd-b330-815af6186a06/appSnaps/2b6dafc3-2172-4431-a482-6306b2703130",
                    "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/clouds/0df3f1a0-7203-4c12-aabf-a7bee6302671/clusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/namespaces/923708f8-0435-45b5-8c00-fbdef3ffaf25/apps/f670bf11-8850-44bd-b330-815af6186a06/appSnaps/2b6dafc3-2172-4431-a482-6306b2703130"
                  ],
                  "state": "running",
                  "stateTransitions": [
                    {
                      "from": "running",
                      "to": [
                        "paused",
                        "cancelled"
                      ]
                    },
                    {
                      "from": "paused",
                      "to": [
                        "running",
                        "cancelled"
                      ]
                    }
                  ],
                  "stateDetails": [],
                  "orderHint": 0,
                  "percentDone": 20.25,
                  "startTime": "2020-08-06T12:24:52.256624Z",
                  "endTime": "2020-08-06T12:26:52.256624Z",
                  "metadata": {
                    "labels": [],
                    "creationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "modificationTimestamp": "2022-10-06T20:58:16.305662Z",
                    "createdBy": "8f84cf09-8036-51e4-b579-bd30cb07b269"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/task_1.1_get_response_body"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/1",
                  "title": "Resource not found",
                  "detail": "The resource specified in the request URI wasn't found.",
                  "status": "404"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/3",
                  "title": "Missing bearer token",
                  "detail": "The request is missing the required bearer token.",
                  "status": "401"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_3"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_4"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/5",
                  "title": "Invalid query parameters",
                  "detail": "The supplied query parameters are invalid.",
                  "status": "400"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_5"
                    },
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_6"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/problem+json": {
                "example": {
                  "type": "https://astra.netapp.io/problems/11",
                  "title": "Operation not permitted",
                  "detail": "The requested operation isn't permitted.",
                  "status": "403"
                },
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/astra_problem_detail_11"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "type_astra_identifier": {
        "type": "string",
        "anyOf": [
          {
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
          },
          {
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-5[0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          {
            "pattern": "^((0){8}(-(0){4}){3}-(0){12})$"
          }
        ]
      },
      "type_astra_time": {
        "type": "string",
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-([0][1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(|[.,]([0-9]{1,9}))Z$"
      },
      "type_json": {
        "type": "object"
      },
      "type_json_schema": {
        "type": "object",
        "required": [
          "$schema",
          "type",
          "properties",
          "additionalProperties",
          "required"
        ],
        "properties": {
          "$schema": {
            "type": "string",
            "enum": [
              "http://json-schema.org/draft-07/schema#"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "object"
            ]
          },
          "properties": {
            "type": "object"
          },
          "additionalProperties": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "required": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "type_base64_data": {
        "type": "string",
        "pattern": "^([A-Za-z0-9+/]{4})*(([A-Za-z0-9+/]{2})==|([A-Za-z0-9+/]{3})=)?$"
      },
      "type_dns_1123": {
        "type": "string",
        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
        "minLength": 1,
        "maxLength": 63
      },
      "type_swver": {
        "type": "string",
        "pattern": "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(\\-[a-zA-Z0-9-]+)*$"
      },
      "type_astra_label": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "type_astra_labels": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/type_astra_label"
        }
      },
      "type_k8s_label": {
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "type_k8s_labels": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/type_k8s_label"
        }
      },
      "type_astra_stateTransitions": {
        "type": "array",
        "minItems": 0,
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/type_astra_stateTransition"
        }
      },
      "type_astra_stateTransition": {
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "minItems": 0,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "type_astra_stateDetail": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40
          },
          "detail": {
            "type": "string",
            "minLength": 1,
            "maxLength": 511
          }
        },
        "additionalProperties": false
      },
      "type_astra_stateDetails": {
        "type": "array",
        "minItems": 0,
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/type_astra_stateDetail"
        },
        "additionalProperties": false
      },
      "type_astra_metadata": {
        "type": "object",
        "required": [
          "labels",
          "creationTimestamp",
          "modificationTimestamp",
          "createdBy"
        ],
        "properties": {
          "labels": {
            "$ref": "#/components/schemas/type_astra_labels"
          },
          "creationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "modificationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": false
      },
      "type_astra_metadata_update": {
        "type": "object",
        "properties": {
          "labels": {
            "$ref": "#/components/schemas/type_astra_labels"
          },
          "creationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "modificationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": false
      },
      "type_astra_metadata_list": {
        "type": "object",
        "properties": {
          "continue": {
            "$ref": "#/components/schemas/type_base64_data"
          },
          "count": {
            "type": "number"
          },
          "labels": {
            "$ref": "#/components/schemas/type_astra_labels"
          },
          "creationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "modificationTimestamp": {
            "$ref": "#/components/schemas/type_astra_time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": false
      },
      "type_astra_api_relative_uri": {
        "type": "string",
        "pattern": "^(\\/([-0-9a-zA-Z])+)+$"
      },
      "type_astra_links": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "$ref": "#/components/schemas/type_astra_link"
        },
        "additionalProperties": false
      },
      "type_astra_link": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "enum": [
              "self",
              "canonical",
              "collection",
              "up",
              "related",
              "service-doc",
              "service-desc"
            ]
          },
          "href": {
            "$ref": "#/components/schemas/type_astra_api_relative_uri"
          },
          "type": {
            "type": "string",
            "anyOf": [
              {
                "pattern": "^((application\\/vnd\\.netapp(\\.(([a-z])([a-zA-Z0-9]){0,30})){1,3})(-v(([0-9]){1,3}))?)$"
              },
              {
                "pattern": "^((application\\/astra-((([a-z])([a-zA-Z0-9]){0,30})){1,3})(-v(([0-9]){1,3}))?)$"
              }
            ]
          },
          "targetSchema": {
            "type": "object"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1023
          },
          "hints": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "deprecated"
                ]
              },
              "allow": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "POST",
                    "GET",
                    "PUT",
                    "DELETE"
                  ]
                }
              },
              "accept-post": {
                "type": "object"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^([a-z]([a-zA-Z])*)(-[a-z]([a-zA-Z])*){1,2}$"
                }
              },
              "accept-put": {
                "type": "object"
              }
            }
          }
        },
        "required": [
          "rel",
          "href"
        ]
      },
      "type_unready": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "type": "string",
          "minLength": 1,
          "maxLength": 127
        }
      },
      "query_include": {
        "type": "string",
        "pattern": "^([0-9a-zA-Z]+)(,[0-9a-zA-Z]+)*$"
      },
      "query_filter": {
        "type": "string",
        "pattern": "^(([0-9a-zA-Z]+(\\[\\*\\])?)((\\.[0-9a-zA-Z]+(\\[\\*\\])?)+)?( |%20)(eq|lt|gt|lte|gte|in)( |%20)'([0-9a-zA-Z.,-_:@ {}\\\"])+')(,(\\1))*$"
      },
      "query_orderBy": {
        "type": "string",
        "pattern": "^(([0-9a-zA-Z]+)(( |%20)desc)?)$"
      },
      "query_limit": {
        "type": "string",
        "pattern": "^([1-9][0-9]*)$"
      },
      "query_skip": {
        "type": "string",
        "pattern": "^([1-9][0-9]*)$"
      },
      "query_continue": {
        "$ref": "#/components/schemas/type_base64_data"
      },
      "query_count": {
        "type": "string",
        "pattern": "^true$"
      },
      "account_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "isEnabled",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-account\"",
            "type": "string",
            "enum": [
              "application/astra-account"
            ],
            "example": "application/astra-account"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "666a3f38-d4fa-5b62-a391-a69029758d32"
          },
          "name": {
            "description": "JSON string containing a name for the account.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "fraught-pines"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the account.\nDefined values are:\n* \"pending\" - Changes can only be made to user and role resources under the account (default value)\n* \"active\" - Changes can be made to any resource under the account\n* \"deletePending\" - Users cannot log in, data protection operations are suspended, charges no longer accrue",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "deletePending"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating the account is enabled.\nDefined values are:\n* \"false\" - Users are not permitted to use this account\n* \"true\" - Users are permitted to use this account",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "enabledTimestamp": {
            "description": "JSON string containing the timestamp indicating when the account was last enabled.\nIf the account has never been enabled, this field is absent.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "accountContact": {
            "description": "JSON object containing user contact information to create an owner user at the time of account activation.",
            "type": "object",
            "required": [
              "firstName",
              "lastName",
              "email",
              "postalAddress"
            ],
            "properties": {
              "firstName": {
                "description": "JSON string containing a user specified long-form first name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "lastName": {
                "description": "JSON string containing a user specified long-form last name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "companyName": {
                "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "email": {
                "description": "JSON strings containing a user specified email address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "phone": {
                "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                "type": "string",
                "minLength": 1,
                "maxLength": 31
              },
              "postalAddress": {
                "description": "JSON object containing a collection of JSON strings specifying an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained JSON strings will be present. If you provide nothing, the string will be empty.",
                "type": "object",
                "required": [
                  "addressCountry",
                  "addressLocality",
                  "addressRegion",
                  "postalCode",
                  "streetAddress1"
                ],
                "properties": {
                  "addressCountry": {
                    "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "addressLocality": {
                    "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "addressRegion": {
                    "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "postalCode": {
                    "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 31
                  },
                  "streetAddress1": {
                    "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "streetAddress2": {
                    "description": "JSON string containing optional ancillary street address information, post office box, and more.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "account_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/account_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "account_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-account\"",
            "type": "string",
            "enum": [
              "application/astra-account"
            ],
            "example": "application/astra-account"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "name": {
            "description": "JSON string containing a name for the account.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "fraught-pines"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "account_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "isEnabled",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-account\"",
            "type": "string",
            "enum": [
              "application/astra-account"
            ],
            "example": "application/astra-account"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "666a3f38-d4fa-5b62-a391-a69029758d32"
          },
          "name": {
            "description": "JSON string containing a name for the account.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "fraught-pines"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the account.\nDefined values are:\n* \"pending\" - Changes can only be made to user and role resources under the account (default value)\n* \"active\" - Changes can be made to any resource under the account\n* \"deletePending\" - Users cannot log in, data protection operations are suspended, charges no longer accrue",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "deletePending"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating the account is enabled.\nDefined values are:\n* \"false\" - Users are not permitted to use this account\n* \"true\" - Users are permitted to use this account",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "enabledTimestamp": {
            "description": "JSON string containing the timestamp indicating when the account was last enabled.\nIf the account has never been enabled, this field is absent.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "accountContact": {
            "description": "JSON object containing user contact information to create an owner user at the time of account activation.",
            "type": "object",
            "required": [
              "firstName",
              "lastName",
              "email",
              "postalAddress"
            ],
            "properties": {
              "firstName": {
                "description": "JSON string containing a user specified long-form first name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "lastName": {
                "description": "JSON string containing a user specified long-form last name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "companyName": {
                "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "email": {
                "description": "JSON strings containing a user specified email address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "phone": {
                "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                "type": "string",
                "minLength": 1,
                "maxLength": 31
              },
              "postalAddress": {
                "description": "JSON object containing a collection of JSON strings specifying an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained JSON strings will be present. If you provide nothing, the string will be empty.",
                "type": "object",
                "required": [
                  "addressCountry",
                  "addressLocality",
                  "addressRegion",
                  "postalCode",
                  "streetAddress1"
                ],
                "properties": {
                  "addressCountry": {
                    "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "addressLocality": {
                    "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "addressRegion": {
                    "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "postalCode": {
                    "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 31
                  },
                  "streetAddress1": {
                    "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "streetAddress2": {
                    "description": "JSON string containing optional ancillary street address information, post office box, and more.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "account_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-account\"",
            "type": "string",
            "enum": [
              "application/astra-account"
            ],
            "example": "application/astra-account"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "666a3f38-d4fa-5b62-a391-a69029758d32"
          },
          "name": {
            "description": "JSON string containing a name for the account.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "fraught-pines"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the account.\nDefined values are:\n* \"pending\" - Changes can only be made to user and role resources under the account (default value)\n* \"active\" - Changes can be made to any resource under the account\n* \"deletePending\" - Users cannot log in, data protection operations are suspended, charges no longer accrue",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "deletePending"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating the account is enabled.\nDefined values are:\n* \"false\" - Users are not permitted to use this account\n* \"true\" - Users are permitted to use this account",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "enabledTimestamp": {
            "description": "JSON string containing the timestamp indicating when the account was last enabled.\nIf the account has never been enabled, this field is absent.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "accountContact": {
            "description": "JSON object containing user contact information to create an owner user at the time of account activation.",
            "type": "object",
            "properties": {
              "firstName": {
                "description": "JSON string containing a user specified long-form first name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "lastName": {
                "description": "JSON string containing a user specified long-form last name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "companyName": {
                "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "email": {
                "description": "JSON strings containing a user specified email address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "phone": {
                "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                "type": "string",
                "minLength": 1,
                "maxLength": 31
              },
              "postalAddress": {
                "description": "JSON object containing a collection of JSON strings specifying an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained JSON strings will be present. If you provide nothing, the string will be empty.",
                "type": "object",
                "properties": {
                  "addressCountry": {
                    "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "addressLocality": {
                    "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "addressRegion": {
                    "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "postalCode": {
                    "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 31
                  },
                  "streetAddress1": {
                    "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  },
                  "streetAddress2": {
                    "description": "JSON string containing optional ancillary street address information, post office box, and more.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "apiResource_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "apiVersion",
          "kind",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-apiResource\"",
            "type": "string",
            "enum": [
              "application/astra-apiResource"
            ],
            "example": "application/astra-apiResource"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "977ca735-7051-5c98-8330-45bd70010018"
          },
          "apiVersion": {
            "description": "JSON string representing the API version of the resource, as set in or by Kubernetes.\nAPIVersion defines the versioned schema for this object representation. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. \nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string",
            "example": "rbac.authorization.k8s.io/v1"
          },
          "kind": {
            "description": "JSON string representing the kind of the resource, as set in or by Kubernetes.\nThe kind field uses camel case and contains a string value representing the REST resource this object represents. Servers might infer this from the endpoint the client submits requests to. It cannot be updated. \nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string",
            "example": "ClusterRole"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "apiResource_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/apiResource_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "appAsset_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "assetType",
          "creationTimestamp",
          "GVK",
          "assetID",
          "labels",
          "assetName",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appAsset\"",
            "type": "string",
            "enum": [
              "application/astra-appAsset"
            ],
            "example": "application/astra-appAsset"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6415e851-b820-553b-9432-ebd057d1917d"
          },
          "assetType": {
            "description": "JSON string containing a value indicating what type of asset is being described as obtained from Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "Pod"
          },
          "creationTimestamp": {
            "description": "JSON string containing a timestamp indicating when the Kubernetes metadata was created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "GVK": {
            "description": "JSON object containing a Kubernetes group/version/kind.",
            "type": "object",
            "properties": {
              "group": {
                "description": "JSON string containing a group identifier assigned by Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
                "type": "string",
                "minLength": 1,
                "maxLength": 254
              },
              "kind": {
                "description": "JSON string containing a kind identifier assigned by Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
                "type": "string",
                "minLength": 1,
                "maxLength": 254
              },
              "version": {
                "description": "JSON string containing a version identifier assigned by Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
                "type": "string",
                "minLength": 1,
                "maxLength": 254
              }
            },
            "additionalProperties": false
          },
          "resource": {
            "description": "JSON object containing the entire content of the Kubernetes resource definition.",
            "type": "object",
            "$ref": "#/components/schemas/type_json"
          },
          "assetID": {
            "description": "JSON string containing an identifier assigned by Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "93ec0c61-d993-4aa1-bb08-f4dcdd5e97f6"
          },
          "labels": {
            "description": "JSON array of JSON objects, each containing a Kubernetes labels associated with the asset.\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "name",
                "value"
              ],
              "properties": {
                "name": {
                  "description": "JSON string containing the label name\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^([\\S.]{1,253}\\/)?([a-z0-9A-Z_.-]){1,63}$\"",
                  "type": "string",
                  "pattern": "^([\\S.]{1,253}\\/)?([a-z0-9A-Z_.-]){1,63}$",
                  "minLength": 1,
                  "maxLength": 63
                },
                "value": {
                  "description": "JSON string containing the label value\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^([a-z0-9A-Z_.-]){1,63}$\"",
                  "type": "string",
                  "pattern": "^([a-z0-9A-Z_.-]){1,63}$",
                  "minLength": 1,
                  "maxLength": 63
                }
              },
              "additionalProperties": false
            }
          },
          "assetName": {
            "description": "JSON string containing a name assigned by Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "mediawiki-69c6fcf864-2wx6l"
          },
          "namespace": {
            "description": "JSON string containing a namespace assigned by Kubernetes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "wiki"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appAsset_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/appAsset_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "appBackup_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "bucketID",
          "state",
          "stateUnready",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appBackup\"",
            "type": "string",
            "enum": [
              "application/astra-appBackup"
            ],
            "example": "application/astra-appBackup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "bab39d53-2d04-5297-b92e-58df89a2117b"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the backup. If not specified, or when backups are initiated by a schedule, the system assigns a name for the backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID that indicates where the backup will be stored on create. If not specified, a system-selected bucket is used. If no buckets are available, an error will be returned on create.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0afbe357-a717-4c7a-8b3d-d0368959c8de"
          },
          "snapshotID": {
            "description": "JSON string containing the snapshot that was used to create the backup. To create the backup, a snapshot ID associated with the application being backed up can be specified on create. If not specified, a new snapshot will be created for the backup.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "05c357ed-30ce-432f-bbb0-9d5ff1695428"
          },
          "scheduleID": {
            "description": "JSON string containing an optional schedule ID that indicates that the backup was triggered by a schedule and which schedule triggered the backup. Only present for backups initiated by a schedule.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.schedule",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1fe83650-9b3c-41ef-bb25-a2910c19c33e"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the backup.\nDefined values are:\n* \"pending\" - The application backup is scheduled for discovery\n* \"discovering\" - The application backup is in the process of being discovered\n* \"running\" - The application backup is running normally\n* \"completed\" - The application backup has completed successfully\n* \"failed\" - The application backup is in a permanent failure state\n* \"removed\" - The application backup is not currently accessible\n* \"unknown\" - The application backup state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "running",
              "completed",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "completed"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why an application backup is unable to transition to \"running\", or why it has transitioned to \"failed\" or \"removed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "hookState": {
            "description": "JSON string containing a value indicating the state of any execution hooks run as part of a snapshot.\nDefined values are:\n* \"failed\" - One or more execution hooks have failed\n* \"success\" - There were zero or more applicable hooks and all were successful",
            "type": "string",
            "enum": [
              "failed",
              "success"
            ]
          },
          "hookStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about why \"hookState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "backupCreationTimestamp": {
            "description": "JSON string containing a timestamp indicating when the backup was taken.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "totalBytes": {
            "description": "JSON number containing the total number of bytes in the backup.",
            "type": "number",
            "example": 53278444
          },
          "bytesDone": {
            "description": "JSON number containing the number of bytes backed up for a running backup.\nWhen the backup is completed, it matches with the totalBytes field.",
            "type": "number",
            "example": 53278444
          },
          "percentDone": {
            "description": "JSON number containing the percentage complete for a running backup.\nWhen the backup is completed, it is set to \"100\".",
            "type": "number",
            "example": 100
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appBackup_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/appBackup_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "appBackup_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appBackup\"",
            "type": "string",
            "enum": [
              "application/astra-appBackup"
            ],
            "example": "application/astra-appBackup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the backup. If not specified, or when backups are initiated by a schedule, the system assigns a name for the backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID that indicates where the backup will be stored on create. If not specified, a system-selected bucket is used. If no buckets are available, an error will be returned on create.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0afbe357-a717-4c7a-8b3d-d0368959c8de"
          },
          "snapshotID": {
            "description": "JSON string containing the snapshot that was used to create the backup. To create the backup, a snapshot ID associated with the application being backed up can be specified on create. If not specified, a new snapshot will be created for the backup.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "05c357ed-30ce-432f-bbb0-9d5ff1695428"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appBackup_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "bucketID",
          "state",
          "stateUnready",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appBackup\"",
            "type": "string",
            "enum": [
              "application/astra-appBackup"
            ],
            "example": "application/astra-appBackup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "bab39d53-2d04-5297-b92e-58df89a2117b"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the backup. If not specified, or when backups are initiated by a schedule, the system assigns a name for the backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID that indicates where the backup will be stored on create. If not specified, a system-selected bucket is used. If no buckets are available, an error will be returned on create.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0afbe357-a717-4c7a-8b3d-d0368959c8de"
          },
          "snapshotID": {
            "description": "JSON string containing the snapshot that was used to create the backup. To create the backup, a snapshot ID associated with the application being backed up can be specified on create. If not specified, a new snapshot will be created for the backup.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "05c357ed-30ce-432f-bbb0-9d5ff1695428"
          },
          "scheduleID": {
            "description": "JSON string containing an optional schedule ID that indicates that the backup was triggered by a schedule and which schedule triggered the backup. Only present for backups initiated by a schedule.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.schedule",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1fe83650-9b3c-41ef-bb25-a2910c19c33e"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the backup.\nDefined values are:\n* \"pending\" - The application backup is scheduled for discovery\n* \"discovering\" - The application backup is in the process of being discovered\n* \"running\" - The application backup is running normally\n* \"completed\" - The application backup has completed successfully\n* \"failed\" - The application backup is in a permanent failure state\n* \"removed\" - The application backup is not currently accessible\n* \"unknown\" - The application backup state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "running",
              "completed",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "completed"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why an application backup is unable to transition to \"running\", or why it has transitioned to \"failed\" or \"removed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "hookState": {
            "description": "JSON string containing a value indicating the state of any execution hooks run as part of a snapshot.\nDefined values are:\n* \"failed\" - One or more execution hooks have failed\n* \"success\" - There were zero or more applicable hooks and all were successful",
            "type": "string",
            "enum": [
              "failed",
              "success"
            ]
          },
          "hookStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about why \"hookState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "backupCreationTimestamp": {
            "description": "JSON string containing a timestamp indicating when the backup was taken.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "totalBytes": {
            "description": "JSON number containing the total number of bytes in the backup.",
            "type": "number",
            "example": 53278444
          },
          "bytesDone": {
            "description": "JSON number containing the number of bytes backed up for a running backup.\nWhen the backup is completed, it matches with the totalBytes field.",
            "type": "number",
            "example": 53278444
          },
          "percentDone": {
            "description": "JSON number containing the percentage complete for a running backup.\nWhen the backup is completed, it is set to \"100\".",
            "type": "number",
            "example": 100
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appMirror_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "sourceAppID",
          "sourceClusterID",
          "destinationClusterID",
          "state",
          "stateDesired",
          "stateDetails",
          "healthState",
          "healthStateTransitions",
          "healthStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appMirror\"",
            "type": "string",
            "enum": [
              "application/astra-appMirror"
            ],
            "example": "application/astra-appMirror"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253"
          },
          "sourceAppID": {
            "description": "Identifier of the source application.\nOnly updated when swapping the sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "efd639b6-fc92-4112-8841-0c0ab7890ae0"
          },
          "sourceClusterID": {
            "description": "Identifier of the managed cluster hosting the source application.\nThis field is read-only and is determined based on the host cluster of the source application.\nIf provided in an update, it must match the cluster ID of the source application, so it can only change when swapping the sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5789e026-c2e2-41e9-ab00-9766bcfa8951"
          },
          "destinationAppID": {
            "description": "Identifier of the destination application.\nCannot be provided on create because a new app ID will be generated as part of relationship initialization.\nCan only be updated when swapping sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b"
          },
          "destinationClusterID": {
            "description": "Identifier of the managed cluster to host the destination application.\nMust be provided on create because it determines what cluster the destination application will be created on.\nIf provided on update, it must match the cluster ID of the destination application, so it can only change when swapping sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5d023a9-4061-4a8a-bfbf-3be11ff06226"
          },
          "namespaceMapping": {
            "description": "The namespace or namespaces to use when creating the destination application, corresponding to the namespaces of the source application.\nEach JSON object contains the fields \"clusterID\" and \"namespaces\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"namespaces\" value is a JSON array of JSON strings. There must be exactly one JSON object for each cluster, and the namespaces will be correlated by index.\nIf not provided, the same namespace from the source cluster will be used in the destination cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the namespaces are specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "namespaces": {
                  "description": "List of namespaces to use on the cluster. Correlated with the other cluster namespace list by index.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "$ref": "#/components/schemas/type_dns_1123",
                    "minLength": 1,
                    "maxLength": 63
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "storageClasses": {
            "description": "The storage class to be used on the destination cluster when creating new Persistent Volume Claims (PVCs).\nEach JSON object contains the fields \"clusterID\" and \"storageClassName\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"storageClassName\" is the storage class to use when creating PVCs on that cluster.\nIf not provided or if the value is missing for a cluster, the default storage class will be used for that cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the storage class is specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "storageClassName": {
                  "description": "Name of the storage class to use when creating PVCs on the cluster specified in \"clusterID\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "additionalProperties": false
            }
          },
          "state": {
            "description": "The state of the relationship.\nDefined values are:\n* \"establishing\" - The relationship is being created.\n* \"established\" - The relationship is created.\n* \"failingOver\" - Failover of the application to the destination cluster is in progress.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.\n* \"deleting\" - Resources created by the relationship are being cleaned up.\n* \"deleted\" - The relationship was cleaned up and deleted.",
            "type": "string",
            "enum": [
              "establishing",
              "established",
              "failingOver",
              "failedOver",
              "deleting",
              "deleted"
            ],
            "example": "established"
          },
          "stateTransitions": {
            "description": "Permitted state transitions.\nThe following state transitions are possible for this resource:\n* \"establishing\": \"established\", \"deleting\"\n* \"established\": \"failingOver\", \"deleting\"\n* \"failingOver\": \"failedOver\", \"deleting\"\n* \"failedOver\": \"establishing\", \"deleting\"\n* \"deleting\": \"deleted\"\n* \"deleted\":",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDesired": {
            "description": "The desired state for the relationship.\nAt creation, the only valid value is \"established\".\nDefined values are:\n* \"established\" - The relationship is created.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.  \n* \"deleted\" - The relationship was successfully cleaned up and deleted.",
            "type": "string",
            "enum": [
              "established",
              "failedOver",
              "deleted"
            ],
            "example": "established"
          },
          "stateAllowed": {
            "description": "States that can be requested in a given state.\nThe following states can be requested in each defined state:\n* \"establishing\": \"established\", \"deleted\"\n* \"established\": \"failedOver\", \"deleted\"\n* \"failingOver\": \"failedOver\", \"deleted\"\n* \"failedOver\": \"established\", \"deleted\"\n* \"deleting\": \"deleted\"\n* \"deleted\": \"deleted\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "establishing",
                "established",
                "failingOver",
                "failedOver",
                "deleting",
                "deleted"
              ]
            }
          },
          "stateDetails": {
            "description": "Additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "transferState": {
            "description": "State of the current or most recent snapshot transfer.\nDefined values are:\n* \"transferring\" - A new snapshot was created and is now being replicated to the destination cluster. This state also covers the transfers that have failed on previous attempts and are being continually retried.\n* \"idle\" - There is currently no transfer in progress.",
            "type": "string",
            "enum": [
              "transferring",
              "idle"
            ]
          },
          "transferStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"transferring\": \"idle\"\n* \"idle\": \"transferring\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "transferStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "healthState": {
            "description": "Health state of the resource.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"indeterminate\": \"normal\", \"warning\", \"critical\"\n* \"normal\": \"indeterminate\", \"warning\", \"critical\"\n* \"warning\": \"indeterminate\", \"normal\", \"critical\"\n* \"critical\": \"indeterminate\", \"normal\", \"warning\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "healthStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "appMirror_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/appMirror_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "appMirror_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "sourceAppID",
          "destinationClusterID",
          "stateDesired"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appMirror\"",
            "type": "string",
            "enum": [
              "application/astra-appMirror"
            ],
            "example": "application/astra-appMirror"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "sourceAppID": {
            "description": "Identifier of the source application.\nOnly updated when swapping the sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "efd639b6-fc92-4112-8841-0c0ab7890ae0"
          },
          "destinationClusterID": {
            "description": "Identifier of the managed cluster to host the destination application.\nMust be provided on create because it determines what cluster the destination application will be created on.\nIf provided on update, it must match the cluster ID of the destination application, so it can only change when swapping sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5d023a9-4061-4a8a-bfbf-3be11ff06226"
          },
          "namespaceMapping": {
            "description": "The namespace or namespaces to use when creating the destination application, corresponding to the namespaces of the source application.\nEach JSON object contains the fields \"clusterID\" and \"namespaces\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"namespaces\" value is a JSON array of JSON strings. There must be exactly one JSON object for each cluster, and the namespaces will be correlated by index.\nIf not provided, the same namespace from the source cluster will be used in the destination cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the namespaces are specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "namespaces": {
                  "description": "List of namespaces to use on the cluster. Correlated with the other cluster namespace list by index.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "$ref": "#/components/schemas/type_dns_1123",
                    "minLength": 1,
                    "maxLength": 63
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "storageClasses": {
            "description": "The storage class to be used on the destination cluster when creating new Persistent Volume Claims (PVCs).\nEach JSON object contains the fields \"clusterID\" and \"storageClassName\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"storageClassName\" is the storage class to use when creating PVCs on that cluster.\nIf not provided or if the value is missing for a cluster, the default storage class will be used for that cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the storage class is specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "storageClassName": {
                  "description": "Name of the storage class to use when creating PVCs on the cluster specified in \"clusterID\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "additionalProperties": false
            }
          },
          "stateDesired": {
            "description": "The desired state for the relationship.\nAt creation, the only valid value is \"established\".\nDefined values are:\n* \"established\" - The relationship is created.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.  \n* \"deleted\" - The relationship was successfully cleaned up and deleted.",
            "type": "string",
            "enum": [
              "established",
              "failedOver",
              "deleted"
            ],
            "example": "established"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "appMirror_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "sourceAppID",
          "sourceClusterID",
          "destinationClusterID",
          "state",
          "stateDesired",
          "stateDetails",
          "healthState",
          "healthStateTransitions",
          "healthStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appMirror\"",
            "type": "string",
            "enum": [
              "application/astra-appMirror"
            ],
            "example": "application/astra-appMirror"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253"
          },
          "sourceAppID": {
            "description": "Identifier of the source application.\nOnly updated when swapping the sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "efd639b6-fc92-4112-8841-0c0ab7890ae0"
          },
          "sourceClusterID": {
            "description": "Identifier of the managed cluster hosting the source application.\nThis field is read-only and is determined based on the host cluster of the source application.\nIf provided in an update, it must match the cluster ID of the source application, so it can only change when swapping the sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5789e026-c2e2-41e9-ab00-9766bcfa8951"
          },
          "destinationAppID": {
            "description": "Identifier of the destination application.\nCannot be provided on create because a new app ID will be generated as part of relationship initialization.\nCan only be updated when swapping sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b"
          },
          "destinationClusterID": {
            "description": "Identifier of the managed cluster to host the destination application.\nMust be provided on create because it determines what cluster the destination application will be created on.\nIf provided on update, it must match the cluster ID of the destination application, so it can only change when swapping sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5d023a9-4061-4a8a-bfbf-3be11ff06226"
          },
          "namespaceMapping": {
            "description": "The namespace or namespaces to use when creating the destination application, corresponding to the namespaces of the source application.\nEach JSON object contains the fields \"clusterID\" and \"namespaces\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"namespaces\" value is a JSON array of JSON strings. There must be exactly one JSON object for each cluster, and the namespaces will be correlated by index.\nIf not provided, the same namespace from the source cluster will be used in the destination cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the namespaces are specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "namespaces": {
                  "description": "List of namespaces to use on the cluster. Correlated with the other cluster namespace list by index.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "$ref": "#/components/schemas/type_dns_1123",
                    "minLength": 1,
                    "maxLength": 63
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "storageClasses": {
            "description": "The storage class to be used on the destination cluster when creating new Persistent Volume Claims (PVCs).\nEach JSON object contains the fields \"clusterID\" and \"storageClassName\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"storageClassName\" is the storage class to use when creating PVCs on that cluster.\nIf not provided or if the value is missing for a cluster, the default storage class will be used for that cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the storage class is specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "storageClassName": {
                  "description": "Name of the storage class to use when creating PVCs on the cluster specified in \"clusterID\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "additionalProperties": false
            }
          },
          "state": {
            "description": "The state of the relationship.\nDefined values are:\n* \"establishing\" - The relationship is being created.\n* \"established\" - The relationship is created.\n* \"failingOver\" - Failover of the application to the destination cluster is in progress.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.\n* \"deleting\" - Resources created by the relationship are being cleaned up.\n* \"deleted\" - The relationship was cleaned up and deleted.",
            "type": "string",
            "enum": [
              "establishing",
              "established",
              "failingOver",
              "failedOver",
              "deleting",
              "deleted"
            ],
            "example": "established"
          },
          "stateTransitions": {
            "description": "Permitted state transitions.\nThe following state transitions are possible for this resource:\n* \"establishing\": \"established\", \"deleting\"\n* \"established\": \"failingOver\", \"deleting\"\n* \"failingOver\": \"failedOver\", \"deleting\"\n* \"failedOver\": \"establishing\", \"deleting\"\n* \"deleting\": \"deleted\"\n* \"deleted\":",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDesired": {
            "description": "The desired state for the relationship.\nAt creation, the only valid value is \"established\".\nDefined values are:\n* \"established\" - The relationship is created.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.  \n* \"deleted\" - The relationship was successfully cleaned up and deleted.",
            "type": "string",
            "enum": [
              "established",
              "failedOver",
              "deleted"
            ],
            "example": "established"
          },
          "stateAllowed": {
            "description": "States that can be requested in a given state.\nThe following states can be requested in each defined state:\n* \"establishing\": \"established\", \"deleted\"\n* \"established\": \"failedOver\", \"deleted\"\n* \"failingOver\": \"failedOver\", \"deleted\"\n* \"failedOver\": \"established\", \"deleted\"\n* \"deleting\": \"deleted\"\n* \"deleted\": \"deleted\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "establishing",
                "established",
                "failingOver",
                "failedOver",
                "deleting",
                "deleted"
              ]
            }
          },
          "stateDetails": {
            "description": "Additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "transferState": {
            "description": "State of the current or most recent snapshot transfer.\nDefined values are:\n* \"transferring\" - A new snapshot was created and is now being replicated to the destination cluster. This state also covers the transfers that have failed on previous attempts and are being continually retried.\n* \"idle\" - There is currently no transfer in progress.",
            "type": "string",
            "enum": [
              "transferring",
              "idle"
            ]
          },
          "transferStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"transferring\": \"idle\"\n* \"idle\": \"transferring\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "transferStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "healthState": {
            "description": "Health state of the resource.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"indeterminate\": \"normal\", \"warning\", \"critical\"\n* \"normal\": \"indeterminate\", \"warning\", \"critical\"\n* \"warning\": \"indeterminate\", \"normal\", \"critical\"\n* \"critical\": \"indeterminate\", \"normal\", \"warning\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "healthStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "appMirror_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appMirror\"",
            "type": "string",
            "enum": [
              "application/astra-appMirror"
            ],
            "example": "application/astra-appMirror"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5fbadd4-5d9e-5942-bb7f-f5386b6b6253"
          },
          "sourceAppID": {
            "description": "Identifier of the source application.\nOnly updated when swapping the sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "efd639b6-fc92-4112-8841-0c0ab7890ae0"
          },
          "sourceClusterID": {
            "description": "Identifier of the managed cluster hosting the source application.\nThis field is read-only and is determined based on the host cluster of the source application.\nIf provided in an update, it must match the cluster ID of the source application, so it can only change when swapping the sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5789e026-c2e2-41e9-ab00-9766bcfa8951"
          },
          "destinationAppID": {
            "description": "Identifier of the destination application.\nCannot be provided on create because a new app ID will be generated as part of relationship initialization.\nCan only be updated when swapping sourceAppID with the destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "cd7b6d91-fc19-4983-a754-9a7bb4d80a7b"
          },
          "destinationClusterID": {
            "description": "Identifier of the managed cluster to host the destination application.\nMust be provided on create because it determines what cluster the destination application will be created on.\nIf provided on update, it must match the cluster ID of the destination application, so it can only change when swapping sourceAppID with destinationAppID.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c5d023a9-4061-4a8a-bfbf-3be11ff06226"
          },
          "namespaceMapping": {
            "description": "The namespace or namespaces to use when creating the destination application, corresponding to the namespaces of the source application.\nEach JSON object contains the fields \"clusterID\" and \"namespaces\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"namespaces\" value is a JSON array of JSON strings. There must be exactly one JSON object for each cluster, and the namespaces will be correlated by index.\nIf not provided, the same namespace from the source cluster will be used in the destination cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the namespaces are specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "namespaces": {
                  "description": "List of namespaces to use on the cluster. Correlated with the other cluster namespace list by index.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "$ref": "#/components/schemas/type_dns_1123",
                    "minLength": 1,
                    "maxLength": 63
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "storageClasses": {
            "description": "The storage class to be used on the destination cluster when creating new Persistent Volume Claims (PVCs).\nEach JSON object contains the fields \"clusterID\" and \"storageClassName\", where the \"clusterID\" value is the JSON string ID of the source or destination cluster, and the \"storageClassName\" is the storage class to use when creating PVCs on that cluster.\nIf not provided or if the value is missing for a cluster, the default storage class will be used for that cluster.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "clusterID": {
                  "description": "Identifier of the cluster for which the storage class is specified.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
                  "type": "application/vnd.netapp.astra.cluster",
                  "$ref": "#/components/schemas/type_astra_identifier"
                },
                "storageClassName": {
                  "description": "Name of the storage class to use when creating PVCs on the cluster specified in \"clusterID\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              },
              "additionalProperties": false
            }
          },
          "state": {
            "description": "The state of the relationship.\nDefined values are:\n* \"establishing\" - The relationship is being created.\n* \"established\" - The relationship is created.\n* \"failingOver\" - Failover of the application to the destination cluster is in progress.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.\n* \"deleting\" - Resources created by the relationship are being cleaned up.\n* \"deleted\" - The relationship was cleaned up and deleted.",
            "type": "string",
            "enum": [
              "establishing",
              "established",
              "failingOver",
              "failedOver",
              "deleting",
              "deleted"
            ],
            "example": "established"
          },
          "stateTransitions": {
            "description": "Permitted state transitions.\nThe following state transitions are possible for this resource:\n* \"establishing\": \"established\", \"deleting\"\n* \"established\": \"failingOver\", \"deleting\"\n* \"failingOver\": \"failedOver\", \"deleting\"\n* \"failedOver\": \"establishing\", \"deleting\"\n* \"deleting\": \"deleted\"\n* \"deleted\":",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDesired": {
            "description": "The desired state for the relationship.\nAt creation, the only valid value is \"established\".\nDefined values are:\n* \"established\" - The relationship is created.\n* \"failedOver\" - Failover of the application to the destination cluster has completed.  \n* \"deleted\" - The relationship was successfully cleaned up and deleted.",
            "type": "string",
            "enum": [
              "established",
              "failedOver",
              "deleted"
            ],
            "example": "established"
          },
          "stateAllowed": {
            "description": "States that can be requested in a given state.\nThe following states can be requested in each defined state:\n* \"establishing\": \"established\", \"deleted\"\n* \"established\": \"failedOver\", \"deleted\"\n* \"failingOver\": \"failedOver\", \"deleted\"\n* \"failedOver\": \"established\", \"deleted\"\n* \"deleting\": \"deleted\"\n* \"deleted\": \"deleted\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "establishing",
                "established",
                "failingOver",
                "failedOver",
                "deleting",
                "deleted"
              ]
            }
          },
          "stateDetails": {
            "description": "Additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "transferState": {
            "description": "State of the current or most recent snapshot transfer.\nDefined values are:\n* \"transferring\" - A new snapshot was created and is now being replicated to the destination cluster. This state also covers the transfers that have failed on previous attempts and are being continually retried.\n* \"idle\" - There is currently no transfer in progress.",
            "type": "string",
            "enum": [
              "transferring",
              "idle"
            ]
          },
          "transferStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"transferring\": \"idle\"\n* \"idle\": \"transferring\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "transferStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "healthState": {
            "description": "Health state of the resource.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateTransitions": {
            "description": "Permitted state transitions from a given defined state.\nThe following state transitions are possible for this resource:\n* \"indeterminate\": \"normal\", \"warning\", \"critical\"\n* \"normal\": \"indeterminate\", \"warning\", \"critical\"\n* \"warning\": \"indeterminate\", \"normal\", \"critical\"\n* \"critical\": \"indeterminate\", \"normal\", \"warning\"",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "healthStateDetails": {
            "description": "Additional details about the current state including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "appSnap_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appSnap\"",
            "type": "string",
            "enum": [
              "application/astra-appSnap"
            ],
            "example": "application/astra-appSnap"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4f56a1df-8f47-541a-bd81-77260053a2f6"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the snapshot. If not specified, or when snapshots are initiated by a schedule, the system assigns a name for the snapshot.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "scheduleID": {
            "description": "JSON string containing an optional schedule ID that indicates that the snapshot was triggered by a schedule and specifies which schedule triggered the snapshot. Only present for snapshots initiated by a schedule.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.schedule",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1fe83650-9b3c-41ef-bb25-a2910c19c33e"
          },
          "snapshotAppAsset": {
            "description": "JSON string containing the ID of the application asset corresponding to the snapshot. This field will be returned when the state of the application snapshot is \"completed\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f0d519ed-28e6-4c14-a421-f51a0f9a4162"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the snapshot.\nDefined values are:\n* \"pending\" - The application snapshot is scheduled for discovery\n* \"discovering\" - The application snapshot is in the process of being discovered\n* \"running\" - The application snapshot is running normally\n* \"completed\" - The application snapshot has completed\n* \"failed\" - The application snapshot is in a permanent failure state\n* \"removed\" - The application snapshot is not currently accessible\n* \"unknown\" - The application snapshot state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "running",
              "completed",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "completed"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why an application snapshot is unable to transition to \"running\", or why it has transitioned to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "hookState": {
            "description": "JSON string containing a value indicating the state of any execution hook or hooks running as a part of a snapshot.\nDefined values are:\n* \"failed\" - One or more execution hooks have failed\n* \"success\" - There were zero or more applicable hooks and all were successful",
            "type": "string",
            "enum": [
              "failed",
              "success"
            ]
          },
          "hookStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about why \"hookState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appSnap_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/appSnap_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "appSnap_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appSnap\"",
            "type": "string",
            "enum": [
              "application/astra-appSnap"
            ],
            "example": "application/astra-appSnap"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the snapshot. If not specified, or when snapshots are initiated by a schedule, the system assigns a name for the snapshot.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "appSnap_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-appSnap\"",
            "type": "string",
            "enum": [
              "application/astra-appSnap"
            ],
            "example": "application/astra-appSnap"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4f56a1df-8f47-541a-bd81-77260053a2f6"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the snapshot. If not specified, or when snapshots are initiated by a schedule, the system assigns a name for the snapshot.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "app-name-245"
          },
          "scheduleID": {
            "description": "JSON string containing an optional schedule ID that indicates that the snapshot was triggered by a schedule and specifies which schedule triggered the snapshot. Only present for snapshots initiated by a schedule.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.schedule",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1fe83650-9b3c-41ef-bb25-a2910c19c33e"
          },
          "snapshotAppAsset": {
            "description": "JSON string containing the ID of the application asset corresponding to the snapshot. This field will be returned when the state of the application snapshot is \"completed\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f0d519ed-28e6-4c14-a421-f51a0f9a4162"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the snapshot.\nDefined values are:\n* \"pending\" - The application snapshot is scheduled for discovery\n* \"discovering\" - The application snapshot is in the process of being discovered\n* \"running\" - The application snapshot is running normally\n* \"completed\" - The application snapshot has completed\n* \"failed\" - The application snapshot is in a permanent failure state\n* \"removed\" - The application snapshot is not currently accessible\n* \"unknown\" - The application snapshot state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "running",
              "completed",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "completed"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why an application snapshot is unable to transition to \"running\", or why it has transitioned to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "hookState": {
            "description": "JSON string containing a value indicating the state of any execution hook or hooks running as a part of a snapshot.\nDefined values are:\n* \"failed\" - One or more execution hooks have failed\n* \"success\" - There were zero or more applicable hooks and all were successful",
            "type": "string",
            "enum": [
              "failed",
              "success"
            ]
          },
          "hookStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about why \"hookState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "app_2.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "links",
          "name",
          "namespaceScopedResources",
          "state",
          "stateDetails",
          "protectionState",
          "protectionStateDetails",
          "namespaces",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-app\"",
            "type": "string",
            "enum": [
              "application/astra-app"
            ],
            "example": "application/astra-app"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"2.0\"\n* \"2.1\"\n* \"2.2\"",
            "type": "string",
            "enum": [
              "2.2",
              "2.1",
              "2.0"
            ],
            "example": "2.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "39c1c79f-efab-5357-88fb-20e628c4dd96"
          },
          "links": {
            "description": "Links describing supported operations against the resource.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_links"
          },
          "name": {
            "description": "JSON string containing a name for the application.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "jenkins"
          },
          "clusterScopedResources": {
            "description": "JSON array of JSON objects describing the cluster-scoped resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "GVK"
              ],
              "properties": {
                "GVK": {
                  "description": "JSON object containing a Kubernetes group/version/kind.\n* This object is internally validated against Astra /apiResources.",
                  "type": "object",
                  "required": [
                    "group",
                    "kind",
                    "version"
                  ],
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "rbac.authorization.k8s.io"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "ClusterRole"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    }
                  },
                  "additionalProperties": false
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector for the cluster-scoped GroupVersionKinds (GVKs) within the cluster. If this is empty, then all GVK instances on the cluster are included.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "namespaceScopedResources": {
            "description": "JSON array of JSON objects describing the resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "namespace",
                "labelSelectors"
              ],
              "properties": {
                "namespace": {
                  "description": "JSON string containing the name of a namespace in which the application is defined.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector within the namespace. If this is empty, then all resources in the namespace are included.\nEach element in this array is a Kubernetes label selector string and follows the grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\n* [ \"app != mysql\" ] – Select all resources that have a label whose name is app and whose value is not mysql\n* [ \"app in (mysql, mariadb)\" ] – Select all resources that have a label whose name is app and value is mysql or mariadb\n* [ \"app notin (nginx, wordpress)\" ] – Select all resources that do not have a label whose name is app and whose values are nginx or wordpress\n* [ \"app\" ] – Select all resources that have a label named app\n* [ \"!app\" ] – Select all resources that do not have a label named app\nNote that multiple selection operators can be included in a single selector, separated by commas. In that case, the results of the individual selection operators are AND-ed:\n* [ \"app=mysql,version=2\" ] – Select all resources that have a label whose name is app and whose value is mysql and a label whose name is version and whose value is 2",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "lastResourceCollectionTimestamp": {
            "description": "JSON string containing the timestamp when the last resource collection was performed. This field is unset if no resource collection has been performed for this application yet.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the application.\nDefined values are:\n* \"pending\" - The application is scheduled for discovery\n* \"discovering\" - The application is in the process of being discovered\n* \"provisioning\" - The application is in the process of being provisioned\n* \"ready\" - The application is running normally\n* \"failed\" - The application is in a permanent failure state\n* \"restoring\" - The application is being restored from backup or snapshot\n* \"unavailable\" - The application is not currently accessible\n* \"unknown\" - The application state cannot be determined\n* \"deleting\" - The application is in the process of being deleted",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "ready",
              "failed",
              "restoring",
              "unavailable",
              "unknown",
              "deleting"
            ],
            "example": "ready"
          },
          "stateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the application.\nDefined values are:\n* \"protected\" - The application has a protection policy defined and is in conformance with that policy\n* \"partial\" - The application has a protection policy defined, but is out of conformance with that policy\n* \"none\" - The application does not have a protection policy defined\n* \"atRisk\" - The default storage class on the cluster does not support snapshots, the application is at risk of gaining an unsupported volume",
            "type": "string",
            "enum": [
              "atRisk",
              "protected",
              "partial",
              "none"
            ],
            "example": "protected"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "appDetectedType": {
            "description": "JSON string that uniquely represents the specific type of application that is detected.\nDefined values are:\n* \"system\" - The application contains a resource that identifies it as part of the Kubernetes environment\n* \"acc\" - The application contains resources that identify it as an Astra Control Center instance",
            "type": "string",
            "enum": [
              "system",
              "acc"
            ]
          },
          "namespaces": {
            "description": "JSON array of JSON strings containing the names of the namespaces in which the application is running.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "namespaceMapping": {
            "description": "JSON array of JSON objects, each mapping a source namespace to a destination namespace for a clone operation.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the namespace on the source cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "destination": {
                  "description": "JSON string containing the name of the namespace on the destination cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                }
              },
              "additionalProperties": false
            }
          },
          "storageClassMapping": {
            "description": "JSON array of JSON objects, each mapping a source storage class to a destination storage class for a restore operation. If no elements or not present, original source storage class names will be used. \nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the source storage class. Can also be '*' to specify all source storage classes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema if Storage Class name is used\n* '*' to specify all storage classes",
                  "type": "string",
                  "pattern": "^(([a-z0-9]([-a-z0-9]*[a-z0-9])?)|(\\*))$",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "standard"
                },
                "destination": {
                  "description": "JSON string containing the name of the destination storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "extreme"
                }
              },
              "additionalProperties": false
            }
          },
          "clusterName": {
            "description": "JSON string containing the name of the cluster that the application is running on.\nNot returned if the application is not currently running.",
            "type": "string",
            "example": "GKE-22"
          },
          "clusterID": {
            "description": "JSON string containing the ID of the cluster that the application is running on.\nNot returned if the application is not currently running.\nWhen specified on create, clusterID indicates which cluster the application must be cloned into. If the specified cluster does not exist, or if the cluster specified does not match the clusterID specified in the request URI, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0f284377-e5dc-4dcd-bacd-3197f2b8a347"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine (GKE)\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service (AKS)\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service (Amazon EKS)\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "sourceAppID": {
            "description": "JSON string containing the ID of a source application. Only returned if the application was cloned from another application, or was restored from a backup or snapshot.\nWhen specified on create, the sourceAppID is used in conjunction with the sourceClusterID and indicates which running application will be cloned. If the specified application does not exist on the specified source cluster, the clone will fail.\nOnly one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "sourceClusterName": {
            "description": "JSON string containing the name of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.",
            "type": "string"
          },
          "sourceClusterID": {
            "description": "JSON string containing the ID of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.\nWhen specified on create, the sourceClusterID is used in conjunction with the sourceAppID and indicates the source cluster of the application to be cloned. If the specified source cluster does not exist, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "backupID": {
            "description": "JSON string containing the ID of the backup that the application was restored from.\nOnly returned if the application was restored from a backup.\nWhen specified on create, backupID indicates that an application will be cloned from an existing backup. If the specified backup does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, backupID indicates the application backup from which the application will be in-place restored. If the specified backup does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appBackup",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "snapshotID": {
            "description": "JSON string containing the ID of the snapshot that the application was restored from.\nOnly returned if the application was restored from a snapshot.\nWhen specified on create, snapshotID indicates that an application will be cloned from an existing snapshot. If the specified snapshot does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, snapshotID indicates the application snapshot from which the application will be in-place restored. If the specified snapshot does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "replicationSourceAppID": {
            "description": "JSON string containing the ID of the application that is being replicated to this application.\nOnly returned if the application is currently the destination in an AppMirror relationship, and the relationship is not in the failedOver state. When the relationship is in the failedOver state, this field is not returned.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "restoreFilter": {
            "description": "JSON object containing a list of filters that describe which resources are included or excluded from a selective restore operation. Include and exclude are mutually exclusive, and a selective restore can only use one kind of filter.",
            "type": "object",
            "properties": {
              "resourceSelectionCriteria": {
                "description": "JSON string containing a value that indicates how resource filters select resources.  Valid values are include or exclude.",
                "type": "string",
                "enum": [
                  "include",
                  "exclude"
                ],
                "example": "include"
              },
              "GVKN": {
                "description": "JSON array of JSON objects that describe resources to filter during a selective restore. A resource matches a single GVKN filter element if all of the specified filter fields match the corresponding resource field. Filter fields that are arrays (for example, namespaces and names) match if any of its elements match the corresponding resource field. The labelSelectors field requires that all selectors match. A resource that matches any filter in the array of GVKN filter objects is included or excluded from the restore based on the resourceSelectionCriteria value. Specifying empty GVKN objects results in a validation error.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "apps"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "StatefulSet"
                    },
                    "namespaces": {
                      "description": "JSON array of JSON strings describing namespaces to include or exclude resources from.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 63
                      }
                    },
                    "names": {
                      "description": "JSON array of JSON strings describing Kubernetes resource names to include or exclude from the selective restore.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 253
                      }
                    },
                    "labelSelectors": {
                      "description": "JSON array of JSON strings describing Kubernetes label selectors used to include or exclude resources from the selective restore.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "app_2.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/app_2.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "app_2.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-app\"",
            "type": "string",
            "enum": [
              "application/astra-app"
            ],
            "example": "application/astra-app"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"2.0\"\n* \"2.1\"\n* \"2.2\"",
            "type": "string",
            "enum": [
              "2.2",
              "2.1",
              "2.0"
            ],
            "example": "2.2"
          },
          "name": {
            "description": "JSON string containing a name for the application.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "jenkins"
          },
          "clusterScopedResources": {
            "description": "JSON array of JSON objects describing the cluster-scoped resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "GVK"
              ],
              "properties": {
                "GVK": {
                  "description": "JSON object containing a Kubernetes group/version/kind.\n* This object is internally validated against Astra /apiResources.",
                  "type": "object",
                  "required": [
                    "group",
                    "kind",
                    "version"
                  ],
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "rbac.authorization.k8s.io"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "ClusterRole"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    }
                  },
                  "additionalProperties": false
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector for the cluster-scoped GroupVersionKinds (GVKs) within the cluster. If this is empty, then all GVK instances on the cluster are included.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "namespaceScopedResources": {
            "description": "JSON array of JSON objects describing the resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "namespace"
              ],
              "properties": {
                "namespace": {
                  "description": "JSON string containing the name of a namespace in which the application is defined.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector within the namespace. If this is empty, then all resources in the namespace are included.\nEach element in this array is a Kubernetes label selector string and follows the grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\n* [ \"app != mysql\" ] – Select all resources that have a label whose name is app and whose value is not mysql\n* [ \"app in (mysql, mariadb)\" ] – Select all resources that have a label whose name is app and value is mysql or mariadb\n* [ \"app notin (nginx, wordpress)\" ] – Select all resources that do not have a label whose name is app and whose values are nginx or wordpress\n* [ \"app\" ] – Select all resources that have a label named app\n* [ \"!app\" ] – Select all resources that do not have a label named app\nNote that multiple selection operators can be included in a single selector, separated by commas. In that case, the results of the individual selection operators are AND-ed:\n* [ \"app=mysql,version=2\" ] – Select all resources that have a label whose name is app and whose value is mysql and a label whose name is version and whose value is 2",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "namespaceMapping": {
            "description": "JSON array of JSON objects, each mapping a source namespace to a destination namespace for a clone operation.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the namespace on the source cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "destination": {
                  "description": "JSON string containing the name of the namespace on the destination cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                }
              },
              "additionalProperties": false
            }
          },
          "storageClassMapping": {
            "description": "JSON array of JSON objects, each mapping a source storage class to a destination storage class for a restore operation. If no elements or not present, original source storage class names will be used. \nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the source storage class. Can also be '*' to specify all source storage classes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema if Storage Class name is used\n* '*' to specify all storage classes",
                  "type": "string",
                  "pattern": "^(([a-z0-9]([-a-z0-9]*[a-z0-9])?)|(\\*))$",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "standard"
                },
                "destination": {
                  "description": "JSON string containing the name of the destination storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "extreme"
                }
              },
              "additionalProperties": false
            }
          },
          "clusterID": {
            "description": "JSON string containing the ID of the cluster that the application is running on.\nNot returned if the application is not currently running.\nWhen specified on create, clusterID indicates which cluster the application must be cloned into. If the specified cluster does not exist, or if the cluster specified does not match the clusterID specified in the request URI, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0f284377-e5dc-4dcd-bacd-3197f2b8a347"
          },
          "sourceAppID": {
            "description": "JSON string containing the ID of a source application. Only returned if the application was cloned from another application, or was restored from a backup or snapshot.\nWhen specified on create, the sourceAppID is used in conjunction with the sourceClusterID and indicates which running application will be cloned. If the specified application does not exist on the specified source cluster, the clone will fail.\nOnly one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "sourceClusterID": {
            "description": "JSON string containing the ID of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.\nWhen specified on create, the sourceClusterID is used in conjunction with the sourceAppID and indicates the source cluster of the application to be cloned. If the specified source cluster does not exist, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "backupID": {
            "description": "JSON string containing the ID of the backup that the application was restored from.\nOnly returned if the application was restored from a backup.\nWhen specified on create, backupID indicates that an application will be cloned from an existing backup. If the specified backup does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, backupID indicates the application backup from which the application will be in-place restored. If the specified backup does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appBackup",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "snapshotID": {
            "description": "JSON string containing the ID of the snapshot that the application was restored from.\nOnly returned if the application was restored from a snapshot.\nWhen specified on create, snapshotID indicates that an application will be cloned from an existing snapshot. If the specified snapshot does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, snapshotID indicates the application snapshot from which the application will be in-place restored. If the specified snapshot does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "restoreFilter": {
            "description": "JSON object containing a list of filters that describe which resources are included or excluded from a selective restore operation. Include and exclude are mutually exclusive, and a selective restore can only use one kind of filter.",
            "type": "object",
            "required": [
              "resourceSelectionCriteria",
              "GVKN"
            ],
            "properties": {
              "resourceSelectionCriteria": {
                "description": "JSON string containing a value that indicates how resource filters select resources.  Valid values are include or exclude.",
                "type": "string",
                "enum": [
                  "include",
                  "exclude"
                ],
                "example": "include"
              },
              "GVKN": {
                "description": "JSON array of JSON objects that describe resources to filter during a selective restore. A resource matches a single GVKN filter element if all of the specified filter fields match the corresponding resource field. Filter fields that are arrays (for example, namespaces and names) match if any of its elements match the corresponding resource field. The labelSelectors field requires that all selectors match. A resource that matches any filter in the array of GVKN filter objects is included or excluded from the restore based on the resourceSelectionCriteria value. Specifying empty GVKN objects results in a validation error.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "apps"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "StatefulSet"
                    },
                    "namespaces": {
                      "description": "JSON array of JSON strings describing namespaces to include or exclude resources from.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 63
                      }
                    },
                    "names": {
                      "description": "JSON array of JSON strings describing Kubernetes resource names to include or exclude from the selective restore.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 253
                      }
                    },
                    "labelSelectors": {
                      "description": "JSON array of JSON strings describing Kubernetes label selectors used to include or exclude resources from the selective restore.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "app_2.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "links",
          "name",
          "namespaceScopedResources",
          "state",
          "stateDetails",
          "protectionState",
          "protectionStateDetails",
          "namespaces",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-app\"",
            "type": "string",
            "enum": [
              "application/astra-app"
            ],
            "example": "application/astra-app"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"2.0\"\n* \"2.1\"\n* \"2.2\"",
            "type": "string",
            "enum": [
              "2.2",
              "2.1",
              "2.0"
            ],
            "example": "2.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "39c1c79f-efab-5357-88fb-20e628c4dd96"
          },
          "links": {
            "description": "Links describing supported operations against the resource.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_links"
          },
          "name": {
            "description": "JSON string containing a name for the application.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "jenkins"
          },
          "clusterScopedResources": {
            "description": "JSON array of JSON objects describing the cluster-scoped resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "GVK"
              ],
              "properties": {
                "GVK": {
                  "description": "JSON object containing a Kubernetes group/version/kind.\n* This object is internally validated against Astra /apiResources.",
                  "type": "object",
                  "required": [
                    "group",
                    "kind",
                    "version"
                  ],
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "rbac.authorization.k8s.io"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "ClusterRole"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    }
                  },
                  "additionalProperties": false
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector for the cluster-scoped GroupVersionKinds (GVKs) within the cluster. If this is empty, then all GVK instances on the cluster are included.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "namespaceScopedResources": {
            "description": "JSON array of JSON objects describing the resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "namespace",
                "labelSelectors"
              ],
              "properties": {
                "namespace": {
                  "description": "JSON string containing the name of a namespace in which the application is defined.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector within the namespace. If this is empty, then all resources in the namespace are included.\nEach element in this array is a Kubernetes label selector string and follows the grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\n* [ \"app != mysql\" ] – Select all resources that have a label whose name is app and whose value is not mysql\n* [ \"app in (mysql, mariadb)\" ] – Select all resources that have a label whose name is app and value is mysql or mariadb\n* [ \"app notin (nginx, wordpress)\" ] – Select all resources that do not have a label whose name is app and whose values are nginx or wordpress\n* [ \"app\" ] – Select all resources that have a label named app\n* [ \"!app\" ] – Select all resources that do not have a label named app\nNote that multiple selection operators can be included in a single selector, separated by commas. In that case, the results of the individual selection operators are AND-ed:\n* [ \"app=mysql,version=2\" ] – Select all resources that have a label whose name is app and whose value is mysql and a label whose name is version and whose value is 2",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "lastResourceCollectionTimestamp": {
            "description": "JSON string containing the timestamp when the last resource collection was performed. This field is unset if no resource collection has been performed for this application yet.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the application.\nDefined values are:\n* \"pending\" - The application is scheduled for discovery\n* \"discovering\" - The application is in the process of being discovered\n* \"provisioning\" - The application is in the process of being provisioned\n* \"ready\" - The application is running normally\n* \"failed\" - The application is in a permanent failure state\n* \"restoring\" - The application is being restored from backup or snapshot\n* \"unavailable\" - The application is not currently accessible\n* \"unknown\" - The application state cannot be determined\n* \"deleting\" - The application is in the process of being deleted",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "ready",
              "failed",
              "restoring",
              "unavailable",
              "unknown",
              "deleting"
            ],
            "example": "ready"
          },
          "stateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the application.\nDefined values are:\n* \"protected\" - The application has a protection policy defined and is in conformance with that policy\n* \"partial\" - The application has a protection policy defined, but is out of conformance with that policy\n* \"none\" - The application does not have a protection policy defined\n* \"atRisk\" - The default storage class on the cluster does not support snapshots, the application is at risk of gaining an unsupported volume",
            "type": "string",
            "enum": [
              "atRisk",
              "protected",
              "partial",
              "none"
            ],
            "example": "protected"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "appDetectedType": {
            "description": "JSON string that uniquely represents the specific type of application that is detected.\nDefined values are:\n* \"system\" - The application contains a resource that identifies it as part of the Kubernetes environment\n* \"acc\" - The application contains resources that identify it as an Astra Control Center instance",
            "type": "string",
            "enum": [
              "system",
              "acc"
            ]
          },
          "namespaces": {
            "description": "JSON array of JSON strings containing the names of the namespaces in which the application is running.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "namespaceMapping": {
            "description": "JSON array of JSON objects, each mapping a source namespace to a destination namespace for a clone operation.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the namespace on the source cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "destination": {
                  "description": "JSON string containing the name of the namespace on the destination cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                }
              },
              "additionalProperties": false
            }
          },
          "storageClassMapping": {
            "description": "JSON array of JSON objects, each mapping a source storage class to a destination storage class for a restore operation. If no elements or not present, original source storage class names will be used. \nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "source",
                "destination"
              ],
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the source storage class. Can also be '*' to specify all source storage classes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema if Storage Class name is used\n* '*' to specify all storage classes",
                  "type": "string",
                  "pattern": "^(([a-z0-9]([-a-z0-9]*[a-z0-9])?)|(\\*))$",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "standard"
                },
                "destination": {
                  "description": "JSON string containing the name of the destination storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "extreme"
                }
              },
              "additionalProperties": false
            }
          },
          "clusterName": {
            "description": "JSON string containing the name of the cluster that the application is running on.\nNot returned if the application is not currently running.",
            "type": "string",
            "example": "GKE-22"
          },
          "clusterID": {
            "description": "JSON string containing the ID of the cluster that the application is running on.\nNot returned if the application is not currently running.\nWhen specified on create, clusterID indicates which cluster the application must be cloned into. If the specified cluster does not exist, or if the cluster specified does not match the clusterID specified in the request URI, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0f284377-e5dc-4dcd-bacd-3197f2b8a347"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine (GKE)\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service (AKS)\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service (Amazon EKS)\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "sourceAppID": {
            "description": "JSON string containing the ID of a source application. Only returned if the application was cloned from another application, or was restored from a backup or snapshot.\nWhen specified on create, the sourceAppID is used in conjunction with the sourceClusterID and indicates which running application will be cloned. If the specified application does not exist on the specified source cluster, the clone will fail.\nOnly one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "sourceClusterName": {
            "description": "JSON string containing the name of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.",
            "type": "string"
          },
          "sourceClusterID": {
            "description": "JSON string containing the ID of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.\nWhen specified on create, the sourceClusterID is used in conjunction with the sourceAppID and indicates the source cluster of the application to be cloned. If the specified source cluster does not exist, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "backupID": {
            "description": "JSON string containing the ID of the backup that the application was restored from.\nOnly returned if the application was restored from a backup.\nWhen specified on create, backupID indicates that an application will be cloned from an existing backup. If the specified backup does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, backupID indicates the application backup from which the application will be in-place restored. If the specified backup does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appBackup",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "snapshotID": {
            "description": "JSON string containing the ID of the snapshot that the application was restored from.\nOnly returned if the application was restored from a snapshot.\nWhen specified on create, snapshotID indicates that an application will be cloned from an existing snapshot. If the specified snapshot does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, snapshotID indicates the application snapshot from which the application will be in-place restored. If the specified snapshot does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "replicationSourceAppID": {
            "description": "JSON string containing the ID of the application that is being replicated to this application.\nOnly returned if the application is currently the destination in an AppMirror relationship, and the relationship is not in the failedOver state. When the relationship is in the failedOver state, this field is not returned.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "restoreFilter": {
            "description": "JSON object containing a list of filters that describe which resources are included or excluded from a selective restore operation. Include and exclude are mutually exclusive, and a selective restore can only use one kind of filter.",
            "type": "object",
            "properties": {
              "resourceSelectionCriteria": {
                "description": "JSON string containing a value that indicates how resource filters select resources.  Valid values are include or exclude.",
                "type": "string",
                "enum": [
                  "include",
                  "exclude"
                ],
                "example": "include"
              },
              "GVKN": {
                "description": "JSON array of JSON objects that describe resources to filter during a selective restore. A resource matches a single GVKN filter element if all of the specified filter fields match the corresponding resource field. Filter fields that are arrays (for example, namespaces and names) match if any of its elements match the corresponding resource field. The labelSelectors field requires that all selectors match. A resource that matches any filter in the array of GVKN filter objects is included or excluded from the restore based on the resourceSelectionCriteria value. Specifying empty GVKN objects results in a validation error.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "apps"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "StatefulSet"
                    },
                    "namespaces": {
                      "description": "JSON array of JSON strings describing namespaces to include or exclude resources from.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 63
                      }
                    },
                    "names": {
                      "description": "JSON array of JSON strings describing Kubernetes resource names to include or exclude from the selective restore.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 253
                      }
                    },
                    "labelSelectors": {
                      "description": "JSON array of JSON strings describing Kubernetes label selectors used to include or exclude resources from the selective restore.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "app_2.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-app\"",
            "type": "string",
            "enum": [
              "application/astra-app"
            ],
            "example": "application/astra-app"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"2.0\"\n* \"2.1\"\n* \"2.2\"",
            "type": "string",
            "enum": [
              "2.2",
              "2.1",
              "2.0"
            ],
            "example": "2.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "39c1c79f-efab-5357-88fb-20e628c4dd96"
          },
          "name": {
            "description": "JSON string containing a name for the application.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\n* Conforms to the DNS 1123 Label Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_dns_1123",
            "minLength": 1,
            "maxLength": 63,
            "example": "jenkins"
          },
          "clusterScopedResources": {
            "description": "JSON array of JSON objects describing the cluster-scoped resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "GVK": {
                  "description": "JSON object containing a Kubernetes group/version/kind.\n* This object is internally validated against Astra /apiResources.",
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "rbac.authorization.k8s.io"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "ClusterRole"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    }
                  },
                  "additionalProperties": false
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector for the cluster-scoped GroupVersionKinds (GVKs) within the cluster. If this is empty, then all GVK instances on the cluster are included.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "namespaceScopedResources": {
            "description": "JSON array of JSON objects describing the resources that are part of this app",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "namespace": {
                  "description": "JSON string containing the name of a namespace in which the application is defined.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "labelSelectors": {
                  "description": "JSON array of JSON strings representing a label selector within the namespace. If this is empty, then all resources in the namespace are included.\nEach element in this array is a Kubernetes label selector string and follows the grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\n* [ \"app != mysql\" ] – Select all resources that have a label whose name is app and whose value is not mysql\n* [ \"app in (mysql, mariadb)\" ] – Select all resources that have a label whose name is app and value is mysql or mariadb\n* [ \"app notin (nginx, wordpress)\" ] – Select all resources that do not have a label whose name is app and whose values are nginx or wordpress\n* [ \"app\" ] – Select all resources that have a label named app\n* [ \"!app\" ] – Select all resources that do not have a label named app\nNote that multiple selection operators can be included in a single selector, separated by commas. In that case, the results of the individual selection operators are AND-ed:\n* [ \"app=mysql,version=2\" ] – Select all resources that have a label whose name is app and whose value is mysql and a label whose name is version and whose value is 2",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "lastResourceCollectionTimestamp": {
            "description": "JSON string containing the timestamp when the last resource collection was performed. This field is unset if no resource collection has been performed for this application yet.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the application.\nDefined values are:\n* \"pending\" - The application is scheduled for discovery\n* \"discovering\" - The application is in the process of being discovered\n* \"provisioning\" - The application is in the process of being provisioned\n* \"ready\" - The application is running normally\n* \"failed\" - The application is in a permanent failure state\n* \"restoring\" - The application is being restored from backup or snapshot\n* \"unavailable\" - The application is not currently accessible\n* \"unknown\" - The application state cannot be determined\n* \"deleting\" - The application is in the process of being deleted",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "ready",
              "failed",
              "restoring",
              "unavailable",
              "unknown",
              "deleting"
            ],
            "example": "ready"
          },
          "stateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the application.\nDefined values are:\n* \"protected\" - The application has a protection policy defined and is in conformance with that policy\n* \"partial\" - The application has a protection policy defined, but is out of conformance with that policy\n* \"none\" - The application does not have a protection policy defined\n* \"atRisk\" - The default storage class on the cluster does not support snapshots, the application is at risk of gaining an unsupported volume",
            "type": "string",
            "enum": [
              "atRisk",
              "protected",
              "partial",
              "none"
            ],
            "example": "protected"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "appDetectedType": {
            "description": "JSON string that uniquely represents the specific type of application that is detected.\nDefined values are:\n* \"system\" - The application contains a resource that identifies it as part of the Kubernetes environment\n* \"acc\" - The application contains resources that identify it as an Astra Control Center instance",
            "type": "string",
            "enum": [
              "system",
              "acc"
            ]
          },
          "namespaces": {
            "description": "JSON array of JSON strings containing the names of the namespaces in which the application is running.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "namespaceMapping": {
            "description": "JSON array of JSON objects, each mapping a source namespace to a destination namespace for a clone operation.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the namespace on the source cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                },
                "destination": {
                  "description": "JSON string containing the name of the namespace on the destination cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 253
                }
              },
              "additionalProperties": false
            }
          },
          "storageClassMapping": {
            "description": "JSON array of JSON objects, each mapping a source storage class to a destination storage class for a restore operation. If no elements or not present, original source storage class names will be used. \nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "description": "JSON string containing the name of the source storage class. Can also be '*' to specify all source storage classes.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema if Storage Class name is used\n* '*' to specify all storage classes",
                  "type": "string",
                  "pattern": "^(([a-z0-9]([-a-z0-9]*[a-z0-9])?)|(\\*))$",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "standard"
                },
                "destination": {
                  "description": "JSON string containing the name of the destination storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_dns_1123",
                  "minLength": 1,
                  "maxLength": 63,
                  "example": "extreme"
                }
              },
              "additionalProperties": false
            }
          },
          "clusterName": {
            "description": "JSON string containing the name of the cluster that the application is running on.\nNot returned if the application is not currently running.",
            "type": "string",
            "example": "GKE-22"
          },
          "clusterID": {
            "description": "JSON string containing the ID of the cluster that the application is running on.\nNot returned if the application is not currently running.\nWhen specified on create, clusterID indicates which cluster the application must be cloned into. If the specified cluster does not exist, or if the cluster specified does not match the clusterID specified in the request URI, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0f284377-e5dc-4dcd-bacd-3197f2b8a347"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine (GKE)\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service (AKS)\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service (Amazon EKS)\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "sourceAppID": {
            "description": "JSON string containing the ID of a source application. Only returned if the application was cloned from another application, or was restored from a backup or snapshot.\nWhen specified on create, the sourceAppID is used in conjunction with the sourceClusterID and indicates which running application will be cloned. If the specified application does not exist on the specified source cluster, the clone will fail.\nOnly one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "sourceClusterName": {
            "description": "JSON string containing the name of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.",
            "type": "string"
          },
          "sourceClusterID": {
            "description": "JSON string containing the ID of the cluster the application was previously running on.\nOnly returned if the application was cloned from another cluster.\nWhen specified on create, the sourceClusterID is used in conjunction with the sourceAppID and indicates the source cluster of the application to be cloned. If the specified source cluster does not exist, the clone will fail.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "backupID": {
            "description": "JSON string containing the ID of the backup that the application was restored from.\nOnly returned if the application was restored from a backup.\nWhen specified on create, backupID indicates that an application will be cloned from an existing backup. If the specified backup does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, backupID indicates the application backup from which the application will be in-place restored. If the specified backup does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appBackup",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "snapshotID": {
            "description": "JSON string containing the ID of the snapshot that the application was restored from.\nOnly returned if the application was restored from a snapshot.\nWhen specified on create, snapshotID indicates that an application will be cloned from an existing snapshot. If the specified snapshot does not exist, the clone will fail. Only one of sourceAppID, backupID, or snapshotID can be specified when creating an application.\nWhen specified on a replace, snapshotID indicates the application snapshot from which the application will be in-place restored. If the specified snapshot does not exist, the restore will fail. Only one of backupID or snapshotID can be specified when updating an application.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.appSnap",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "replicationSourceAppID": {
            "description": "JSON string containing the ID of the application that is being replicated to this application.\nOnly returned if the application is currently the destination in an AppMirror relationship, and the relationship is not in the failedOver state. When the relationship is in the failedOver state, this field is not returned.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "restoreFilter": {
            "description": "JSON object containing a list of filters that describe which resources are included or excluded from a selective restore operation. Include and exclude are mutually exclusive, and a selective restore can only use one kind of filter.",
            "type": "object",
            "required": [
              "resourceSelectionCriteria",
              "GVKN"
            ],
            "properties": {
              "resourceSelectionCriteria": {
                "description": "JSON string containing a value that indicates how resource filters select resources.  Valid values are include or exclude.",
                "type": "string",
                "enum": [
                  "include",
                  "exclude"
                ],
                "example": "include"
              },
              "GVKN": {
                "description": "JSON array of JSON objects that describe resources to filter during a selective restore. A resource matches a single GVKN filter element if all of the specified filter fields match the corresponding resource field. Filter fields that are arrays (for example, namespaces and names) match if any of its elements match the corresponding resource field. The labelSelectors field requires that all selectors match. A resource that matches any filter in the array of GVKN filter objects is included or excluded from the restore based on the resourceSelectionCriteria value. Specifying empty GVKN objects results in a validation error.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "group": {
                      "description": "JSON string containing a group identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "apps"
                    },
                    "version": {
                      "description": "JSON string containing a version identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "v1"
                    },
                    "kind": {
                      "description": "JSON string containing a kind identifier assigned by Kubernetes.\n* This string is internally validated against Astra /apiResources",
                      "type": "string",
                      "example": "StatefulSet"
                    },
                    "namespaces": {
                      "description": "JSON array of JSON strings describing namespaces to include or exclude resources from.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 63
                      }
                    },
                    "names": {
                      "description": "JSON array of JSON strings describing Kubernetes resource names to include or exclude from the selective restore.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253\n* Conforms to the DNS 1123 Label Schema",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "$ref": "#/components/schemas/type_dns_1123",
                        "minLength": 1,
                        "maxLength": 253
                      }
                    },
                    "labelSelectors": {
                      "description": "JSON array of JSON strings describing Kubernetes label selectors used to include or exclude resources from the selective restore.\nEach element in this array is a Kubernetes label selector string and follows the same grammar for those values.\nExamples:\n* [ \"app=mysql\" ] – Select all resources that have a label whose name is app and whose value is mysql\nMore examples can be found here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#set-based-requirement",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "asup_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "creationState",
          "creationStateDetails",
          "upload",
          "triggerType",
          "dataWindowStart",
          "dataWindowEnd",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-asup\"",
            "type": "string",
            "enum": [
              "application/astra-asup"
            ],
            "example": "application/astra-asup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9950003f-a1c7-5ca7-8930-06eec25f60aa"
          },
          "creationState": {
            "description": "JSON string containing a value indicating the creation state of the AutoSupport bundle. For \"completed\" and \"partial\" states, the bundle can be downloaded by performing a GET of the resource URI with an Accept header containing \"*/*\" or \"application/gzip\".\nDefined values are:\n* \"running\" - AutoSupport bundle generation is running normally.\n* \"completed\" - AutoSupport bundle generation has completed.\n* \"partial\" - AutoSupport bundle generation has completed but some data was not included in the bundle.\n* \"failed\" - AutoSupport bundle generation is in a permanent failure state.  ",
            "type": "string",
            "enum": [
              "running",
              "completed",
              "partial",
              "failed"
            ],
            "example": "partial"
          },
          "creationStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"creationState\" transitioned into \"partial\" or \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "upload": {
            "description": "JSON string containing a value indicating whether to upload the AutoSupport bundle after successful creation.\nDefined values are:\n* \"true\" - Upload the AutoSupport bundle.\n* \"false\" - Do not upload the AutoSupport bundle.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "uploadState": {
            "description": "JSON string containing a value that indicates the state of the AutoSupport bundle upload if it was requested.\nDefined values are:\n* \"pending\" - AutoSupport bundle upload is scheduled for when AutoSupport bundle creation completes (\"creationState\" is \"running\").\n* \"blocked\" - AutoSupport bundle upload was not attempted because the bundle was not created (\"creationState\" is \"failed\") or upload was blocked because there is no license.\n* \"running\" - AutoSupport bundle upload is running normally (\"creationState\" is \"completed\" or \"partial\").\n* \"completed\" - AutoSupport bundle upload has completed.\n* \"failed\" - AutoSupport bundle upload is in a permanent failure state.",
            "type": "string",
            "enum": [
              "pending",
              "blocked",
              "running",
              "completed",
              "failed"
            ],
            "example": "failed"
          },
          "uploadStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"uploadState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "triggerType": {
            "description": "JSON string containing a value that indicates what triggered the creation of the ASUP resource.\nDefined values are:\n* \"manual\" - The ASUP resource and associated AutoSupport bundle were created manually.\n* \"scheduled\" - The ASUP resource and associated AutoSupport bundle were created according to a configured schedule.",
            "type": "string",
            "enum": [
              "manual",
              "scheduled"
            ],
            "example": "manual"
          },
          "dataWindowStart": {
            "description": "JSON string containing a timestamp indicating the start time of the AutoSupport bundle data collection window. Defaults to 24 hours before the \"dataWindowEnd\" key value. Must occur before the \"dataWindowEnd\" key value. Maximum is 7 days before the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T12:24:00.000000Z"
          },
          "dataWindowEnd": {
            "description": "JSON string containing a timestamp indicating the end time of the AutoSupport bundle data collection window. Defaults to the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.000000Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "asup_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/asup_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "asup_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "upload"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-asup\"",
            "type": "string",
            "enum": [
              "application/astra-asup"
            ],
            "example": "application/astra-asup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "upload": {
            "description": "JSON string containing a value indicating whether to upload the AutoSupport bundle after successful creation.\nDefined values are:\n* \"true\" - Upload the AutoSupport bundle.\n* \"false\" - Do not upload the AutoSupport bundle.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "dataWindowStart": {
            "description": "JSON string containing a timestamp indicating the start time of the AutoSupport bundle data collection window. Defaults to 24 hours before the \"dataWindowEnd\" key value. Must occur before the \"dataWindowEnd\" key value. Maximum is 7 days before the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T12:24:00.000000Z"
          },
          "dataWindowEnd": {
            "description": "JSON string containing a timestamp indicating the end time of the AutoSupport bundle data collection window. Defaults to the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.000000Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "asup_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "creationState",
          "creationStateDetails",
          "upload",
          "triggerType",
          "dataWindowStart",
          "dataWindowEnd",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-asup\"",
            "type": "string",
            "enum": [
              "application/astra-asup"
            ],
            "example": "application/astra-asup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9950003f-a1c7-5ca7-8930-06eec25f60aa"
          },
          "creationState": {
            "description": "JSON string containing a value indicating the creation state of the AutoSupport bundle. For \"completed\" and \"partial\" states, the bundle can be downloaded by performing a GET of the resource URI with an Accept header containing \"*/*\" or \"application/gzip\".\nDefined values are:\n* \"running\" - AutoSupport bundle generation is running normally.\n* \"completed\" - AutoSupport bundle generation has completed.\n* \"partial\" - AutoSupport bundle generation has completed but some data was not included in the bundle.\n* \"failed\" - AutoSupport bundle generation is in a permanent failure state.  ",
            "type": "string",
            "enum": [
              "running",
              "completed",
              "partial",
              "failed"
            ],
            "example": "partial"
          },
          "creationStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"creationState\" transitioned into \"partial\" or \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "upload": {
            "description": "JSON string containing a value indicating whether to upload the AutoSupport bundle after successful creation.\nDefined values are:\n* \"true\" - Upload the AutoSupport bundle.\n* \"false\" - Do not upload the AutoSupport bundle.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "uploadState": {
            "description": "JSON string containing a value that indicates the state of the AutoSupport bundle upload if it was requested.\nDefined values are:\n* \"pending\" - AutoSupport bundle upload is scheduled for when AutoSupport bundle creation completes (\"creationState\" is \"running\").\n* \"blocked\" - AutoSupport bundle upload was not attempted because the bundle was not created (\"creationState\" is \"failed\") or upload was blocked because there is no license.\n* \"running\" - AutoSupport bundle upload is running normally (\"creationState\" is \"completed\" or \"partial\").\n* \"completed\" - AutoSupport bundle upload has completed.\n* \"failed\" - AutoSupport bundle upload is in a permanent failure state.",
            "type": "string",
            "enum": [
              "pending",
              "blocked",
              "running",
              "completed",
              "failed"
            ],
            "example": "failed"
          },
          "uploadStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"uploadState\" transitioned into \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "triggerType": {
            "description": "JSON string containing a value that indicates what triggered the creation of the ASUP resource.\nDefined values are:\n* \"manual\" - The ASUP resource and associated AutoSupport bundle were created manually.\n* \"scheduled\" - The ASUP resource and associated AutoSupport bundle were created according to a configured schedule.",
            "type": "string",
            "enum": [
              "manual",
              "scheduled"
            ],
            "example": "manual"
          },
          "dataWindowStart": {
            "description": "JSON string containing a timestamp indicating the start time of the AutoSupport bundle data collection window. Defaults to 24 hours before the \"dataWindowEnd\" key value. Must occur before the \"dataWindowEnd\" key value. Maximum is 7 days before the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T12:24:00.000000Z"
          },
          "dataWindowEnd": {
            "description": "JSON string containing a timestamp indicating the end time of the AutoSupport bundle data collection window. Defaults to the current time of the request.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.000000Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "bucket_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "credentialID",
          "state",
          "stateDetails",
          "provider",
          "bucketParameters",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-bucket\"",
            "type": "string",
            "enum": [
              "application/astra-bucket"
            ],
            "example": "application/astra-bucket"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9b296ce0-c545-5022-acfa-1980c5aaea97"
          },
          "name": {
            "description": "JSON string containing a user-assigned name for the bucket.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "backups"
          },
          "credentialID": {
            "description": "JSON string containing the identifier of the credentials used to access the bucket.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "8f039324-7795-40bf-a5ca-4442580f7ab0"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the bucket.\nDefined values are:\n* \"pending\" - The bucket is scheduled for discovery\n* \"available\" - The bucket is available for use\n* \"failed\" - The bucket is in a permanent failure state\n* \"removed\" - The bucket is not currently accessible\n* \"unknown\" - The bucket state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "available",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "available"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"removed\" or \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "provider": {
            "description": "JSON string indicating the bucket protocol that can be used to access the bucket.\nDefined values are:\n* \"ontap-s3\"\n* \"storagegrid-s3\"\n* \"generic-s3\"\n* \"gcp\"\n* \"azure\"\n* \"aws\"",
            "type": "string",
            "enum": [
              "ontap-s3",
              "storagegrid-s3",
              "generic-s3",
              "gcp",
              "azure",
              "aws"
            ],
            "example": "gcp"
          },
          "bucketParameters": {
            "description": "JSON object that provides bucket provider-specific information required to access the bucket. The specific values in this bucket vary per provider.",
            "type": "object",
            "properties": {
              "s3": {
                "description": "JSON object that provides Simple Storage Service (S3) protocol parameters. (Use this object for all S3 type providers).",
                "type": "object",
                "required": [
                  "serverURL",
                  "bucketName"
                ],
                "properties": {
                  "serverURL": {
                    "description": "JSON string containing a URL to the base path for the bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 1023",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1023
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the S3 bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "gcp": {
                "description": "JSON object that provides Google Cloud protocol parameters.",
                "type": "object",
                "required": [
                  "bucketName"
                ],
                "properties": {
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Google Cloud bucket name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "azure": {
                "description": "JSON object that provides Azure protocol parameters.",
                "type": "object",
                "required": [
                  "storageAccount",
                  "bucketName"
                ],
                "properties": {
                  "storageAccount": {
                    "description": "JSON string containing the Azure storage account name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Azure blob name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "bucket_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/bucket_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "bucket_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "credentialID",
          "provider",
          "bucketParameters"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-bucket\"",
            "type": "string",
            "enum": [
              "application/astra-bucket"
            ],
            "example": "application/astra-bucket"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "name": {
            "description": "JSON string containing a user-assigned name for the bucket.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "backups"
          },
          "credentialID": {
            "description": "JSON string containing the identifier of the credentials used to access the bucket.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "8f039324-7795-40bf-a5ca-4442580f7ab0"
          },
          "provider": {
            "description": "JSON string indicating the bucket protocol that can be used to access the bucket.\nDefined values are:\n* \"ontap-s3\"\n* \"storagegrid-s3\"\n* \"generic-s3\"\n* \"gcp\"\n* \"azure\"\n* \"aws\"",
            "type": "string",
            "enum": [
              "ontap-s3",
              "storagegrid-s3",
              "generic-s3",
              "gcp",
              "azure",
              "aws"
            ],
            "example": "gcp"
          },
          "bucketParameters": {
            "description": "JSON object that provides bucket provider-specific information required to access the bucket. The specific values in this bucket vary per provider.",
            "type": "object",
            "properties": {
              "s3": {
                "description": "JSON object that provides Simple Storage Service (S3) protocol parameters. (Use this object for all S3 type providers).",
                "type": "object",
                "required": [
                  "serverURL",
                  "bucketName"
                ],
                "properties": {
                  "serverURL": {
                    "description": "JSON string containing a URL to the base path for the bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 1023",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1023
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the S3 bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "gcp": {
                "description": "JSON object that provides Google Cloud protocol parameters.",
                "type": "object",
                "required": [
                  "bucketName"
                ],
                "properties": {
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Google Cloud bucket name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "azure": {
                "description": "JSON object that provides Azure protocol parameters.",
                "type": "object",
                "required": [
                  "storageAccount",
                  "bucketName"
                ],
                "properties": {
                  "storageAccount": {
                    "description": "JSON string containing the Azure storage account name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Azure blob name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "bucket_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "credentialID",
          "state",
          "stateDetails",
          "provider",
          "bucketParameters",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-bucket\"",
            "type": "string",
            "enum": [
              "application/astra-bucket"
            ],
            "example": "application/astra-bucket"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9b296ce0-c545-5022-acfa-1980c5aaea97"
          },
          "name": {
            "description": "JSON string containing a user-assigned name for the bucket.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "backups"
          },
          "credentialID": {
            "description": "JSON string containing the identifier of the credentials used to access the bucket.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "8f039324-7795-40bf-a5ca-4442580f7ab0"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the bucket.\nDefined values are:\n* \"pending\" - The bucket is scheduled for discovery\n* \"available\" - The bucket is available for use\n* \"failed\" - The bucket is in a permanent failure state\n* \"removed\" - The bucket is not currently accessible\n* \"unknown\" - The bucket state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "available",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "available"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"removed\" or \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "provider": {
            "description": "JSON string indicating the bucket protocol that can be used to access the bucket.\nDefined values are:\n* \"ontap-s3\"\n* \"storagegrid-s3\"\n* \"generic-s3\"\n* \"gcp\"\n* \"azure\"\n* \"aws\"",
            "type": "string",
            "enum": [
              "ontap-s3",
              "storagegrid-s3",
              "generic-s3",
              "gcp",
              "azure",
              "aws"
            ],
            "example": "gcp"
          },
          "bucketParameters": {
            "description": "JSON object that provides bucket provider-specific information required to access the bucket. The specific values in this bucket vary per provider.",
            "type": "object",
            "properties": {
              "s3": {
                "description": "JSON object that provides Simple Storage Service (S3) protocol parameters. (Use this object for all S3 type providers).",
                "type": "object",
                "required": [
                  "serverURL",
                  "bucketName"
                ],
                "properties": {
                  "serverURL": {
                    "description": "JSON string containing a URL to the base path for the bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 1023",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1023
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the S3 bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "gcp": {
                "description": "JSON object that provides Google Cloud protocol parameters.",
                "type": "object",
                "required": [
                  "bucketName"
                ],
                "properties": {
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Google Cloud bucket name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "azure": {
                "description": "JSON object that provides Azure protocol parameters.",
                "type": "object",
                "required": [
                  "storageAccount",
                  "bucketName"
                ],
                "properties": {
                  "storageAccount": {
                    "description": "JSON string containing the Azure storage account name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Azure blob name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "bucket_1.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-bucket\"",
            "type": "string",
            "enum": [
              "application/astra-bucket"
            ],
            "example": "application/astra-bucket"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9b296ce0-c545-5022-acfa-1980c5aaea97"
          },
          "name": {
            "description": "JSON string containing a user-assigned name for the bucket.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "backups"
          },
          "credentialID": {
            "description": "JSON string containing the identifier of the credentials used to access the bucket.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "8f039324-7795-40bf-a5ca-4442580f7ab0"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the bucket.\nDefined values are:\n* \"pending\" - The bucket is scheduled for discovery\n* \"available\" - The bucket is available for use\n* \"failed\" - The bucket is in a permanent failure state\n* \"removed\" - The bucket is not currently accessible\n* \"unknown\" - The bucket state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "available",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "available"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"removed\" or \"failed\".\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "provider": {
            "description": "JSON string indicating the bucket protocol that can be used to access the bucket.\nDefined values are:\n* \"ontap-s3\"\n* \"storagegrid-s3\"\n* \"generic-s3\"\n* \"gcp\"\n* \"azure\"\n* \"aws\"",
            "type": "string",
            "enum": [
              "ontap-s3",
              "storagegrid-s3",
              "generic-s3",
              "gcp",
              "azure",
              "aws"
            ],
            "example": "gcp"
          },
          "bucketParameters": {
            "description": "JSON object that provides bucket provider-specific information required to access the bucket. The specific values in this bucket vary per provider.",
            "type": "object",
            "properties": {
              "s3": {
                "description": "JSON object that provides Simple Storage Service (S3) protocol parameters. (Use this object for all S3 type providers).",
                "type": "object",
                "properties": {
                  "serverURL": {
                    "description": "JSON string containing a URL to the base path for the bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 1023",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1023
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the S3 bucket.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "gcp": {
                "description": "JSON object that provides Google Cloud protocol parameters.",
                "type": "object",
                "properties": {
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Google Cloud bucket name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              },
              "azure": {
                "description": "JSON object that provides Azure protocol parameters.",
                "type": "object",
                "properties": {
                  "storageAccount": {
                    "description": "JSON string containing the Azure storage account name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  },
                  "bucketName": {
                    "description": "JSON string containing the name of the backing Azure blob name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 63
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "certificate_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "certUse",
          "cert",
          "cn",
          "expiryTimestamp",
          "isSelfSigned",
          "trustState",
          "trustStateTransitions",
          "trustStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-certificate\"",
            "type": "string",
            "enum": [
              "application/astra-certificate"
            ],
            "example": "application/astra-certificate"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "eb12225e-aded-584e-9da1-03881ce4cf7a"
          },
          "certUse": {
            "description": "JSON string indicating the use of the certificate. If not specified, defaults to \"rootCA\".\nDefined values are:\n* \"rootCA\" - The certificate is a certificate authority (CA) certificate used to trust any certificate signed by that CA.\n* \"intermediateCA\" - The certificate is an intermediate CA certificate issued by a root CA.",
            "type": "string",
            "enum": [
              "rootCA",
              "intermediateCA"
            ],
            "example": "rootCA"
          },
          "cert": {
            "description": "JSON string containing a base64 encoded PKCS-11 formatted certificate (PEM).\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "MIIEUzCCAjugAwIBAgICEAMwDQYJKoZIhvcNAQELBXJtJWvj0fZzj1tVrA=="
          },
          "cn": {
            "description": "JSON string containing a common name extracted from the certificate.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
            "type": "string",
            "minLength": 1,
            "maxLength": 511,
            "example": "vcenter.example.com"
          },
          "expiryTimestamp": {
            "description": "JSON string containing a timestamp indicating when the certificate expires.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-08-06T12:24:52.256624Z"
          },
          "isSelfSigned": {
            "description": "JSON string indicating whether the certificate is self-signed.\nIf not provided on create, the value defaults to \"false\".\nOn update:\n* If the value is provided, that value will be used.\n* If the value is not provided and the \"cert\" field is included in the update, the value will be set to \"false\".\n* If the value is not provided and the \"cert\" field is not included in the update, the existing value will be retained.\nDefined values are:\n* \"true\" - The certificate is self-signed.\n* \"false\" - The certificate is not self-signed.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "trustState": {
            "description": "JSON string containing one of a set of enumerated values indicating whether the certificate is trusted.\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.\n* \"expired\" - The certificate is expired, so is neither trusted or not trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted",
              "expired"
            ],
            "example": "trusted"
          },
          "trustStateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "trustStateDesired": {
            "description": "JSON string containing a value indicating whether the certificate is trusted.\nIf not specified on create, the default value is \"trusted\".\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted"
            ],
            "example": "trusted"
          },
          "trustStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the trust state of the certificate.\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "certificate_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/certificate_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "certificate_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "cert"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-certificate\"",
            "type": "string",
            "enum": [
              "application/astra-certificate"
            ],
            "example": "application/astra-certificate"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "certUse": {
            "description": "JSON string indicating the use of the certificate. If not specified, defaults to \"rootCA\".\nDefined values are:\n* \"rootCA\" - The certificate is a certificate authority (CA) certificate used to trust any certificate signed by that CA.\n* \"intermediateCA\" - The certificate is an intermediate CA certificate issued by a root CA.",
            "type": "string",
            "enum": [
              "rootCA",
              "intermediateCA"
            ],
            "example": "rootCA"
          },
          "cert": {
            "description": "JSON string containing a base64 encoded PKCS-11 formatted certificate (PEM).\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "MIIEUzCCAjugAwIBAgICEAMwDQYJKoZIhvcNAQELBXJtJWvj0fZzj1tVrA=="
          },
          "isSelfSigned": {
            "description": "JSON string indicating whether the certificate is self-signed.\nIf not provided on create, the value defaults to \"false\".\nOn update:\n* If the value is provided, that value will be used.\n* If the value is not provided and the \"cert\" field is included in the update, the value will be set to \"false\".\n* If the value is not provided and the \"cert\" field is not included in the update, the existing value will be retained.\nDefined values are:\n* \"true\" - The certificate is self-signed.\n* \"false\" - The certificate is not self-signed.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "trustStateDesired": {
            "description": "JSON string containing a value indicating whether the certificate is trusted.\nIf not specified on create, the default value is \"trusted\".\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted"
            ],
            "example": "trusted"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "certificate_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "certUse",
          "cert",
          "cn",
          "expiryTimestamp",
          "isSelfSigned",
          "trustState",
          "trustStateTransitions",
          "trustStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-certificate\"",
            "type": "string",
            "enum": [
              "application/astra-certificate"
            ],
            "example": "application/astra-certificate"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "eb12225e-aded-584e-9da1-03881ce4cf7a"
          },
          "certUse": {
            "description": "JSON string indicating the use of the certificate. If not specified, defaults to \"rootCA\".\nDefined values are:\n* \"rootCA\" - The certificate is a certificate authority (CA) certificate used to trust any certificate signed by that CA.\n* \"intermediateCA\" - The certificate is an intermediate CA certificate issued by a root CA.",
            "type": "string",
            "enum": [
              "rootCA",
              "intermediateCA"
            ],
            "example": "rootCA"
          },
          "cert": {
            "description": "JSON string containing a base64 encoded PKCS-11 formatted certificate (PEM).\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "MIIEUzCCAjugAwIBAgICEAMwDQYJKoZIhvcNAQELBXJtJWvj0fZzj1tVrA=="
          },
          "cn": {
            "description": "JSON string containing a common name extracted from the certificate.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
            "type": "string",
            "minLength": 1,
            "maxLength": 511,
            "example": "vcenter.example.com"
          },
          "expiryTimestamp": {
            "description": "JSON string containing a timestamp indicating when the certificate expires.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-08-06T12:24:52.256624Z"
          },
          "isSelfSigned": {
            "description": "JSON string indicating whether the certificate is self-signed.\nIf not provided on create, the value defaults to \"false\".\nOn update:\n* If the value is provided, that value will be used.\n* If the value is not provided and the \"cert\" field is included in the update, the value will be set to \"false\".\n* If the value is not provided and the \"cert\" field is not included in the update, the existing value will be retained.\nDefined values are:\n* \"true\" - The certificate is self-signed.\n* \"false\" - The certificate is not self-signed.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "trustState": {
            "description": "JSON string containing one of a set of enumerated values indicating whether the certificate is trusted.\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.\n* \"expired\" - The certificate is expired, so is neither trusted or not trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted",
              "expired"
            ],
            "example": "trusted"
          },
          "trustStateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "trustStateDesired": {
            "description": "JSON string containing a value indicating whether the certificate is trusted.\nIf not specified on create, the default value is \"trusted\".\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted"
            ],
            "example": "trusted"
          },
          "trustStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the trust state of the certificate.\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "certificate_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-certificate\"",
            "type": "string",
            "enum": [
              "application/astra-certificate"
            ],
            "example": "application/astra-certificate"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "eb12225e-aded-584e-9da1-03881ce4cf7a"
          },
          "certUse": {
            "description": "JSON string indicating the use of the certificate. If not specified, defaults to \"rootCA\".\nDefined values are:\n* \"rootCA\" - The certificate is a certificate authority (CA) certificate used to trust any certificate signed by that CA.\n* \"intermediateCA\" - The certificate is an intermediate CA certificate issued by a root CA.",
            "type": "string",
            "enum": [
              "rootCA",
              "intermediateCA"
            ],
            "example": "rootCA"
          },
          "cert": {
            "description": "JSON string containing a base64 encoded PKCS-11 formatted certificate (PEM).\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "MIIEUzCCAjugAwIBAgICEAMwDQYJKoZIhvcNAQELBXJtJWvj0fZzj1tVrA=="
          },
          "cn": {
            "description": "JSON string containing a common name extracted from the certificate.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
            "type": "string",
            "minLength": 1,
            "maxLength": 511,
            "example": "vcenter.example.com"
          },
          "expiryTimestamp": {
            "description": "JSON string containing a timestamp indicating when the certificate expires.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-08-06T12:24:52.256624Z"
          },
          "isSelfSigned": {
            "description": "JSON string indicating whether the certificate is self-signed.\nIf not provided on create, the value defaults to \"false\".\nOn update:\n* If the value is provided, that value will be used.\n* If the value is not provided and the \"cert\" field is included in the update, the value will be set to \"false\".\n* If the value is not provided and the \"cert\" field is not included in the update, the existing value will be retained.\nDefined values are:\n* \"true\" - The certificate is self-signed.\n* \"false\" - The certificate is not self-signed.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "trustState": {
            "description": "JSON string containing one of a set of enumerated values indicating whether the certificate is trusted.\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.\n* \"expired\" - The certificate is expired, so is neither trusted or not trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted",
              "expired"
            ],
            "example": "trusted"
          },
          "trustStateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "trustStateDesired": {
            "description": "JSON string containing a value indicating whether the certificate is trusted.\nIf not specified on create, the default value is \"trusted\".\nDefined values are:\n* \"untrusted\" - The certificate is not trusted.\n* \"trusted\" - The certificate is marked as trusted.",
            "type": "string",
            "enum": [
              "untrusted",
              "trusted"
            ],
            "example": "trusted"
          },
          "trustStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the trust state of the certificate.\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cloud_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "cloudType",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cloud\"",
            "type": "string",
            "enum": [
              "application/astra-cloud"
            ],
            "example": "application/astra-cloud"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1c9512c3-ec62-5ed8-8013-02fc090b9d03"
          },
          "name": {
            "description": "JSON string containing the name of the cloud.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "My Google Cloud"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cloud.\nDefined values are:\n* \"pending\" - The cloud is scheduled for discovery\n* \"discovering\" - The cloud is in the process of being discovered\n* \"provisioning\" - The cloud is in the process of being provisioned\n* \"running\" - The cloud is running normally\n* \"failed\" - The cloud is in a permanent failure state\n* \"removed\" - The cloud is not currently accessible\n* \"unknown\" - The cloud state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a cloud is unable to transition to \"running\" or why it has transitioned to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "cloudType": {
            "description": "JSON string containing a value indicating the type of cloud.\nDefined values are:\n* \"gcp\" - The cloud is provided by Google\n* \"azure\" - The cloud is provided by Microsoft\n* \"aws\" - The cloud is provided by Amazon\n* \"private\" - The cloud is customer managed",
            "type": "string",
            "enum": [
              "gcp",
              "azure",
              "aws",
              "private"
            ],
            "example": "gcp"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the service account for the cloud.\nThis is required for cloudType \"gcp\", \"azure\" and \"aws\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "defaultBucketID": {
            "description": "JSON string containing the ID of a bucket that is to be used by default when creating backups for applications within the cloud. This is required when cloning applications across clusters and is used as a default if a bucket is not specified when creating backups and schedules.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a549b757-2be1-494f-aafa-4ee399ca3f00"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cloud_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cloud_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "cloud_1.1_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "cloudType"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cloud\"",
            "type": "string",
            "enum": [
              "application/astra-cloud"
            ],
            "example": "application/astra-cloud"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "name": {
            "description": "JSON string containing the name of the cloud.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "My Google Cloud"
          },
          "cloudType": {
            "description": "JSON string containing a value indicating the type of cloud.\nDefined values are:\n* \"gcp\" - The cloud is provided by Google\n* \"azure\" - The cloud is provided by Microsoft\n* \"aws\" - The cloud is provided by Amazon\n* \"private\" - The cloud is customer managed",
            "type": "string",
            "enum": [
              "gcp",
              "azure",
              "aws",
              "private"
            ],
            "example": "gcp"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the service account for the cloud.\nThis is required for cloudType \"gcp\", \"azure\" and \"aws\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "defaultBucketID": {
            "description": "JSON string containing the ID of a bucket that is to be used by default when creating backups for applications within the cloud. This is required when cloning applications across clusters and is used as a default if a bucket is not specified when creating backups and schedules.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a549b757-2be1-494f-aafa-4ee399ca3f00"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cloud_1.1_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "cloudType",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cloud\"",
            "type": "string",
            "enum": [
              "application/astra-cloud"
            ],
            "example": "application/astra-cloud"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1c9512c3-ec62-5ed8-8013-02fc090b9d03"
          },
          "name": {
            "description": "JSON string containing the name of the cloud.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "My Google Cloud"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cloud.\nDefined values are:\n* \"pending\" - The cloud is scheduled for discovery\n* \"discovering\" - The cloud is in the process of being discovered\n* \"provisioning\" - The cloud is in the process of being provisioned\n* \"running\" - The cloud is running normally\n* \"failed\" - The cloud is in a permanent failure state\n* \"removed\" - The cloud is not currently accessible\n* \"unknown\" - The cloud state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a cloud is unable to transition to \"running\" or why it has transitioned to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "cloudType": {
            "description": "JSON string containing a value indicating the type of cloud.\nDefined values are:\n* \"gcp\" - The cloud is provided by Google\n* \"azure\" - The cloud is provided by Microsoft\n* \"aws\" - The cloud is provided by Amazon\n* \"private\" - The cloud is customer managed",
            "type": "string",
            "enum": [
              "gcp",
              "azure",
              "aws",
              "private"
            ],
            "example": "gcp"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the service account for the cloud.\nThis is required for cloudType \"gcp\", \"azure\" and \"aws\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "defaultBucketID": {
            "description": "JSON string containing the ID of a bucket that is to be used by default when creating backups for applications within the cloud. This is required when cloning applications across clusters and is used as a default if a bucket is not specified when creating backups and schedules.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a549b757-2be1-494f-aafa-4ee399ca3f00"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cloud_1.1_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cloud\"",
            "type": "string",
            "enum": [
              "application/astra-cloud"
            ],
            "example": "application/astra-cloud"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "1c9512c3-ec62-5ed8-8013-02fc090b9d03"
          },
          "name": {
            "description": "JSON string containing the name of the cloud.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "My Google Cloud"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cloud.\nDefined values are:\n* \"pending\" - The cloud is scheduled for discovery\n* \"discovering\" - The cloud is in the process of being discovered\n* \"provisioning\" - The cloud is in the process of being provisioned\n* \"running\" - The cloud is running normally\n* \"failed\" - The cloud is in a permanent failure state\n* \"removed\" - The cloud is not currently accessible\n* \"unknown\" - The cloud state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a cloud is unable to transition to \"running\" or why it has transitioned to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "cloudType": {
            "description": "JSON string containing a value indicating the type of cloud.\nDefined values are:\n* \"gcp\" - The cloud is provided by Google\n* \"azure\" - The cloud is provided by Microsoft\n* \"aws\" - The cloud is provided by Amazon\n* \"private\" - The cloud is customer managed",
            "type": "string",
            "enum": [
              "gcp",
              "azure",
              "aws",
              "private"
            ],
            "example": "gcp"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the service account for the cloud.\nThis is required for cloudType \"gcp\", \"azure\" and \"aws\".\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "defaultBucketID": {
            "description": "JSON string containing the ID of a bucket that is to be used by default when creating backups for applications within the cloud. This is required when cloning applications across clusters and is used as a default if a bucket is not specified when creating backups and schedules.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a549b757-2be1-494f-aafa-4ee399ca3f00"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "clusterNode_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "role",
          "labels",
          "creationTime",
          "externalIP",
          "internalIP",
          "zone",
          "region",
          "instanceType",
          "kernelVersion",
          "osImage",
          "numCpus",
          "memory",
          "state",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-clusterNode\"",
            "type": "string",
            "enum": [
              "application/astra-clusterNode"
            ],
            "example": "application/astra-clusterNode"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5df0e09f-2c30-5b8a-b6b6-4fb4063525e4"
          },
          "name": {
            "description": "JSON string containing a value that indicates the Kubernetes name for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "test-0"
          },
          "role": {
            "description": "JSON string containing a value that indicates the Kubernetes role for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "node-role.kubernetes.io/worker"
          },
          "labels": {
            "description": "JSON array of JSON objects, each containing Kubernetes labels associated with the node.\nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "name",
                "value"
              ],
              "properties": {
                "name": {
                  "description": "JSON string containing the label name\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^([\\S.]{1,253}\\/)?([a-z0-9A-Z_.-]){1,63}$\"",
                  "type": "string",
                  "pattern": "^([\\S.]{1,253}\\/)?([a-z0-9A-Z_.-]){1,63}$",
                  "minLength": 1,
                  "maxLength": 63
                },
                "value": {
                  "description": "JSON string containing the label value\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^([a-z0-9A-Z_.-]){1,63}$\"",
                  "type": "string",
                  "pattern": "^([a-z0-9A-Z_.-]){1,63}$",
                  "minLength": 1,
                  "maxLength": 63
                }
              },
              "additionalProperties": false
            }
          },
          "creationTime": {
            "description": "JSON string containing an ISO 8601 timestamp that indicates when the node was created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-09-06T04:35:23.593845Z"
          },
          "externalIP": {
            "description": "JSON string containing a value that indicates the internal IP address for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "192.168.12.44"
          },
          "internalIP": {
            "description": "JSON string containing a value that indicates the external IP address for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "10.0.1.1"
          },
          "zone": {
            "description": "JSON string containing a value that indicates the Kubernetes zone for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "us-west1-c"
          },
          "region": {
            "description": "JSON string containing a value that indicates the Kubernetes region for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "us-east1"
          },
          "instanceType": {
            "description": "JSON string containing a value that indicates the Kubernetes instance type for the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "e2-medium"
          },
          "kernelVersion": {
            "description": "JSON string containing a value that indicates the kernel version used by the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "4.18.0-147.0.3.el8_1.x86_64"
          },
          "osImage": {
            "description": "JSON string containing a value that indicates the operating system image used by the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "Red Hat Enterprise Linux CoreOS 42.81.20191203.0"
          },
          "numCpus": {
            "description": "JSON string containing a value that indicates the number of CPUs assigned to the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "2"
          },
          "memory": {
            "description": "JSON string containing a value that indicates the amount of memory assigned to the node.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 254",
            "type": "string",
            "minLength": 1,
            "maxLength": 254,
            "example": "67108864Ki"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the node.\nDefined values are:\n* \"running\" - The node is running normally\n* \"provisioning\" - The node is in the process of being provisioned\n* \"discovering\" - Aspects of the node are in the process of being discovered\n* \"pending\" - The node is scheduled for discovery\n* \"failed\" - The node is in a failure state\n* \"unknown\" - The state of the node cannot be determined",
            "type": "string",
            "enum": [
              "running",
              "provisioning",
              "discovering",
              "pending",
              "failed",
              "unknown"
            ],
            "example": "running"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "clusterNode_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/clusterNode_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "cluster_1.4_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "managedState",
          "protectionState",
          "protectionStateDetails",
          "managedStateUnready",
          "inUse",
          "clusterType",
          "cloudID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cluster\"",
            "type": "string",
            "enum": [
              "application/astra-cluster"
            ],
            "example": "application/astra-cluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"\n* \"1.4\"",
            "type": "string",
            "enum": [
              "1.4",
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.4"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64"
          },
          "name": {
            "description": "JSON string containing a name for the cluster. If not specified, the Kubernetes name of the cluster will be used.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in \"running\" state, is not under management, and is not eligible for management. The reasons for this ineligibility are provided in the unready key value\n* \"unmanaged\" - The cluster is in \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in \"running\", \"failed\", or \"removed\" state, and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "unmanaged"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The clusters default storage class supports snapshots\n* \"partial\" - The cluster has only storageClasses that do not support snapshots\n* \"atRisk\" - The default storage class of the cluster does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed, or that the cluster is managed but non-fatal errors were encountered while managing the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why the state transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating if the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed or is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "false"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing a value indicating the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "31c95aba-99d9-4987-b1bb-000dfce5952c"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud that the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the location ID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "example": "5f77326f-c482-42ef-8376-ecb9ec17f1ae"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) API service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cluster_1.4_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/cluster_1.4_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "cluster_1.4_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "credentialID"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cluster\"",
            "type": "string",
            "enum": [
              "application/astra-cluster"
            ],
            "example": "application/astra-cluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"\n* \"1.4\"",
            "type": "string",
            "enum": [
              "1.4",
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.4"
          },
          "name": {
            "description": "JSON string containing a name for the cluster. If not specified, the Kubernetes name of the cluster will be used.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "privateRouteID": {
            "description": "JSON string containing the location ID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "example": "5f77326f-c482-42ef-8376-ecb9ec17f1ae"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cluster_1.4_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "managedState",
          "protectionState",
          "protectionStateDetails",
          "managedStateUnready",
          "inUse",
          "clusterType",
          "cloudID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cluster\"",
            "type": "string",
            "enum": [
              "application/astra-cluster"
            ],
            "example": "application/astra-cluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"\n* \"1.4\"",
            "type": "string",
            "enum": [
              "1.4",
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.4"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64"
          },
          "name": {
            "description": "JSON string containing a name for the cluster. If not specified, the Kubernetes name of the cluster will be used.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in \"running\" state, is not under management, and is not eligible for management. The reasons for this ineligibility are provided in the unready key value\n* \"unmanaged\" - The cluster is in \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in \"running\", \"failed\", or \"removed\" state, and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "unmanaged"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The clusters default storage class supports snapshots\n* \"partial\" - The cluster has only storageClasses that do not support snapshots\n* \"atRisk\" - The default storage class of the cluster does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed, or that the cluster is managed but non-fatal errors were encountered while managing the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why the state transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating if the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed or is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "false"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing a value indicating the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "31c95aba-99d9-4987-b1bb-000dfce5952c"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud that the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the location ID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "example": "5f77326f-c482-42ef-8376-ecb9ec17f1ae"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) API service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "cluster_1.4_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-cluster\"",
            "type": "string",
            "enum": [
              "application/astra-cluster"
            ],
            "example": "application/astra-cluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"\n* \"1.4\"",
            "type": "string",
            "enum": [
              "1.4",
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.4"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "93e5f9a6-c0e5-5b6f-a802-6df90ba45e64"
          },
          "name": {
            "description": "JSON string containing a name for the cluster. If not specified, the Kubernetes name of the cluster will be used.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in \"running\" state, is not under management, and is not eligible for management. The reasons for this ineligibility are provided in the unready key value\n* \"unmanaged\" - The cluster is in \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in \"running\", \"failed\", or \"removed\" state, and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "unmanaged"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The clusters default storage class supports snapshots\n* \"partial\" - The cluster has only storageClasses that do not support snapshots\n* \"atRisk\" - The default storage class of the cluster does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects which lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the ability of the cluster to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed, or that the cluster is managed but non-fatal errors were encountered while managing the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why the state transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating if the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed or is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "false"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing a value indicating the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "31c95aba-99d9-4987-b1bb-000dfce5952c"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6fa2f917-f730-41b8-9c15-17f531843b31"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud that the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the location ID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "example": "5f77326f-c482-42ef-8376-ecb9ec17f1ae"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) API service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "credential_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "valid",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-credential\"",
            "type": "string",
            "enum": [
              "application/astra-credential"
            ],
            "example": "application/astra-credential"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "58e26f6a-a631-5122-8e0e-7afe306675c0"
          },
          "name": {
            "description": "JSON string containing a user-specified name.\nWhen a credential is created for a user, the name will be set to the UUID of that user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "example": "Test Certs"
          },
          "keyType": {
            "description": "JSON string containing an optional user-specified data validation type descriptor for the contents of the keyStore.\nExtended update constraints:\n* If a keyType does not exist in the resource and is not specified in an update, the keyType must not continue to exist in the updated resource.\n* If a keyType does not exist in the resource and is specified in an update, the keyType must be added to the resource and validation must be performed. If the validation fails, the update will fail.\n* If a keyType exists in the resource and is not specified in an update, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified matches the existing keyType, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified is different from the existing keyType, the update will fail.\nDefined values are:\n* \"generic\" - The credential is a generic collection of data. This is equivalent to not including a keyType.  \n* Extended validation is performed as follows:    \n* One or more strings must exist in the keyStore.    \n* Every string in the keyStore must have a value encoded in base64.\n* \"passwordHash\" - The credential is a password hash.  \n* Extended validation is performed as follows:    \n* The name of the credential must be unique.    \n* The name of the credential must be equal to a valid user resource ID.    \n* The name of the credential must not be altered.    \n* The corresponding user resource must have an \"authProvider\" of \"local\".    \n* A \"cleartext\" string must exist within the keyStore with a value containing a base64-encoded cleartext password:      \n* The password cleartext must conform to the account's password policy.      \n* The password is stored as a hash.    \n* A \"change\" string must exist within the keyStore with a value containing a base64-encoded string \"true\" or \"false\".    \n* A credential of type passwordHash can only be deleted if the user ID indicated by the name does not exist.\n* \"apikey\" - The credential is an API key.  \n* Extended validation is performed as follows:    \n* An \"apikey\" string must exist within the keyStore, with a value containing a base64-encoded arbitrary string.\n* \"kubeconfig\" - The credential is a kubeconfig.  \n* Extended validation is performed as follows:    \n* A \"base64\" string must exist within the keyStore, with a value containing a base64-encoded JSON kubeconfig file.    \n* The kubeconfig file must only describe a single cluster.    \n* No other fields can exist within the keyStore.\n* \"certificate\" - The credential is a PEM-encoded certificate  \n* Extended validation is performed as follows:    \n* A \"certificate\" string must exist within the keyStore, with a value containing a base64-encoded PEM certificate.\n* \"privkey\" - The credential is a PEM-encoded private key.  \n* Extended validation is performed as follows:    \n* A \"privkey\" string must exist within the keyStore, with a value containing a base64-encoded PEM private key.\n* \"s3\" - Indicates the credentials are for Simple Storage Service (S3) access.  \n* Extended validation is performed as follows:    \n* An \"accessKey\" string must exist within the keyStore with a value containing a base64-encoded S3 access key.    \n* An \"accessSecret\" string must exist within the keyStore with a value containing a base64-encoded S3 access secret.",
            "type": "string",
            "enum": [
              "generic",
              "passwordHash",
              "apikey",
              "kubeconfig",
              "certificate",
              "privkey",
              "s3"
            ]
          },
          "valid": {
            "description": "JSON string describing whether the credential is valid for use. Default value, if omitted, is \"true\".\nDefined values are:\n* \"true\" - The credential is eligible for use.\n* \"false\" - The credential must not be used.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is no longer valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "credential_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/credential_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "credential_1.1_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "keyStore"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-credential\"",
            "type": "string",
            "enum": [
              "application/astra-credential"
            ],
            "example": "application/astra-credential"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "name": {
            "description": "JSON string containing a user-specified name.\nWhen a credential is created for a user, the name will be set to the UUID of that user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "example": "Test Certs"
          },
          "keyType": {
            "description": "JSON string containing an optional user-specified data validation type descriptor for the contents of the keyStore.\nExtended update constraints:\n* If a keyType does not exist in the resource and is not specified in an update, the keyType must not continue to exist in the updated resource.\n* If a keyType does not exist in the resource and is specified in an update, the keyType must be added to the resource and validation must be performed. If the validation fails, the update will fail.\n* If a keyType exists in the resource and is not specified in an update, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified matches the existing keyType, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified is different from the existing keyType, the update will fail.\nDefined values are:\n* \"generic\" - The credential is a generic collection of data. This is equivalent to not including a keyType.  \n* Extended validation is performed as follows:    \n* One or more strings must exist in the keyStore.    \n* Every string in the keyStore must have a value encoded in base64.\n* \"passwordHash\" - The credential is a password hash.  \n* Extended validation is performed as follows:    \n* The name of the credential must be unique.    \n* The name of the credential must be equal to a valid user resource ID.    \n* The name of the credential must not be altered.    \n* The corresponding user resource must have an \"authProvider\" of \"local\".    \n* A \"cleartext\" string must exist within the keyStore with a value containing a base64-encoded cleartext password:      \n* The password cleartext must conform to the account's password policy.      \n* The password is stored as a hash.    \n* A \"change\" string must exist within the keyStore with a value containing a base64-encoded string \"true\" or \"false\".    \n* A credential of type passwordHash can only be deleted if the user ID indicated by the name does not exist.\n* \"apikey\" - The credential is an API key.  \n* Extended validation is performed as follows:    \n* An \"apikey\" string must exist within the keyStore, with a value containing a base64-encoded arbitrary string.\n* \"kubeconfig\" - The credential is a kubeconfig.  \n* Extended validation is performed as follows:    \n* A \"base64\" string must exist within the keyStore, with a value containing a base64-encoded JSON kubeconfig file.    \n* The kubeconfig file must only describe a single cluster.    \n* No other fields can exist within the keyStore.\n* \"certificate\" - The credential is a PEM-encoded certificate  \n* Extended validation is performed as follows:    \n* A \"certificate\" string must exist within the keyStore, with a value containing a base64-encoded PEM certificate.\n* \"privkey\" - The credential is a PEM-encoded private key.  \n* Extended validation is performed as follows:    \n* A \"privkey\" string must exist within the keyStore, with a value containing a base64-encoded PEM private key.\n* \"s3\" - Indicates the credentials are for Simple Storage Service (S3) access.  \n* Extended validation is performed as follows:    \n* An \"accessKey\" string must exist within the keyStore with a value containing a base64-encoded S3 access key.    \n* An \"accessSecret\" string must exist within the keyStore with a value containing a base64-encoded S3 access secret.",
            "type": "string",
            "enum": [
              "generic",
              "passwordHash",
              "apikey",
              "kubeconfig",
              "certificate",
              "privkey",
              "s3"
            ]
          },
          "keyStore": {
            "description": "JSON object containing JSON strings. Each string in the keyStore represents part of the credential. The name of each string represents the credential part, and the corresponding key-value stores the value of that part of the credential in base64 format.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema\nNo limits are placed on the lengths of the strings.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "$ref": "#/components/schemas/type_base64_data"
            }
          },
          "valid": {
            "description": "JSON string describing whether the credential is valid for use. Default value, if omitted, is \"true\".\nDefined values are:\n* \"true\" - The credential is eligible for use.\n* \"false\" - The credential must not be used.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is no longer valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "credential_1.1_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "valid",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-credential\"",
            "type": "string",
            "enum": [
              "application/astra-credential"
            ],
            "example": "application/astra-credential"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "58e26f6a-a631-5122-8e0e-7afe306675c0"
          },
          "name": {
            "description": "JSON string containing a user-specified name.\nWhen a credential is created for a user, the name will be set to the UUID of that user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "example": "Test Certs"
          },
          "keyType": {
            "description": "JSON string containing an optional user-specified data validation type descriptor for the contents of the keyStore.\nExtended update constraints:\n* If a keyType does not exist in the resource and is not specified in an update, the keyType must not continue to exist in the updated resource.\n* If a keyType does not exist in the resource and is specified in an update, the keyType must be added to the resource and validation must be performed. If the validation fails, the update will fail.\n* If a keyType exists in the resource and is not specified in an update, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified matches the existing keyType, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified is different from the existing keyType, the update will fail.\nDefined values are:\n* \"generic\" - The credential is a generic collection of data. This is equivalent to not including a keyType.  \n* Extended validation is performed as follows:    \n* One or more strings must exist in the keyStore.    \n* Every string in the keyStore must have a value encoded in base64.\n* \"passwordHash\" - The credential is a password hash.  \n* Extended validation is performed as follows:    \n* The name of the credential must be unique.    \n* The name of the credential must be equal to a valid user resource ID.    \n* The name of the credential must not be altered.    \n* The corresponding user resource must have an \"authProvider\" of \"local\".    \n* A \"cleartext\" string must exist within the keyStore with a value containing a base64-encoded cleartext password:      \n* The password cleartext must conform to the account's password policy.      \n* The password is stored as a hash.    \n* A \"change\" string must exist within the keyStore with a value containing a base64-encoded string \"true\" or \"false\".    \n* A credential of type passwordHash can only be deleted if the user ID indicated by the name does not exist.\n* \"apikey\" - The credential is an API key.  \n* Extended validation is performed as follows:    \n* An \"apikey\" string must exist within the keyStore, with a value containing a base64-encoded arbitrary string.\n* \"kubeconfig\" - The credential is a kubeconfig.  \n* Extended validation is performed as follows:    \n* A \"base64\" string must exist within the keyStore, with a value containing a base64-encoded JSON kubeconfig file.    \n* The kubeconfig file must only describe a single cluster.    \n* No other fields can exist within the keyStore.\n* \"certificate\" - The credential is a PEM-encoded certificate  \n* Extended validation is performed as follows:    \n* A \"certificate\" string must exist within the keyStore, with a value containing a base64-encoded PEM certificate.\n* \"privkey\" - The credential is a PEM-encoded private key.  \n* Extended validation is performed as follows:    \n* A \"privkey\" string must exist within the keyStore, with a value containing a base64-encoded PEM private key.\n* \"s3\" - Indicates the credentials are for Simple Storage Service (S3) access.  \n* Extended validation is performed as follows:    \n* An \"accessKey\" string must exist within the keyStore with a value containing a base64-encoded S3 access key.    \n* An \"accessSecret\" string must exist within the keyStore with a value containing a base64-encoded S3 access secret.",
            "type": "string",
            "enum": [
              "generic",
              "passwordHash",
              "apikey",
              "kubeconfig",
              "certificate",
              "privkey",
              "s3"
            ]
          },
          "valid": {
            "description": "JSON string describing whether the credential is valid for use. Default value, if omitted, is \"true\".\nDefined values are:\n* \"true\" - The credential is eligible for use.\n* \"false\" - The credential must not be used.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is no longer valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "credential_1.1_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "keyStore"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-credential\"",
            "type": "string",
            "enum": [
              "application/astra-credential"
            ],
            "example": "application/astra-credential"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "58e26f6a-a631-5122-8e0e-7afe306675c0"
          },
          "name": {
            "description": "JSON string containing a user-specified name.\nWhen a credential is created for a user, the name will be set to the UUID of that user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "example": "Test Certs"
          },
          "keyType": {
            "description": "JSON string containing an optional user-specified data validation type descriptor for the contents of the keyStore.\nExtended update constraints:\n* If a keyType does not exist in the resource and is not specified in an update, the keyType must not continue to exist in the updated resource.\n* If a keyType does not exist in the resource and is specified in an update, the keyType must be added to the resource and validation must be performed. If the validation fails, the update will fail.\n* If a keyType exists in the resource and is not specified in an update, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified matches the existing keyType, the keyType must be preserved.\n* If a keyType exists in the resource and is specified in an update, and the keyType specified is different from the existing keyType, the update will fail.\nDefined values are:\n* \"generic\" - The credential is a generic collection of data. This is equivalent to not including a keyType.  \n* Extended validation is performed as follows:    \n* One or more strings must exist in the keyStore.    \n* Every string in the keyStore must have a value encoded in base64.\n* \"passwordHash\" - The credential is a password hash.  \n* Extended validation is performed as follows:    \n* The name of the credential must be unique.    \n* The name of the credential must be equal to a valid user resource ID.    \n* The name of the credential must not be altered.    \n* The corresponding user resource must have an \"authProvider\" of \"local\".    \n* A \"cleartext\" string must exist within the keyStore with a value containing a base64-encoded cleartext password:      \n* The password cleartext must conform to the account's password policy.      \n* The password is stored as a hash.    \n* A \"change\" string must exist within the keyStore with a value containing a base64-encoded string \"true\" or \"false\".    \n* A credential of type passwordHash can only be deleted if the user ID indicated by the name does not exist.\n* \"apikey\" - The credential is an API key.  \n* Extended validation is performed as follows:    \n* An \"apikey\" string must exist within the keyStore, with a value containing a base64-encoded arbitrary string.\n* \"kubeconfig\" - The credential is a kubeconfig.  \n* Extended validation is performed as follows:    \n* A \"base64\" string must exist within the keyStore, with a value containing a base64-encoded JSON kubeconfig file.    \n* The kubeconfig file must only describe a single cluster.    \n* No other fields can exist within the keyStore.\n* \"certificate\" - The credential is a PEM-encoded certificate  \n* Extended validation is performed as follows:    \n* A \"certificate\" string must exist within the keyStore, with a value containing a base64-encoded PEM certificate.\n* \"privkey\" - The credential is a PEM-encoded private key.  \n* Extended validation is performed as follows:    \n* A \"privkey\" string must exist within the keyStore, with a value containing a base64-encoded PEM private key.\n* \"s3\" - Indicates the credentials are for Simple Storage Service (S3) access.  \n* Extended validation is performed as follows:    \n* An \"accessKey\" string must exist within the keyStore with a value containing a base64-encoded S3 access key.    \n* An \"accessSecret\" string must exist within the keyStore with a value containing a base64-encoded S3 access secret.",
            "type": "string",
            "enum": [
              "generic",
              "passwordHash",
              "apikey",
              "kubeconfig",
              "certificate",
              "privkey",
              "s3"
            ]
          },
          "keyStore": {
            "description": "JSON object containing JSON strings. Each string in the keyStore represents part of the credential. The name of each string represents the credential part, and the corresponding key-value stores the value of that part of the credential in base64 format.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema\nNo limits are placed on the lengths of the strings.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "$ref": "#/components/schemas/type_base64_data"
            }
          },
          "valid": {
            "description": "JSON string describing whether the credential is valid for use. Default value, if omitted, is \"true\".\nDefined values are:\n* \"true\" - The credential is eligible for use.\n* \"false\" - The credential must not be used.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the credential is no longer valid. These are used for credential rotation.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "entitlement_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "entitlementType",
          "entitlementValue",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-entitlement\"",
            "type": "string",
            "enum": [
              "application/astra-entitlement"
            ],
            "example": "application/astra-entitlement"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "8bdafc19-bde6-5f45-9808-4893c845c9f5"
          },
          "allocation": {
            "description": "JSON string containing the ID of the object that the entitlement is allocated to. Only present when the entitlement is allocated.\nString contents not validated by the schema.",
            "type": "string"
          },
          "product": {
            "description": "JSON string containing the product string extracted from the license or subscription.\nString contents not validated by the schema.",
            "type": "string",
            "example": "Astra SDS"
          },
          "productVersion": {
            "description": "JSON string containing the version string extracted from the license or subscription.\nString contents not validated by the schema.",
            "type": "string",
            "example": "1.0"
          },
          "entitlementType": {
            "description": "JSON string containing the type of the entitlement. This is extracted from the license or subscription.\nString contents not validated by the schema.",
            "type": "string",
            "example": "capacity"
          },
          "entitlementValue": {
            "description": "JSON string containing the capacity associated with the entitlement.\nString contents not validated by the schema.",
            "type": "string",
            "example": "2"
          },
          "entitlementConsumption": {
            "description": "JSON string containing the amount of the capacity associated with the entitlement that is currently in use.\nString contents not validated by the schema.",
            "type": "string",
            "example": "1"
          },
          "sourceLicense": {
            "description": "JSON string containing the license object ID that the entitlement is sourced from.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c8aa757a-5318-489f-8134-a2a1a6956a3e"
          },
          "sourceSubscription": {
            "description": "JSON string containing the ID of the subscription object that the entitlement is sourced from.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the entitlement becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T00:00:00.000000Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the entitlement is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-06T00:00:00.000000Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "entitlement_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/entitlement_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "event_1.4_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "sequenceCount",
          "summary",
          "eventTime",
          "source",
          "resourceID",
          "additionalResourceIDs",
          "resourceType",
          "correlationID",
          "severity",
          "class",
          "description",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-event\"",
            "type": "string",
            "enum": [
              "application/astra-event"
            ],
            "example": "application/astra-event"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"\n* \"1.4\"",
            "type": "string",
            "enum": [
              "1.4",
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.4"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c32df10b-8cfb-5a1e-9510-2a262b476009"
          },
          "name": {
            "description": "JSON string containing a dot notation (.) hierarchical name for the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 127\n* Defined regex is: \"^(([a-z])*(\\\\.))*([a-z])+$\"",
            "type": "string",
            "pattern": "^([a-z]+\\.)+[a-z]+$",
            "minLength": 3,
            "maxLength": 127,
            "example": "astra.app.discovery.failed"
          },
          "sequenceCount": {
            "description": "JSON number containing a sequence count.\nThe number is incremented by the system each time a new event is received.",
            "type": "number",
            "example": 48923
          },
          "summary": {
            "description": "JSON string containing the short-form (less than 40 characters) summary of the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 79",
            "type": "string",
            "minLength": 3,
            "maxLength": 79,
            "example": "Application Discovery Failed"
          },
          "eventTime": {
            "description": "JSON string containing a timestamp that indicates when an event occurred.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:51.846543Z"
          },
          "source": {
            "description": "JSON string containing the lowercase name of the service generating an event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 19\n* Defined regex is: \"^([a-z-])*$\"",
            "type": "string",
            "pattern": "^([a-z-])*$",
            "minLength": 1,
            "maxLength": 19,
            "example": "composite-compute"
          },
          "resourceID": {
            "description": "JSON string containing the resource ID associated with an event.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f670bf11-8850-44bd-b330-815af6186a06"
          },
          "additionalResourceIDs": {
            "description": "JSON array of JSON strings, each containing a resource ID of an additional resource associated with the event. While the \"resourceID\" field contains the primary resource associated with this event, this field contains any number of additional resource IDs to be associated with the same events.\nIf no additional resources are associated with the event, the array will be empty.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          "resourceType": {
            "description": "JSON string containing the media type of the resource associated with an event.\nDefined values are:\n* Minimum length: 4\n* Maximum length: 79\n* Defined regex is: \"^application\\/astra-([a-zA-Z])+$\"",
            "type": "string",
            "pattern": "^application\\/astra-([a-zA-Z])+$",
            "minLength": 4,
            "maxLength": 79,
            "example": "application/astra-app"
          },
          "correlationID": {
            "description": "JSON string containing a UUIDv4 correlation ID that allows related events to be grouped together.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "3c603442-cfca-4af9-9f1b-40dde5c7a806"
          },
          "severity": {
            "description": "JSON string containing one of the following values that indicate the severity of an event.\nDefined values are:\n* \"cleared\" - Indicates that a previously reported event describing a condition is no longer active. An event with severity \"cleared\" will use the same summary and correlation ID to allow it to be matched up.\n* \"indeterminate\" - Indicates that the severity cannot be determined.\n* \"informational\" - Indicates a change in state that is both expected and normal (not defined in X.733).\n* \"warning\" - Indicates the detection of a potential or impending service affecting fault before any significant effects have been felt.\n* \"critical\" - Indicates that a service affecting condition has occurred and immediate corrective action is required.\nDefinitions for \"cleared\", \"indeterminate\", \"warning\" and \"critical\" are based on definitions in clause 8.1.2.3 of CCITT X.733.",
            "type": "string",
            "enum": [
              "cleared",
              "indeterminate",
              "informational",
              "warning",
              "critical"
            ],
            "example": "warning"
          },
          "class": {
            "description": "JSON string containing one of the following values that indicate the class of the event.\nDefined values are:\n* \"system\" - The event is related to an internal event or request.\n* \"user\" - The event is related to a user-initiated event or request.\n* \"security\" - The event is related to a security issue.",
            "type": "string",
            "enum": [
              "system",
              "user",
              "security"
            ],
            "example": "user"
          },
          "description": {
            "description": "JSON string containing a long-form descriptive text about the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 1023",
            "type": "string",
            "minLength": 3,
            "maxLength": 1023,
            "example": "Discovering the application 'mysql' was unsuccessful. K8s error 442. Application marked in state 'error'."
          },
          "descriptionURL": {
            "description": "JSON string containing the URL that enables and links a button in the banner to external documentation.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://www.astra.io/events/12432"
          },
          "correctiveAction": {
            "description": "JSON string containing a long-form descriptive text about what corrective action must be taken in response to the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 1023",
            "type": "string",
            "minLength": 3,
            "maxLength": 1023,
            "example": "Perform this operation via kubectl..."
          },
          "correctiveActionURL": {
            "description": "JSON string containing the URL that links a button in the banner to a page within the UI to fix the issue.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://www.astra.io/events/12432#actions"
          },
          "visibility": {
            "description": "JSON array of JSON strings, each indicating an RBAC role permitted to view the event. Roles are OR-defined together. Optional.\nIf omitted, a user with any RBAC role can view the event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 63
            }
          },
          "destinations": {
            "description": "JSON array of JSON strings, each indicating an additional destination for the event. These strings allow a service to provide hints about where an event should be routed in addition to the activity log. Optional.\nDefined values are:\n* \"notification\" - The event is marked as a notification, and will be accessible through the notifications API endpoint.\n* \"banner\" - The event is marked as a banner.\n* \"support\" - The event is marked as a support-related event.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "notification",
                "banner",
                "support"
              ]
            }
          },
          "resourceURI": {
            "description": "JSON string containing the URI associated with the event. Only included for events related to API operations.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/managedClusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/apps/f670bf11-8850-44bd-b330-815af6186a06"
          },
          "resourceCollectionURL": {
            "description": "JSON array of JSON strings, each indicating the fully-expanded access URL of the resource associated with the event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1023
            }
          },
          "resourceMethod": {
            "description": "JSON string containing the HTTP method invoked. Only included for events related to API operations.\nDefined values are:\n* \"options\" - OPTIONS API operation\n* \"post\" - POST API operation\n* \"get\" - GET API operation\n* \"put\" - PUT API operation\n* \"delete\" - DELETE API operation",
            "type": "string",
            "enum": [
              "options",
              "post",
              "get",
              "put",
              "delete"
            ]
          },
          "resourceMethodResult": {
            "description": "JSON string containing the result of the HTTP method invoked. Only included for events related to the API operations.\nDefined values are:\n* Defined regex is: \"^[1-5][0-9]{2}$\"",
            "type": "string",
            "pattern": "^[1-5][0-9]{2}$"
          },
          "userID": {
            "description": "JSON string containing the user ID associated with an event. Only included for events associated with the user-initiated actions.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "abda967f-cd2c-4237-908e-99266648c553"
          },
          "accountID": {
            "description": "JSON string containing the account ID associated with an event. Only included for events associated with an account.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f126d214-bccf-4558-86b4-2137a41e734f"
          },
          "data": {
            "description": "JSON object containing additional event-specific information.",
            "type": "object",
            "properties": {
              "ttl": {
                "description": "JSON number indicating the number of seconds (since the eventTime) that the event will be retained.\nThis field is only included when an event is automatically deleted after the specified number of seconds.\nWhen deleted, if the event has a notification destination, all associated notifications are also deleted.\nWhen deleted, if the event has a banner destination, the banner is also removed.\nThe absence of this field (or a value of \"0\") means that an event will not be automatically deleted.",
                "type": "number"
              },
              "isAcknowledgeable": {
                "description": "JSON string indicating whether the banner is dismissible.\nDefined values are:\n* \"true\" - The banner is dismissible\n* \"false\" - The banner is not dismissible",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ]
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "event_1.4_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/event_1.4_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "executionHookOverride_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "executionHookID",
          "enabled",
          "appID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHookOverride\"",
            "type": "string",
            "enum": [
              "application/astra-executionHookOverride"
            ],
            "example": "application/astra-executionHookOverride"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c11af802-5e53-5897-8cd9-2de730494be3"
          },
          "executionHookID": {
            "description": "JSON string containing the ID of an execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nOnly allows the executionHookID of an execution hook resource with a hookType value of \"netapp\".",
            "type": "application/vnd.netapp.astra.executionHook",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ad0f67c4-413f-44c0-9e3a-76f37a384d8c"
          },
          "enabled": {
            "description": "JSON string that indicates whether the execution hook is enabled for the specified application.\nDefined values are:\n* \"true\" - The execution hook is enabled and will run in a specified order\n* \"false\" - The execution hook is disabled and cannot run",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application with which the override is linked.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHookOverride_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/executionHookOverride_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "executionHookOverride_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "executionHookID",
          "enabled"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHookOverride\"",
            "type": "string",
            "enum": [
              "application/astra-executionHookOverride"
            ],
            "example": "application/astra-executionHookOverride"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "executionHookID": {
            "description": "JSON string containing the ID of an execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nOnly allows the executionHookID of an execution hook resource with a hookType value of \"netapp\".",
            "type": "application/vnd.netapp.astra.executionHook",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ad0f67c4-413f-44c0-9e3a-76f37a384d8c"
          },
          "enabled": {
            "description": "JSON string that indicates whether the execution hook is enabled for the specified application.\nDefined values are:\n* \"true\" - The execution hook is enabled and will run in a specified order\n* \"false\" - The execution hook is disabled and cannot run",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHookOverride_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "executionHookID",
          "enabled",
          "appID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHookOverride\"",
            "type": "string",
            "enum": [
              "application/astra-executionHookOverride"
            ],
            "example": "application/astra-executionHookOverride"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c11af802-5e53-5897-8cd9-2de730494be3"
          },
          "executionHookID": {
            "description": "JSON string containing the ID of an execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nOnly allows the executionHookID of an execution hook resource with a hookType value of \"netapp\".",
            "type": "application/vnd.netapp.astra.executionHook",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ad0f67c4-413f-44c0-9e3a-76f37a384d8c"
          },
          "enabled": {
            "description": "JSON string that indicates whether the execution hook is enabled for the specified application.\nDefined values are:\n* \"true\" - The execution hook is enabled and will run in a specified order\n* \"false\" - The execution hook is disabled and cannot run",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application with which the override is linked.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHookOverride_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHookOverride\"",
            "type": "string",
            "enum": [
              "application/astra-executionHookOverride"
            ],
            "example": "application/astra-executionHookOverride"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c11af802-5e53-5897-8cd9-2de730494be3"
          },
          "executionHookID": {
            "description": "JSON string containing the ID of an execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nOnly allows the executionHookID of an execution hook resource with a hookType value of \"netapp\".",
            "type": "application/vnd.netapp.astra.executionHook",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ad0f67c4-413f-44c0-9e3a-76f37a384d8c"
          },
          "enabled": {
            "description": "JSON string that indicates whether the execution hook is enabled for the specified application.\nDefined values are:\n* \"true\" - The execution hook is enabled and will run in a specified order\n* \"false\" - The execution hook is disabled and cannot run",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application with which the override is linked.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4b43c2f7-bffa-4f60-b595-d98a05b64bc9"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHook_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "hookType",
          "matchingCriteria",
          "action",
          "stage",
          "hookSourceID",
          "enabled",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHook\"",
            "type": "string",
            "enum": [
              "application/astra-executionHook"
            ],
            "example": "application/astra-executionHook"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "946e60cb-980b-5374-9e6e-9fe1f6780352"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nName must be unique across all execution hook resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll"
          },
          "hookType": {
            "description": "JSON string defining the hook type.\nDefined values are:\n* \"netapp\" - NetApp provided execution hook.\n* \"custom\" - Tied to a specific app ID.\nExecution hook resources with hookType \"netapp\" are read only.",
            "type": "string",
            "enum": [
              "netapp",
              "custom"
            ],
            "example": "custom"
          },
          "matchingCriteria": {
            "description": "JSON array of JSON objects describing the match criteria for the execution hook.  When multiple matchingCriteria are specified a logical AND is applied to criteria.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 10",
            "type": "array",
            "maxItems": 10,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "type",
                "value"
              ],
              "properties": {
                "type": {
                  "description": "JSON string identifying the match criteria type.",
                  "type": "string",
                  "enum": [
                    "containerImage",
                    "containerName",
                    "podName",
                    "podLabel",
                    "namespaceName"
                  ]
                },
                "value": {
                  "description": "JSON string containing a regex to match for the given match type.\nRegex syntax: https://github.com/google/re2/wiki/Syntax",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "matchingContainers": {
            "description": "JSON array of JSON objects of each container that matches the configured matching criteria within the defined app.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "podName": {
                  "description": "JSON string of matching container's pod name.",
                  "type": "string"
                },
                "podLabels": {
                  "description": "JSON array of label objects of matching container's pod's labels.",
                  "type": "array",
                  "$ref": "#/components/schemas/type_k8s_labels"
                },
                "containerImage": {
                  "description": "JSON string of matching container's image.",
                  "type": "string"
                },
                "containerName": {
                  "description": "JSON string of matching container's name.",
                  "type": "string"
                },
                "namespaceName": {
                  "description": "JSON string of matching container's pod's namespace name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "matchingImages": {
            "description": "JSON array of JSON strings for the matching container images.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 4095\n* Minimum length: 1\n* Maximum length: 255",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          "action": {
            "description": "JSON string indicating which action the execution hook will run assuming the match criteria are met.\nDefined values are:\n* \"snapshot\"\n* \"backup\"\n* \"restore\"",
            "type": "string",
            "enum": [
              "snapshot",
              "backup",
              "restore"
            ],
            "example": "snapshot"
          },
          "stage": {
            "description": "JSON string indicating the stage during the action that the hook will be executed.\nDefined values are:\n* \"pre\" - The execution hook will be run before the specified action.\n* \"post\" - The execution hook will be run after the specified action.\nValues for action \"snapshot\" are \"pre\" and \"post\".\nValues for action \"backup\" are \"pre\" and \"post\".\nValue for action \"restore\" is \"post\".",
            "type": "string",
            "enum": [
              "pre",
              "post"
            ],
            "example": "pre"
          },
          "hookSourceID": {
            "description": "JSON string containing the hook source ID that is run through this execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.hookSource",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "36fbdaad-0044-4954-b96c-5d200993be61"
          },
          "arguments": {
            "description": "JSON array of JSON strings for the arguments to the source.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 16\n* Minimum length: 0\n* Maximum length: 127",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 127
            }
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application that this hook is linked to. In essence, other matching criteria, if set.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9"
          },
          "enabled": {
            "description": "JSON string that indicates if the execution hook is enabled.\nDefined values are:\n* \"true\" - The execution hook is enabled and will be run as specified.\n* \"false\" - The execution hook is disabled and will never run.\nThe default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "description": {
            "description": "JSON string containing a user-specified description for the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Payroll execution hook pre-post v1.2"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHook_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/executionHook_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "executionHook_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "hookType",
          "action",
          "stage",
          "hookSourceID",
          "appID"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHook\"",
            "type": "string",
            "enum": [
              "application/astra-executionHook"
            ],
            "example": "application/astra-executionHook"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nName must be unique across all execution hook resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll"
          },
          "hookType": {
            "description": "JSON string defining the hook type.\nDefined values are:\n* \"netapp\" - NetApp provided execution hook.\n* \"custom\" - Tied to a specific app ID.\nExecution hook resources with hookType \"netapp\" are read only.",
            "type": "string",
            "enum": [
              "netapp",
              "custom"
            ],
            "example": "custom"
          },
          "matchingCriteria": {
            "description": "JSON array of JSON objects describing the match criteria for the execution hook.  When multiple matchingCriteria are specified a logical AND is applied to criteria.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 10",
            "type": "array",
            "maxItems": 10,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "JSON string identifying the match criteria type.",
                  "type": "string",
                  "enum": [
                    "containerImage",
                    "containerName",
                    "podName",
                    "podLabel",
                    "namespaceName"
                  ]
                },
                "value": {
                  "description": "JSON string containing a regex to match for the given match type.\nRegex syntax: https://github.com/google/re2/wiki/Syntax",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "action": {
            "description": "JSON string indicating which action the execution hook will run assuming the match criteria are met.\nDefined values are:\n* \"snapshot\"\n* \"backup\"\n* \"restore\"",
            "type": "string",
            "enum": [
              "snapshot",
              "backup",
              "restore"
            ],
            "example": "snapshot"
          },
          "stage": {
            "description": "JSON string indicating the stage during the action that the hook will be executed.\nDefined values are:\n* \"pre\" - The execution hook will be run before the specified action.\n* \"post\" - The execution hook will be run after the specified action.\nValues for action \"snapshot\" are \"pre\" and \"post\".\nValues for action \"backup\" are \"pre\" and \"post\".\nValue for action \"restore\" is \"post\".",
            "type": "string",
            "enum": [
              "pre",
              "post"
            ],
            "example": "pre"
          },
          "hookSourceID": {
            "description": "JSON string containing the hook source ID that is run through this execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.hookSource",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "36fbdaad-0044-4954-b96c-5d200993be61"
          },
          "arguments": {
            "description": "JSON array of JSON strings for the arguments to the source.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 16\n* Minimum length: 0\n* Maximum length: 127",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 127
            }
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application that this hook is linked to. In essence, other matching criteria, if set.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9"
          },
          "enabled": {
            "description": "JSON string that indicates if the execution hook is enabled.\nDefined values are:\n* \"true\" - The execution hook is enabled and will be run as specified.\n* \"false\" - The execution hook is disabled and will never run.\nThe default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "description": {
            "description": "JSON string containing a user-specified description for the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Payroll execution hook pre-post v1.2"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHook_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "hookType",
          "matchingCriteria",
          "action",
          "stage",
          "hookSourceID",
          "enabled",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHook\"",
            "type": "string",
            "enum": [
              "application/astra-executionHook"
            ],
            "example": "application/astra-executionHook"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "946e60cb-980b-5374-9e6e-9fe1f6780352"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nName must be unique across all execution hook resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll"
          },
          "hookType": {
            "description": "JSON string defining the hook type.\nDefined values are:\n* \"netapp\" - NetApp provided execution hook.\n* \"custom\" - Tied to a specific app ID.\nExecution hook resources with hookType \"netapp\" are read only.",
            "type": "string",
            "enum": [
              "netapp",
              "custom"
            ],
            "example": "custom"
          },
          "matchingCriteria": {
            "description": "JSON array of JSON objects describing the match criteria for the execution hook.  When multiple matchingCriteria are specified a logical AND is applied to criteria.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 10",
            "type": "array",
            "maxItems": 10,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "type",
                "value"
              ],
              "properties": {
                "type": {
                  "description": "JSON string identifying the match criteria type.",
                  "type": "string",
                  "enum": [
                    "containerImage",
                    "containerName",
                    "podName",
                    "podLabel",
                    "namespaceName"
                  ]
                },
                "value": {
                  "description": "JSON string containing a regex to match for the given match type.\nRegex syntax: https://github.com/google/re2/wiki/Syntax",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "matchingContainers": {
            "description": "JSON array of JSON objects of each container that matches the configured matching criteria within the defined app.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "podName": {
                  "description": "JSON string of matching container's pod name.",
                  "type": "string"
                },
                "podLabels": {
                  "description": "JSON array of label objects of matching container's pod's labels.",
                  "type": "array",
                  "$ref": "#/components/schemas/type_k8s_labels"
                },
                "containerImage": {
                  "description": "JSON string of matching container's image.",
                  "type": "string"
                },
                "containerName": {
                  "description": "JSON string of matching container's name.",
                  "type": "string"
                },
                "namespaceName": {
                  "description": "JSON string of matching container's pod's namespace name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "matchingImages": {
            "description": "JSON array of JSON strings for the matching container images.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 4095\n* Minimum length: 1\n* Maximum length: 255",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          },
          "action": {
            "description": "JSON string indicating which action the execution hook will run assuming the match criteria are met.\nDefined values are:\n* \"snapshot\"\n* \"backup\"\n* \"restore\"",
            "type": "string",
            "enum": [
              "snapshot",
              "backup",
              "restore"
            ],
            "example": "snapshot"
          },
          "stage": {
            "description": "JSON string indicating the stage during the action that the hook will be executed.\nDefined values are:\n* \"pre\" - The execution hook will be run before the specified action.\n* \"post\" - The execution hook will be run after the specified action.\nValues for action \"snapshot\" are \"pre\" and \"post\".\nValues for action \"backup\" are \"pre\" and \"post\".\nValue for action \"restore\" is \"post\".",
            "type": "string",
            "enum": [
              "pre",
              "post"
            ],
            "example": "pre"
          },
          "hookSourceID": {
            "description": "JSON string containing the hook source ID that is run through this execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.hookSource",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "36fbdaad-0044-4954-b96c-5d200993be61"
          },
          "arguments": {
            "description": "JSON array of JSON strings for the arguments to the source.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 16\n* Minimum length: 0\n* Maximum length: 127",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 127
            }
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application that this hook is linked to. In essence, other matching criteria, if set.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9"
          },
          "enabled": {
            "description": "JSON string that indicates if the execution hook is enabled.\nDefined values are:\n* \"true\" - The execution hook is enabled and will be run as specified.\n* \"false\" - The execution hook is disabled and will never run.\nThe default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "description": {
            "description": "JSON string containing a user-specified description for the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Payroll execution hook pre-post v1.2"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "executionHook_1.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-executionHook\"",
            "type": "string",
            "enum": [
              "application/astra-executionHook"
            ],
            "example": "application/astra-executionHook"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "946e60cb-980b-5374-9e6e-9fe1f6780352"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nName must be unique across all execution hook resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll"
          },
          "hookType": {
            "description": "JSON string defining the hook type.\nDefined values are:\n* \"netapp\" - NetApp provided execution hook.\n* \"custom\" - Tied to a specific app ID.\nExecution hook resources with hookType \"netapp\" are read only.",
            "type": "string",
            "enum": [
              "netapp",
              "custom"
            ],
            "example": "custom"
          },
          "matchingCriteria": {
            "description": "JSON array of JSON objects describing the match criteria for the execution hook.  When multiple matchingCriteria are specified a logical AND is applied to criteria.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 10",
            "type": "array",
            "maxItems": 10,
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "JSON string identifying the match criteria type.",
                  "type": "string",
                  "enum": [
                    "containerImage",
                    "containerName",
                    "podName",
                    "podLabel",
                    "namespaceName"
                  ]
                },
                "value": {
                  "description": "JSON string containing a regex to match for the given match type.\nRegex syntax: https://github.com/google/re2/wiki/Syntax",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "action": {
            "description": "JSON string indicating which action the execution hook will run assuming the match criteria are met.\nDefined values are:\n* \"snapshot\"\n* \"backup\"\n* \"restore\"",
            "type": "string",
            "enum": [
              "snapshot",
              "backup",
              "restore"
            ],
            "example": "snapshot"
          },
          "stage": {
            "description": "JSON string indicating the stage during the action that the hook will be executed.\nDefined values are:\n* \"pre\" - The execution hook will be run before the specified action.\n* \"post\" - The execution hook will be run after the specified action.\nValues for action \"snapshot\" are \"pre\" and \"post\".\nValues for action \"backup\" are \"pre\" and \"post\".\nValue for action \"restore\" is \"post\".",
            "type": "string",
            "enum": [
              "pre",
              "post"
            ],
            "example": "pre"
          },
          "hookSourceID": {
            "description": "JSON string containing the hook source ID that is run through this execution hook.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.hookSource",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "36fbdaad-0044-4954-b96c-5d200993be61"
          },
          "arguments": {
            "description": "JSON array of JSON strings for the arguments to the source.\nDefined values are:\n* Minimum items: 0\n* Maximum items: 16\n* Minimum length: 0\n* Maximum length: 127",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 127
            }
          },
          "appID": {
            "description": "JSON string containing the associated ID of the application that this hook is linked to. In essence, other matching criteria, if set.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.app",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "7be5ae7c-151d-4230-ac39-ac1d0b33c2a9"
          },
          "enabled": {
            "description": "JSON string that indicates if the execution hook is enabled.\nDefined values are:\n* \"true\" - The execution hook is enabled and will be run as specified.\n* \"false\" - The execution hook is disabled and will never run.\nThe default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "description": {
            "description": "JSON string containing a user-specified description for the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Payroll execution hook pre-post v1.2"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "feature_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "isEnabled",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-feature\"",
            "type": "string",
            "enum": [
              "application/astra-feature"
            ],
            "example": "application/astra-feature"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "2d960b50-10be-5a19-a3ef-80bd08c12a89"
          },
          "name": {
            "description": "JSON string containing a name for the feature, in hierarchal dot notation.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "astra.account.smtp"
          },
          "isEnabled": {
            "description": "JSON string containing a value indicating whether the feature flag is turned on or off.\nDefined values are:\n* \"true\" - The feature flag is enabled.\n* \"false\" - The feature flag is disabled.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "feature_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/feature_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "group_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "authProvider",
          "authID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-group\"",
            "type": "string",
            "enum": [
              "application/astra-group"
            ],
            "example": "application/astra-group"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "d8560bb2-7c87-5331-a78d-4e870b22e9a9"
          },
          "name": {
            "description": "The name of the group resource.\nIf not specified on create, the value will be set to\n* first Common Name (CN) Relative Distinguished Names (RDN) if found in the authID,\n* authID, otherwise.\nIf not specified on update, the value will be preserved without modification.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "Engineering"
          },
          "authProvider": {
            "description": "The authentication provider for the group resource.\nDefined values are:\n* \"ldap\"",
            "type": "string",
            "enum": [
              "ldap"
            ],
            "example": "ldap"
          },
          "authID": {
            "description": "The Distinguished Name (DN) for an LDAP group.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "CN=Engineering,CN=Groups,DC=example,DC=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "group_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/group_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "group_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "authProvider",
          "authID"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-group\"",
            "type": "string",
            "enum": [
              "application/astra-group"
            ],
            "example": "application/astra-group"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "name": {
            "description": "The name of the group resource.\nIf not specified on create, the value will be set to\n* first Common Name (CN) Relative Distinguished Names (RDN) if found in the authID,\n* authID, otherwise.\nIf not specified on update, the value will be preserved without modification.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "Engineering"
          },
          "authProvider": {
            "description": "The authentication provider for the group resource.\nDefined values are:\n* \"ldap\"",
            "type": "string",
            "enum": [
              "ldap"
            ],
            "example": "ldap"
          },
          "authID": {
            "description": "The Distinguished Name (DN) for an LDAP group.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "CN=Engineering,CN=Groups,DC=example,DC=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "group_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "authProvider",
          "authID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-group\"",
            "type": "string",
            "enum": [
              "application/astra-group"
            ],
            "example": "application/astra-group"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "d8560bb2-7c87-5331-a78d-4e870b22e9a9"
          },
          "name": {
            "description": "The name of the group resource.\nIf not specified on create, the value will be set to\n* first Common Name (CN) Relative Distinguished Names (RDN) if found in the authID,\n* authID, otherwise.\nIf not specified on update, the value will be preserved without modification.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "Engineering"
          },
          "authProvider": {
            "description": "The authentication provider for the group resource.\nDefined values are:\n* \"ldap\"",
            "type": "string",
            "enum": [
              "ldap"
            ],
            "example": "ldap"
          },
          "authID": {
            "description": "The Distinguished Name (DN) for an LDAP group.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "CN=Engineering,CN=Groups,DC=example,DC=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "group_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-group\"",
            "type": "string",
            "enum": [
              "application/astra-group"
            ],
            "example": "application/astra-group"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "d8560bb2-7c87-5331-a78d-4e870b22e9a9"
          },
          "name": {
            "description": "The name of the group resource.\nIf not specified on create, the value will be set to\n* first Common Name (CN) Relative Distinguished Names (RDN) if found in the authID,\n* authID, otherwise.\nIf not specified on update, the value will be preserved without modification.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "Engineering"
          },
          "authProvider": {
            "description": "The authentication provider for the group resource.\nDefined values are:\n* \"ldap\"",
            "type": "string",
            "enum": [
              "ldap"
            ],
            "example": "ldap"
          },
          "authID": {
            "description": "The Distinguished Name (DN) for an LDAP group.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 256",
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "example": "CN=Engineering,CN=Groups,DC=example,DC=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "hookSource_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "private",
          "preloaded",
          "sourceType",
          "sourceMD5Checksum",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-hookSource\"",
            "type": "string",
            "enum": [
              "application/astra-hookSource"
            ],
            "example": "application/astra-hookSource"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "fae6dfbb-ecb8-58ff-a116-6357eb7c956a"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nThe name is required to be unique within all hook source resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll script"
          },
          "private": {
            "description": "JSON string indicating whether the source field will be exposed in APIs or be intentionally left blank.\nDefined values are:\n* \"true\" - The source value is private and will not be exposed through the API.\n* \"false\" - The source value is not private and will be exposed through the API.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "preloaded": {
            "description": "JSON string that indicates whether the source was preloaded.\nDefined values are:\n* \"true\" - The source was preloaded.\n* \"false\" - The source was not preloaded.\nPreloaded hook source resources are read only.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "sourceType": {
            "description": "JSON string defining the hook source type.\nDefined values are:\n* \"script\" - Shell script. The plaintext source must not contain binary data or carriage-return characters, otherwise, an error is returned.",
            "type": "string",
            "enum": [
              "script"
            ],
            "example": "script"
          },
          "source": {
            "description": "JSON string containing the script to be run in base64 format.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 131072\n* Conforms to the base64 Encoded Data Schema\nThe maximum size of a source value is 128 KiB when encoded using base64.",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "minLength": 0,
            "maxLength": 131072,
            "example": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k"
          },
          "sourceMD5Checksum": {
            "description": "JSON string containing the MD5 checksum computed for the value of the \"source\" key.\nDefined values are:\n* Defined regex is: \"^([0-9a-fA-F]){32}$\"",
            "type": "string",
            "pattern": "^([0-9a-fA-F]){32}$",
            "example": "b1a4b8b0144c3f6be553b626130ca145"
          },
          "description": {
            "description": "JSON string containing a user-specified description of the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Pre/post script for payroll app"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "hookSource_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/hookSource_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "hookSource_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "sourceType",
          "source"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-hookSource\"",
            "type": "string",
            "enum": [
              "application/astra-hookSource"
            ],
            "example": "application/astra-hookSource"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nThe name is required to be unique within all hook source resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll script"
          },
          "sourceType": {
            "description": "JSON string defining the hook source type.\nDefined values are:\n* \"script\" - Shell script. The plaintext source must not contain binary data or carriage-return characters, otherwise, an error is returned.",
            "type": "string",
            "enum": [
              "script"
            ],
            "example": "script"
          },
          "source": {
            "description": "JSON string containing the script to be run in base64 format.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 131072\n* Conforms to the base64 Encoded Data Schema\nThe maximum size of a source value is 128 KiB when encoded using base64.",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "minLength": 0,
            "maxLength": 131072,
            "example": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k"
          },
          "description": {
            "description": "JSON string containing a user-specified description of the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Pre/post script for payroll app"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "hookSource_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "private",
          "preloaded",
          "sourceType",
          "sourceMD5Checksum",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-hookSource\"",
            "type": "string",
            "enum": [
              "application/astra-hookSource"
            ],
            "example": "application/astra-hookSource"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "fae6dfbb-ecb8-58ff-a116-6357eb7c956a"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nThe name is required to be unique within all hook source resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll script"
          },
          "private": {
            "description": "JSON string indicating whether the source field will be exposed in APIs or be intentionally left blank.\nDefined values are:\n* \"true\" - The source value is private and will not be exposed through the API.\n* \"false\" - The source value is not private and will be exposed through the API.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "preloaded": {
            "description": "JSON string that indicates whether the source was preloaded.\nDefined values are:\n* \"true\" - The source was preloaded.\n* \"false\" - The source was not preloaded.\nPreloaded hook source resources are read only.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "sourceType": {
            "description": "JSON string defining the hook source type.\nDefined values are:\n* \"script\" - Shell script. The plaintext source must not contain binary data or carriage-return characters, otherwise, an error is returned.",
            "type": "string",
            "enum": [
              "script"
            ],
            "example": "script"
          },
          "source": {
            "description": "JSON string containing the script to be run in base64 format.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 131072\n* Conforms to the base64 Encoded Data Schema\nThe maximum size of a source value is 128 KiB when encoded using base64.",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "minLength": 0,
            "maxLength": 131072,
            "example": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k"
          },
          "sourceMD5Checksum": {
            "description": "JSON string containing the MD5 checksum computed for the value of the \"source\" key.\nDefined values are:\n* Defined regex is: \"^([0-9a-fA-F]){32}$\"",
            "type": "string",
            "pattern": "^([0-9a-fA-F]){32}$",
            "example": "b1a4b8b0144c3f6be553b626130ca145"
          },
          "description": {
            "description": "JSON string containing a user-specified description of the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Pre/post script for payroll app"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "hookSource_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-hookSource\"",
            "type": "string",
            "enum": [
              "application/astra-hookSource"
            ],
            "example": "application/astra-hookSource"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "fae6dfbb-ecb8-58ff-a116-6357eb7c956a"
          },
          "name": {
            "description": "JSON string containing a user-specified name for the resource.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\nThe name is required to be unique within all hook source resources.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Payroll script"
          },
          "private": {
            "description": "JSON string indicating whether the source field will be exposed in APIs or be intentionally left blank.\nDefined values are:\n* \"true\" - The source value is private and will not be exposed through the API.\n* \"false\" - The source value is not private and will be exposed through the API.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "preloaded": {
            "description": "JSON string that indicates whether the source was preloaded.\nDefined values are:\n* \"true\" - The source was preloaded.\n* \"false\" - The source was not preloaded.\nPreloaded hook source resources are read only.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "sourceType": {
            "description": "JSON string defining the hook source type.\nDefined values are:\n* \"script\" - Shell script. The plaintext source must not contain binary data or carriage-return characters, otherwise, an error is returned.",
            "type": "string",
            "enum": [
              "script"
            ],
            "example": "script"
          },
          "source": {
            "description": "JSON string containing the script to be run in base64 format.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 131072\n* Conforms to the base64 Encoded Data Schema\nThe maximum size of a source value is 128 KiB when encoded using base64.",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "minLength": 0,
            "maxLength": 131072,
            "example": "ZWNobyAiVkhKaGJuTWdVbWxuYUhSeklRPT0iIHwgYmFzZTY0IC1k"
          },
          "sourceMD5Checksum": {
            "description": "JSON string containing the MD5 checksum computed for the value of the \"source\" key.\nDefined values are:\n* Defined regex is: \"^([0-9a-fA-F]){32}$\"",
            "type": "string",
            "pattern": "^([0-9a-fA-F]){32}$",
            "example": "b1a4b8b0144c3f6be553b626130ca145"
          },
          "description": {
            "description": "JSON string containing a user-specified description of the hook source.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 511",
            "type": "string",
            "minLength": 0,
            "maxLength": 511,
            "example": "Pre/post script for payroll app"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "ldapGroup_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-ldapGroup\"",
            "type": "string",
            "enum": [
              "application/astra-ldapGroup"
            ],
            "example": "application/astra-ldapGroup"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "cb05a289-a7a1-502c-a2bc-7e75dba8fddc"
          },
          "cn": {
            "description": "JSON string representing the LDAP group name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "boulder_sysadmins"
          },
          "dn": {
            "description": "JSON string representing the distinguished name of the LDAP group.\nDefined values are:\n* Conforms to RFC 4514",
            "type": "string",
            "example": "cn=boulder_sysadmins,ou=groups,dc=example,dc=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "ldapGroup_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ldapGroup_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "ldapUser_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-ldapUser\"",
            "type": "string",
            "enum": [
              "application/astra-ldapUser"
            ],
            "example": "application/astra-ldapUser"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "2add73ff-89dc-5ff1-be85-39d97549556d"
          },
          "email": {
            "description": "JSON string representing the email of the LDAP user.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 63",
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "example": "johndoe@example.com"
          },
          "firstName": {
            "description": "JSON string representing the first name of the LDAP user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John"
          },
          "lastName": {
            "description": "JSON string representing the last name of the LDAP user.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Doe"
          },
          "cn": {
            "description": "JSON string representing the LDAP group name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John Doe"
          },
          "dn": {
            "description": "JSON string representing the distinguished name of the LDAP group.\nDefined values are:\n* Conforms to RFC 4514",
            "type": "string",
            "example": "cn=John Doe,ou=people,dc=example,dc=com"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "ldapUser_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ldapUser_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "license_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "isEvaluation",
          "licenseProtocol",
          "licenseText",
          "validFromTimestamp",
          "validUntilTimestamp",
          "product",
          "productVersion",
          "productSN",
          "features",
          "capacity",
          "capacity2",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-license\"",
            "type": "string",
            "enum": [
              "application/astra-license"
            ],
            "example": "application/astra-license"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6db53b32-8417-5d3c-8ef0-552fc602c78f"
          },
          "allocation": {
            "description": "JSON string containing an ID indicating what the license is allocated to. Only present when the license is allocated.\nFor Astra Control Center licenses, this field must be populated with the account ID and must match the account ID specified in the POST URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4185d09b-6687-4801-a832-c005a9d94f41"
          },
          "hostID": {
            "description": "JSON string containing a host identifier that a license is bound to. Only present if the license is host-locked.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "99132549-e0c2-4203-9d1e-598628b4ff9b"
          },
          "deviceCredentialID": {
            "description": "JSON string containing the identifier of the deviceCredential associated with the Credential API. Only present for Astra Data Store licenses.\nDefined value are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c8bbcd7a-5318-489f-8134-a2a1a6956a3e"
          },
          "isEvaluation": {
            "description": "JSON string indicating whether the license is an evaluation license.\nDefined values are:\n* \"true\"\n* \"false\"",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "licenseProtocol": {
            "description": "JSON string containing the license protocol extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRASDS-ENT-SUBS"
          },
          "licenseText": {
            "description": "JSON string containing a base64 encoded representation of the license JSON as obtained from the NetApp license system. This must be provided in the original byte-level order to allow signature verification.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T00:00:00.000000Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-06T00:00:00.000000Z"
          },
          "product": {
            "description": "JSON string containing the product string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "Astra Control Center"
          },
          "productVersion": {
            "description": "JSON string containing the version string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "1"
          },
          "productSN": {
            "description": "JSON string containing the serial number string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "320000046"
          },
          "features": {
            "description": "JSON string containing the package value extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRA-ENT-STD"
          },
          "capacity": {
            "description": "JSON string containing the capacity extracted from the license.",
            "type": "string",
            "example": "4000"
          },
          "capacity2": {
            "description": "JSON string containing the secondary capacity extracted from the license.",
            "type": "string",
            "example": "0"
          },
          "addons": {
            "description": "JSON array of JSON objects containing the list of add-ons from the license.\nAn add-on is a change in license occurring at a potential future date.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "startDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "endDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "features": {
                  "description": "JSON string containing the list of features associated with this add-on.\nDefined values are:\n* String contents not validated by the schema.",
                  "type": "string"
                },
                "capacity": {
                  "description": "JSON string containing the capacity extracted from the add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                },
                "licenseProtocol": {
                  "description": "JSON string containing the license protocol associated with this add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "license_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/license_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "license_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "licenseText"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-license\"",
            "type": "string",
            "enum": [
              "application/astra-license"
            ],
            "example": "application/astra-license"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "allocation": {
            "description": "JSON string containing an ID indicating what the license is allocated to. Only present when the license is allocated.\nFor Astra Control Center licenses, this field must be populated with the account ID and must match the account ID specified in the POST URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4185d09b-6687-4801-a832-c005a9d94f41"
          },
          "deviceCredentialID": {
            "description": "JSON string containing the identifier of the deviceCredential associated with the Credential API. Only present for Astra Data Store licenses.\nDefined value are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c8bbcd7a-5318-489f-8134-a2a1a6956a3e"
          },
          "licenseText": {
            "description": "JSON string containing a base64 encoded representation of the license JSON as obtained from the NetApp license system. This must be provided in the original byte-level order to allow signature verification.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "license_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "isEvaluation",
          "licenseProtocol",
          "licenseText",
          "validFromTimestamp",
          "validUntilTimestamp",
          "product",
          "productVersion",
          "productSN",
          "features",
          "capacity",
          "capacity2",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-license\"",
            "type": "string",
            "enum": [
              "application/astra-license"
            ],
            "example": "application/astra-license"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6db53b32-8417-5d3c-8ef0-552fc602c78f"
          },
          "allocation": {
            "description": "JSON string containing an ID indicating what the license is allocated to. Only present when the license is allocated.\nFor Astra Control Center licenses, this field must be populated with the account ID and must match the account ID specified in the POST URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4185d09b-6687-4801-a832-c005a9d94f41"
          },
          "hostID": {
            "description": "JSON string containing a host identifier that a license is bound to. Only present if the license is host-locked.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "99132549-e0c2-4203-9d1e-598628b4ff9b"
          },
          "deviceCredentialID": {
            "description": "JSON string containing the identifier of the deviceCredential associated with the Credential API. Only present for Astra Data Store licenses.\nDefined value are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c8bbcd7a-5318-489f-8134-a2a1a6956a3e"
          },
          "isEvaluation": {
            "description": "JSON string indicating whether the license is an evaluation license.\nDefined values are:\n* \"true\"\n* \"false\"",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "licenseProtocol": {
            "description": "JSON string containing the license protocol extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRASDS-ENT-SUBS"
          },
          "licenseText": {
            "description": "JSON string containing a base64 encoded representation of the license JSON as obtained from the NetApp license system. This must be provided in the original byte-level order to allow signature verification.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T00:00:00.000000Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-06T00:00:00.000000Z"
          },
          "product": {
            "description": "JSON string containing the product string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "Astra Control Center"
          },
          "productVersion": {
            "description": "JSON string containing the version string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "1"
          },
          "productSN": {
            "description": "JSON string containing the serial number string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "320000046"
          },
          "features": {
            "description": "JSON string containing the package value extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRA-ENT-STD"
          },
          "capacity": {
            "description": "JSON string containing the capacity extracted from the license.",
            "type": "string",
            "example": "4000"
          },
          "capacity2": {
            "description": "JSON string containing the secondary capacity extracted from the license.",
            "type": "string",
            "example": "0"
          },
          "addons": {
            "description": "JSON array of JSON objects containing the list of add-ons from the license.\nAn add-on is a change in license occurring at a potential future date.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "startDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "endDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "features": {
                  "description": "JSON string containing the list of features associated with this add-on.\nDefined values are:\n* String contents not validated by the schema.",
                  "type": "string"
                },
                "capacity": {
                  "description": "JSON string containing the capacity extracted from the add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                },
                "licenseProtocol": {
                  "description": "JSON string containing the license protocol associated with this add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "license_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-license\"",
            "type": "string",
            "enum": [
              "application/astra-license"
            ],
            "example": "application/astra-license"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6db53b32-8417-5d3c-8ef0-552fc602c78f"
          },
          "allocation": {
            "description": "JSON string containing an ID indicating what the license is allocated to. Only present when the license is allocated.\nFor Astra Control Center licenses, this field must be populated with the account ID and must match the account ID specified in the POST URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4185d09b-6687-4801-a832-c005a9d94f41"
          },
          "hostID": {
            "description": "JSON string containing a host identifier that a license is bound to. Only present if the license is host-locked.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "99132549-e0c2-4203-9d1e-598628b4ff9b"
          },
          "deviceCredentialID": {
            "description": "JSON string containing the identifier of the deviceCredential associated with the Credential API. Only present for Astra Data Store licenses.\nDefined value are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "c8bbcd7a-5318-489f-8134-a2a1a6956a3e"
          },
          "isEvaluation": {
            "description": "JSON string indicating whether the license is an evaluation license.\nDefined values are:\n* \"true\"\n* \"false\"",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "licenseProtocol": {
            "description": "JSON string containing the license protocol extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRASDS-ENT-SUBS"
          },
          "licenseText": {
            "description": "JSON string containing a base64 encoded representation of the license JSON as obtained from the NetApp license system. This must be provided in the original byte-level order to allow signature verification.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "ewogICAic3RhdHVzUmVzcCI6ewogMTYwNzAwIgp9"
          },
          "validFromTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T00:00:00.000000Z"
          },
          "validUntilTimestamp": {
            "description": "JSON string containing a timestamp indicating when the license is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2021-08-06T00:00:00.000000Z"
          },
          "product": {
            "description": "JSON string containing the product string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "Astra Control Center"
          },
          "productVersion": {
            "description": "JSON string containing the version string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "1"
          },
          "productSN": {
            "description": "JSON string containing the serial number string extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "320000046"
          },
          "features": {
            "description": "JSON string containing the package value extracted from the license.\nDefined values are:\n* String contents not validated by the schema",
            "type": "string",
            "example": "ASTRA-ENT-STD"
          },
          "capacity": {
            "description": "JSON string containing the capacity extracted from the license.",
            "type": "string",
            "example": "4000"
          },
          "capacity2": {
            "description": "JSON string containing the secondary capacity extracted from the license.",
            "type": "string",
            "example": "0"
          },
          "addons": {
            "description": "JSON array of JSON objects containing the list of add-ons from the license.\nAn add-on is a change in license occurring at a potential future date.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "properties": {
                "startDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on becomes valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "endDate": {
                  "description": "JSON string containing a timestamp indicating when this add-on is no longer valid.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
                  "type": "string",
                  "$ref": "#/components/schemas/type_astra_time"
                },
                "features": {
                  "description": "JSON string containing the list of features associated with this add-on.\nDefined values are:\n* String contents not validated by the schema.",
                  "type": "string"
                },
                "capacity": {
                  "description": "JSON string containing the capacity extracted from the add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                },
                "licenseProtocol": {
                  "description": "JSON string containing the license protocol associated with this add-on.\nDefined values are:\n* String contents not validated by the schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "managedCluster_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "managedState",
          "protectionState",
          "protectionStateDetails",
          "managedStateUnready",
          "managedTimestamp",
          "inUse",
          "clusterType",
          "clusterVersion",
          "clusterVersionString",
          "cloudID",
          "isMultizonal",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-managedCluster\"",
            "type": "string",
            "enum": [
              "application/astra-managedCluster"
            ],
            "example": "application/astra-managedCluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6f2fa469-cdae-54be-a451-d0e94a47fa62"
          },
          "name": {
            "description": "JSON string containing a name for the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster's state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is an eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to the \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in a \"running\" state, is not under management, and is not eligible for management. The reason or reasons for this ineligibility are provided in the unready key's value\n* \"unmanaged\" - The cluster is in a \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in a \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in a \"running\", \"failed\", or \"removed\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "managed"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The cluster's default storage class supports snapshots\n* \"partial\" - The cluster has only storage classes that do not support snapshots\n* \"atRisk\" - The cluster's default storage class does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating whether the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed, or it is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class, as set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not included, it has not yet been discovered.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "e280ff62-be35-4f31-a31b-a210a1ad1b33"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "055e365a-2215-40de-aecb-a4070a7e6f1e"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the locationID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "44A238D4"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) api service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "managedCluster_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/managedCluster_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "managedCluster_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-managedCluster\"",
            "type": "string",
            "enum": [
              "application/astra-managedCluster"
            ],
            "example": "application/astra-managedCluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6f2fa469-cdae-54be-a451-d0e94a47fa62"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class, as set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not included, it has not yet been discovered.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "e280ff62-be35-4f31-a31b-a210a1ad1b33"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "managedCluster_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "state",
          "stateUnready",
          "managedState",
          "protectionState",
          "protectionStateDetails",
          "managedStateUnready",
          "managedTimestamp",
          "inUse",
          "clusterType",
          "clusterVersion",
          "clusterVersionString",
          "cloudID",
          "isMultizonal",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-managedCluster\"",
            "type": "string",
            "enum": [
              "application/astra-managedCluster"
            ],
            "example": "application/astra-managedCluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6f2fa469-cdae-54be-a451-d0e94a47fa62"
          },
          "name": {
            "description": "JSON string containing a name for the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster's state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is an eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to the \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in a \"running\" state, is not under management, and is not eligible for management. The reason or reasons for this ineligibility are provided in the unready key's value\n* \"unmanaged\" - The cluster is in a \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in a \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in a \"running\", \"failed\", or \"removed\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "managed"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The cluster's default storage class supports snapshots\n* \"partial\" - The cluster has only storage classes that do not support snapshots\n* \"atRisk\" - The cluster's default storage class does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating whether the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed, or it is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class, as set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not included, it has not yet been discovered.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "e280ff62-be35-4f31-a31b-a210a1ad1b33"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "055e365a-2215-40de-aecb-a4070a7e6f1e"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the locationID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "44A238D4"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) api service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "managedCluster_1.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-managedCluster\"",
            "type": "string",
            "enum": [
              "application/astra-managedCluster"
            ],
            "example": "application/astra-managedCluster"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6f2fa469-cdae-54be-a451-d0e94a47fa62"
          },
          "name": {
            "description": "JSON string containing a name for the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "GKE-22"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled for discovery\n* \"discovering\" - The cluster is in the process of being discovered\n* \"provisioning\" - The cluster is in the process of being provisioned\n* \"running\" - The cluster is running normally\n* \"failed\" - The cluster is in a permanent failure state\n* \"removed\" - The cluster is not currently accessible\n* \"unknown\" - The cluster's state cannot be determined",
            "type": "string",
            "enum": [
              "pending",
              "discovering",
              "provisioning",
              "running",
              "failed",
              "removed",
              "unknown"
            ],
            "example": "running"
          },
          "restoreTargetSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to be a _target_ of application data management operations.\nDefined values are:\n* \"true\" - Cluster is an eligible target for app data management operations.\n* \"false\" - Cluster is _not_ an eligible target for app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "snapshotSupported": {
            "description": "JSON string containing a value indicating the managed cluster's ability to perform application data management backup-like operations.\nDefined values are:\n* \"true\" - Cluster is an eligible to perform app data management operations.\n* \"false\" - Cluster is _not_ eligible to perform app data management operations.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is unable to transition to \"running\" state, when there are issues while in \"running\" state, or why it has transitioned to the \"failed\" or \"removed\" state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the cluster.\nDefined values are:\n* \"pending\" - The cluster is scheduled to be discovered or added\n* \"ineligible\" - The cluster is in a \"running\" state, is not under management, and is not eligible for management. The reason or reasons for this ineligibility are provided in the unready key's value\n* \"unmanaged\" - The cluster is in a \"running\" or \"failed\" state, is not under management, and is eligible for management\n* \"managing\" - The cluster is in a \"running\" state and is in the process of being managed\n* \"managed\" - The cluster is in a \"running\", \"failed\", or \"removed\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "ineligible",
              "unmanaged",
              "managing",
              "managed"
            ],
            "example": "managed"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the cluster.\nDefined values are:\n* \"full\" - The cluster's default storage class supports snapshots\n* \"partial\" - The cluster has only storage classes that do not support snapshots\n* \"atRisk\" - The cluster's default storage class does not support snapshots",
            "type": "string",
            "enum": [
              "full",
              "partial",
              "atRisk"
            ],
            "example": "full"
          },
          "protectionStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current protection state, including why the current state was reached.\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the cluster is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was brought under management.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis key is only returned when a cluster has a managedState of \"managed\".",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "tridentVersion": {
            "description": "JSON string containing the version of Trident installed on the cluster.\nDefined values are:\n* Conforms to the Software Version Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_swver",
            "example": "21.07.2"
          },
          "tridentManagedState": {
            "description": "JSON string containing one of a set of enumerated values indicating the management state of Trident on this cluster.\nDefined values are:\n* \"managed\" - Trident instance on the cluster is managed by Astra\n* \"unmanaged\" - Trident instance on the cluster is not managed by Astra",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ],
            "example": "managed"
          },
          "tridentManagedStateDesired": {
            "description": "JSON string containing a value indicating the desired management state for Trident.\nDefined values are:\n* \"managed\" - Manage Trident on this cluster\n* \"unmanaged\" - Do not manage Trident on this cluster",
            "type": "string",
            "enum": [
              "managed",
              "unmanaged"
            ]
          },
          "tridentManagedStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned to \"managed\" or \"unmanaged\".  \nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "tridentManagedStateAllowed": {
            "description": "States that can be requested in a given tridentManagedState.\nThe following states can be requested in each defined state:\n* \"managed\": \"managed\"\n* \"unmanaged\": \"unmanaged\"",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "unmanaged"
              ]
            }
          },
          "inUse": {
            "description": "JSON string containing a value indicating whether the cluster has any managed applications and therefore cannot be deleted.\nDefined values are:\n* \"false\" - The cluster is not managed, or it is managed but has no managed applications associated with it\n* \"true\" - The cluster is managed and has managed applications associated with it",
            "type": "string",
            "enum": [
              "false",
              "true"
            ],
            "example": "true"
          },
          "accHost": {
            "description": "JSON string that indicates that this cluster hosts the instance of Astra Control Center that is currently being accessed.\nDefined values are:\n* \"true\" - This cluster is hosting the instance of Astra Control Center that is currently being accessed.",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "clusterType": {
            "description": "JSON string containing a value indicating the type of cluster.\nDefined values are:\n* \"gke\" - Kubernetes hosted on Google Kubernetes Engine\n* \"aks\" - Kubernetes hosted on Microsoft Azure Kubernetes Service\n* \"eks\" - Kubernetes hosted on Amazon Elastic Kubernetes Service\n* \"rke\" - The cluster is of type Rancher\n* \"tanzu\" -The cluster is of type Tanzu Kubernetes Grid\n* \"openshift\" - The cluster is of type OpenShift\n* \"kubernetes\" - The cluster is generic Kubernetes",
            "type": "string",
            "enum": [
              "gke",
              "aks",
              "eks",
              "rke",
              "tanzu",
              "openshift",
              "kubernetes"
            ],
            "example": "kubernetes"
          },
          "clusterVersion": {
            "description": "JSON string containing the semantic versioning representation of the cluster environment.\nFor Kubernetes clusters, this is the Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.91.1"
          },
          "clusterVersionString": {
            "description": "JSON string containing a value indicating the extended versioning information for the cluster environment.\nFor Kubernetes clusters, this is the full Kubernetes version.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "1.19.1"
          },
          "clusterCreationTimestamp": {
            "description": "JSON string containing the timestamp indicating when the cluster was originally created.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "namespaces": {
            "description": "JSON array of JSON strings, each indicating a namespace within the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 253",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 253
            }
          },
          "defaultStorageClass": {
            "description": "JSON string containing a storage class ID that corresponds to the default storage class, as set in Kubernetes.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not included, it has not yet been discovered.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "e280ff62-be35-4f31-a31b-a210a1ad1b33"
          },
          "cloudID": {
            "description": "JSON string containing a value indicating the ID of the cloud the cluster is running on.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cloud",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "548bdc1f-f00e-4a23-a062-83265d224d46"
          },
          "credentialID": {
            "description": "JSON string containing a value indicating the ID of the credential that contains the kubeconfig file for the cluster.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.credential",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "055e365a-2215-40de-aecb-a4070a7e6f1e"
          },
          "location": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating the cloud-specific location of the cluster.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "europe-west4"
          },
          "isMultizonal": {
            "description": "JSON string containing a value provided by the cloud the cluster is running on, indicating whether the cluster spans two or more availability zones.\nDefined values are:\n* \"true\" - The cluster spans two or more availability zones\n* \"false\" - The cluster is wholly located within a single availability zone",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "privateRouteID": {
            "description": "JSON string containing the locationID for private clusters.\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "44A238D4"
          },
          "apiServiceID": {
            "description": "JSON string containing the UUID from the Kubernetes (k8s) api service object. Used to uniquely identify a cluster.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "6bf33af2-872a-4553-a891-26b510c3edbe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "namespace_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "links",
          "name",
          "namespaceState",
          "namespaceStateDetails",
          "clusterID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-namespace\"",
            "type": "string",
            "enum": [
              "application/astra-namespace"
            ],
            "example": "application/astra-namespace"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "2de811a6-ce8f-512c-9c3a-9585ca66de22"
          },
          "links": {
            "description": "Links describing supported operations against the resource.",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_links"
          },
          "name": {
            "description": "JSON string containing a value indicating the name of the namespace.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "kube-system"
          },
          "namespaceState": {
            "description": "JSON string containing a value indicating the state of the namespace.\nDefined values are:\n* \"discovered\" - The namespace has been found in the cluster\n* \"removed\" - The namespace has been deleted from the cluster, or the cluster is not managed but there might be resources referring to the namespace",
            "type": "string",
            "enum": [
              "discovered",
              "removed"
            ],
            "example": "discovered"
          },
          "namespaceStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about why \"state\" transitioned into \"state a\", \"state b\", or \"state c\".\nIf no details are available, this array will be empty.\nDefined values are:\n* Minimum items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "kubernetesLabels": {
            "description": "JSON array of JSON objects, each containing a Kubernetes label associated with the namespace.\nDefined values are:\n* Conforms to the Kubernetes Label Array Schema",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_labels"
          },
          "clusterID": {
            "description": "JSON string containing a globally unique identifier of the cluster that the namespace is contained in.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.cluster",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "0f284377-e5dc-4dcd-bacd-3197f2b8a347"
          },
          "systemType": {
            "description": "JSON string that denotes that the namespace is a type of system namespace. This field identifies what type of system namespace, if any, the namespace is (version 1.1 only).\nDefined values are:\n* \"kubernetes\" - A generic Kubernetes (K8s) system namespace, for example, \"kube-system\"\n* \"netapp\" - A NetApp system namespace, for example, \"trident\" or \"netapp-monitoring\"\n* \"openshift\" - An OpenShift system namespace, for example, \"openshift-monitoring\"\n* \"rke\" - A Rancher namespace, for example, \"cattle-logging\"\n* \"other\" - Common system namespaces that don't necessarily fit elsewhere, for example, \"ingress-nginx\", \"tekton-system\"",
            "type": "string",
            "enum": [
              "kubernetes",
              "netapp",
              "openshift",
              "rke",
              "other"
            ],
            "example": "kubernetes"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "namespace_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/namespace_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "notification_1.3_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "sequenceCount",
          "summary",
          "eventTime",
          "source",
          "resourceID",
          "additionalResourceIDs",
          "resourceType",
          "correlationID",
          "severity",
          "class",
          "description",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-notification\"",
            "type": "string",
            "enum": [
              "application/astra-notification"
            ],
            "example": "application/astra-notification"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "03c645d6-75f0-59b0-95f2-862ae344ea27"
          },
          "name": {
            "description": "JSON string containing a dot notation (.) hierarchical name for the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 127\n* Defined regex is: \"^(([a-z])*(\\\\.))*([a-z])+$\"",
            "type": "string",
            "pattern": "^([a-z]+\\.)+[a-z]+$",
            "minLength": 3,
            "maxLength": 127,
            "example": "astra.app.discovery.failed"
          },
          "sequenceCount": {
            "description": "JSON number containing a sequence count.\nThe number is incremented by the system each time a new event is received.",
            "type": "number",
            "example": 48923
          },
          "summary": {
            "description": "JSON string containing the short-form (less than 40 characters) summary of the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 79",
            "type": "string",
            "minLength": 3,
            "maxLength": 79,
            "example": "Application Discovery Failed"
          },
          "eventTime": {
            "description": "JSON string containing a timestamp that indicates when an event occurred.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:51.846543Z"
          },
          "source": {
            "description": "JSON string containing the lowercase name of the service generating an event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 19\n* Defined regex is: \"^([a-z-])*$\"",
            "type": "string",
            "pattern": "^([a-z-])*$",
            "minLength": 1,
            "maxLength": 19,
            "example": "composite-compute"
          },
          "resourceID": {
            "description": "JSON string containing the resource ID associated with an event.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f670bf11-8850-44bd-b330-815af6186a06"
          },
          "additionalResourceIDs": {
            "description": "JSON array of JSON strings, each containing a resource ID of an additional resource associated with the event. Although the \"resourceID\" field contains the primary resource associated with this event, this field contains any number of additional resource IDs to be associated with the same events.\nIf no additional resources are associated with the event, the array will be empty.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          "resourceType": {
            "description": "JSON string containing the media type of the resource associated with an event.\nDefined values are:\n* Minimum length: 4\n* Maximum length: 79\n* Defined regex is: \"^application\\/astra-([a-zA-Z])+$\"",
            "type": "string",
            "pattern": "^application\\/astra-([a-zA-Z])+$",
            "minLength": 4,
            "maxLength": 79,
            "example": "application/astra-app"
          },
          "correlationID": {
            "description": "JSON string containing a UUIDv4 correlation ID that allows related events to be grouped together.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "3c603442-cfca-4af9-9f1b-40dde5c7a806"
          },
          "severity": {
            "description": "JSON string containing one of the following values that indicate the severity of an event.\nDefined values are:\n* \"cleared\" - Indicates that a previously reported event describing a condition is no longer active. An event with severity \"cleared\" will use the same summary and correlation ID to allow it to be matched up.\n* \"indeterminate\" - Indicates that the severity cannot be determined.\n* \"informational\" - Indicates a change in state that is both expected and normal (not defined in X.733).\n* \"warning\" - Indicates the detection of a potential or impending service affecting fault, before any significant effects have been felt.\n* \"critical\" - Indicates that a service affecting condition has occurred and immediate corrective action is required.\nDefinitions for \"cleared\", \"indeterminate\", \"warning\" and \"critical\" are based on definitions in clause 8.1.2.3 of CCITT X.733.",
            "type": "string",
            "enum": [
              "cleared",
              "indeterminate",
              "informational",
              "warning",
              "critical"
            ],
            "example": "warning"
          },
          "class": {
            "description": "JSON string containing one of the following values that indicate the class of the event.\nDefined values are:\n* \"system\" - The event is related to an internal event or request.\n* \"user\" - The event is related to a user-initiated event or request.\n* \"security\" - The event is related to a security issue.",
            "type": "string",
            "enum": [
              "system",
              "user",
              "security"
            ],
            "example": "user"
          },
          "description": {
            "description": "JSON string containing a long-form descriptive text about the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 1023",
            "type": "string",
            "minLength": 3,
            "maxLength": 1023,
            "example": "Discovering the application 'mysql' was unsuccessful. K8s error 442. Application marked in state 'error'."
          },
          "descriptionURL": {
            "description": "JSON string containing the URL that enables and links a button in the banner to external documentation.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://www.astra.io/events/12432"
          },
          "correctiveAction": {
            "description": "JSON string containing a long-form descriptive text about what corrective action should be taken in response to the event.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 1023",
            "type": "string",
            "minLength": 3,
            "maxLength": 1023,
            "example": "Perform this operation via kubectl..."
          },
          "correctiveActionURL": {
            "description": "JSON string containing the URL that links a button in the banner to a page within the UI to fix the issue.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://www.astra.io/events/12432#actions"
          },
          "visibility": {
            "description": "JSON array of JSON strings, each indicating an RBAC role permitted to view the event. Roles are OR-defined together. Optional.\nIf omitted, a user with any RBAC role can view the event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 63
            }
          },
          "destinations": {
            "description": "JSON array of JSON strings, each indicating an additional destination for the event. These allow a service to provide hints about where an event must be routed in addition to the Activity service's activity log. Optional.\nDefined values are:\n* \"notification\" - The event is marked as a notification, and will be accessible through the notifications API endpoint.\n* \"banner\" - The event is marked as a banner.\n* \"support\" - The event is marked as a support-related event.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "notification",
                "banner",
                "support"
              ]
            }
          },
          "resourceURI": {
            "description": "JSON string containing the URI associated with the event. Only included for events related to API operations.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/topology/v1/managedClusters/dfd9de2d-6f0b-437b-a737-c8f7f176cd14/apps/f670bf11-8850-44bd-b330-815af6186a06"
          },
          "resourceCollectionURL": {
            "description": "JSON array of JSON strings, each indicating the fully-expanded access URL of the resource associated with the event.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1023
            }
          },
          "resourceMethod": {
            "description": "JSON string containing the HTTP method invoked. Included only for events related to API operations.\nDefined values are:\n* \"options\" - OPTIONS API operation\n* \"post\" - POST API operation\n* \"get\" - GET API operation\n* \"put\" - PUT API operation\n* \"delete\" - DELETE API operation",
            "type": "string",
            "enum": [
              "options",
              "post",
              "get",
              "put",
              "delete"
            ]
          },
          "resourceMethodResult": {
            "description": "JSON string containing the result of the HTTP method invoked. Only included for events related to the API operations.\nDefined values are:\n* Defined regex is: \"^[1-5][0-9]{2}$\"",
            "type": "string",
            "pattern": "^[1-5][0-9]{2}$"
          },
          "userID": {
            "description": "JSON string containing the user ID associated with an event. Only included for events associated with the user-initiated actions.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "abda967f-cd2c-4237-908e-99266648c553"
          },
          "accountID": {
            "description": "JSON string containing the account ID associated with an event. Only included for events associated with an account.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "f126d214-bccf-4558-86b4-2137a41e734f"
          },
          "data": {
            "description": "JSON object containing additional event-specific information.",
            "type": "object",
            "properties": {
              "ttl": {
                "description": "JSON number indicating the number of seconds (since the eventTime) that the event will be retained.\nThis field is only included when an event is automatically deleted after the specified number of seconds.\nWhen deleted, if the event has a notification destination, all associated notifications are also deleted.\nWhen deleted, if the event has a banner destination, the banner is also removed.\nThe absence of this field (or a value of \"0\") means that an event will not be automatically deleted.",
                "type": "number"
              },
              "isAcknowledgeable": {
                "description": "JSON string indicating whether the banner is dismissible.\nDefined values are:\n* \"true\" - The banner is dismissible\n* \"false\" - The banner is not dismissible",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ]
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "notification_1.3_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/notification_1.3_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "package_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "packageName",
          "packageVersion",
          "packageType",
          "severityLevel",
          "packageState",
          "packageStateTransitions",
          "packageStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-package\"",
            "type": "string",
            "enum": [
              "application/astra-package"
            ],
            "example": "application/astra-package"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "54edc2b3-18c5-5371-904b-ebcd04d88bdc"
          },
          "packageName": {
            "description": "JSON string containing the package name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31\nExample values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"",
            "type": "string",
            "enum": [
              "acc",
              "acs",
              "trident"
            ],
            "minLength": 1,
            "maxLength": 31,
            "example": "acc"
          },
          "packageVersion": {
            "description": "JSON string containing the SemVer of the package.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "22.04.55"
          },
          "packageType": {
            "description": "JSON string containing the package type, indicating whether this is a full installation package or a patch.\nDefined values are:\n* \"install\"\n* \"patch\"",
            "type": "string",
            "enum": [
              "install",
              "patch"
            ],
            "example": "install"
          },
          "bundleName": {
            "description": "JSON array of JSON strings containing the name of the bundle that the package is contained in.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "severityLevel": {
            "description": "JSON string describing the severity level of this patch or installation.\nDefined values are:\n* \"recommended\" - Installation is recommended - Default value\n* \"critical\" - Installation is strongly recommended to address critical bug fixes and/or security patches",
            "type": "string",
            "enum": [
              "recommended",
              "critical"
            ],
            "example": "recommended"
          },
          "packageState": {
            "description": "JSON string containing a value indicating the operational state of the package.\nAfter verification of the package and after import, the state will indicate \"complete\". Otherwise, the state will indicate \"incomplete\".\nDefined values are:\n* \"verifying\" - The package is in the process of being validated\n* \"corrupt\" - The package is corrupt\n* \"incomplete\" - The package is missing elements\n* \"available\" - All elements associated with the package are available and the package is ready for use",
            "type": "string",
            "enum": [
              "verifying",
              "corrupt",
              "incomplete",
              "available"
            ],
            "example": "available"
          },
          "packageStateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state and the \"to\" value is an array of permitted destination states.\nDefined values are:\n* Conforms to the State Transition Schema",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "packageStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current \"state\".\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "images": {
            "description": "JSON array of JSON objects, each containing a Docker image that is part of the package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "imageName",
                "imagePath",
                "imageTag",
                "imageDigest"
              ],
              "properties": {
                "imageName": {
                  "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "imagePath": {
                  "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "imageTag": {
                  "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "imageDigest": {
                  "description": "JSON string representing the digest of this image.\nDefined values are:\n* Defined regex is: \"^(sha256:)[0-9a-f]{64}$\"",
                  "type": "string",
                  "pattern": "^(sha256:)[0-9a-f]{64}$"
                },
                "dependsOnImages": {
                  "description": "JSON array of JSON objects describing the images required to install or upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "imagePath",
                      "imageName",
                      "imageTag"
                    ],
                    "properties": {
                      "imagePath": {
                        "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1023
                      },
                      "imageName": {
                        "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 63
                      },
                      "imageTag": {
                        "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 31
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "artifacts": {
            "description": "JSON array of JSON objects describing the additional artifacts (binaries and others) associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "artifactName",
                "artifactIdentifier",
                "artifactPath"
              ],
              "properties": {
                "artifactName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "artifactIdentifier": {
                  "description": "JSON string containing an identifier for this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "artifactPath": {
                  "description": "JSON string containing the path to this artifact from the root of a known Astra Control Center Data Store/location.\n        Example: /vmware/1.0/\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "artifactVersion": {
                  "description": "JSON string containing the version of that artifact, if provided.\nDefined values are:\n* Conforms to the SemVer Schema\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "dependsOnComponents": {
                  "description": "JSON array of JSON objects describing the installed components required to install/upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "componentName",
                      "versions"
                    ],
                    "properties": {
                      "componentName": {
                        "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                        "type": "string",
                        "enum": [
                          "acc",
                          "acs",
                          "trident",
                          "kubernetes"
                        ]
                      },
                      "versions": {
                        "description": "JSON array of JSON strings defining the component version required to install the current image.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "files": {
            "description": "JSON array of JSON objects, each representing a non-image artifact associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "fileName",
                "fileIdentifier",
                "fileMediaType",
                "fileContents"
              ],
              "properties": {
                "fileName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "fileIdentifier": {
                  "description": "JSON string containing an identifier of this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "fileMediaType": {
                  "description": "JSON string containing the file media-type.\nDefined values are any media type defined by [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).\nIn addition, application/x-yaml or application/x-yaml for yaml files is supported.\n* Minimum length: 1\n* Maximum length: 211",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 211
                },
                "fileContents": {
                  "description": "JSON string containing the file content.\nDefined values are:\n* Conforms to the Base64 Schema\nFIXME - How do we specify that this is compressed? What algorithm ,etc?",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "upgradableVersions": {
            "description": "JSON object containing the minimum and maximum versions that can be upgraded to the package version.",
            "type": "object",
            "properties": {
              "minVersion": {
                "description": "JSON string describing the minimum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              },
              "maxVersion": {
                "description": "JSON string describing the maximum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "dependencies": {
            "description": "JSON array of JSON objects describing what minimum version of a given dependency is required for this package to be installed",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "componentName"
              ],
              "properties": {
                "componentName": {
                  "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                  "type": "string",
                  "enum": [
                    "acc",
                    "acs",
                    "trident",
                    "kubernetes"
                  ]
                },
                "componentMinVersion": {
                  "description": "JSON string describing the minimum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                },
                "componentMaxVersion": {
                  "description": "JSON string describing the maximum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "package_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/package_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "package_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "packageName",
          "packageVersion",
          "packageType",
          "severityLevel"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-package\"",
            "type": "string",
            "enum": [
              "application/astra-package"
            ],
            "example": "application/astra-package"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "packageName": {
            "description": "JSON string containing the package name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31\nExample values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"",
            "type": "string",
            "enum": [
              "acc",
              "acs",
              "trident"
            ],
            "minLength": 1,
            "maxLength": 31,
            "example": "acc"
          },
          "packageVersion": {
            "description": "JSON string containing the SemVer of the package.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "22.04.55"
          },
          "packageType": {
            "description": "JSON string containing the package type, indicating whether this is a full installation package or a patch.\nDefined values are:\n* \"install\"\n* \"patch\"",
            "type": "string",
            "enum": [
              "install",
              "patch"
            ],
            "example": "install"
          },
          "bundleName": {
            "description": "JSON array of JSON strings containing the name of the bundle that the package is contained in.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "severityLevel": {
            "description": "JSON string describing the severity level of this patch or installation.\nDefined values are:\n* \"recommended\" - Installation is recommended - Default value\n* \"critical\" - Installation is strongly recommended to address critical bug fixes and/or security patches",
            "type": "string",
            "enum": [
              "recommended",
              "critical"
            ],
            "example": "recommended"
          },
          "images": {
            "description": "JSON array of JSON objects, each containing a Docker image that is part of the package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "imageName",
                "imagePath",
                "imageTag",
                "imageDigest"
              ],
              "properties": {
                "imageName": {
                  "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "imagePath": {
                  "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "imageTag": {
                  "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "imageDigest": {
                  "description": "JSON string representing the digest of this image.\nDefined values are:\n* Defined regex is: \"^(sha256:)[0-9a-f]{64}$\"",
                  "type": "string",
                  "pattern": "^(sha256:)[0-9a-f]{64}$"
                },
                "dependsOnImages": {
                  "description": "JSON array of JSON objects describing the images required to install or upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "imagePath",
                      "imageName",
                      "imageTag"
                    ],
                    "properties": {
                      "imagePath": {
                        "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1023
                      },
                      "imageName": {
                        "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 63
                      },
                      "imageTag": {
                        "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 31
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "artifacts": {
            "description": "JSON array of JSON objects describing the additional artifacts (binaries and others) associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "artifactName",
                "artifactIdentifier",
                "artifactPath"
              ],
              "properties": {
                "artifactName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "artifactIdentifier": {
                  "description": "JSON string containing an identifier for this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "artifactPath": {
                  "description": "JSON string containing the path to this artifact from the root of a known Astra Control Center Data Store/location.\n        Example: /vmware/1.0/\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "artifactVersion": {
                  "description": "JSON string containing the version of that artifact, if provided.\nDefined values are:\n* Conforms to the SemVer Schema\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "dependsOnComponents": {
                  "description": "JSON array of JSON objects describing the installed components required to install/upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "componentName",
                      "versions"
                    ],
                    "properties": {
                      "componentName": {
                        "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                        "type": "string",
                        "enum": [
                          "acc",
                          "acs",
                          "trident",
                          "kubernetes"
                        ]
                      },
                      "versions": {
                        "description": "JSON array of JSON strings defining the component version required to install the current image.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "files": {
            "description": "JSON array of JSON objects, each representing a non-image artifact associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "fileName",
                "fileIdentifier",
                "fileMediaType",
                "fileContents"
              ],
              "properties": {
                "fileName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "fileIdentifier": {
                  "description": "JSON string containing an identifier of this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "fileMediaType": {
                  "description": "JSON string containing the file media-type.\nDefined values are any media type defined by [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).\nIn addition, application/x-yaml or application/x-yaml for yaml files is supported.\n* Minimum length: 1\n* Maximum length: 211",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 211
                },
                "fileContents": {
                  "description": "JSON string containing the file content.\nDefined values are:\n* Conforms to the Base64 Schema\nFIXME - How do we specify that this is compressed? What algorithm ,etc?",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "upgradableVersions": {
            "description": "JSON object containing the minimum and maximum versions that can be upgraded to the package version.",
            "type": "object",
            "properties": {
              "minVersion": {
                "description": "JSON string describing the minimum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              },
              "maxVersion": {
                "description": "JSON string describing the maximum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "dependencies": {
            "description": "JSON array of JSON objects describing what minimum version of a given dependency is required for this package to be installed",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "componentName"
              ],
              "properties": {
                "componentName": {
                  "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                  "type": "string",
                  "enum": [
                    "acc",
                    "acs",
                    "trident",
                    "kubernetes"
                  ]
                },
                "componentMinVersion": {
                  "description": "JSON string describing the minimum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                },
                "componentMaxVersion": {
                  "description": "JSON string describing the maximum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "package_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "packageName",
          "packageVersion",
          "packageType",
          "severityLevel",
          "packageState",
          "packageStateTransitions",
          "packageStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-package\"",
            "type": "string",
            "enum": [
              "application/astra-package"
            ],
            "example": "application/astra-package"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "54edc2b3-18c5-5371-904b-ebcd04d88bdc"
          },
          "packageName": {
            "description": "JSON string containing the package name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31\nExample values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"",
            "type": "string",
            "enum": [
              "acc",
              "acs",
              "trident"
            ],
            "minLength": 1,
            "maxLength": 31,
            "example": "acc"
          },
          "packageVersion": {
            "description": "JSON string containing the SemVer of the package.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "22.04.55"
          },
          "packageType": {
            "description": "JSON string containing the package type, indicating whether this is a full installation package or a patch.\nDefined values are:\n* \"install\"\n* \"patch\"",
            "type": "string",
            "enum": [
              "install",
              "patch"
            ],
            "example": "install"
          },
          "bundleName": {
            "description": "JSON array of JSON strings containing the name of the bundle that the package is contained in.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "severityLevel": {
            "description": "JSON string describing the severity level of this patch or installation.\nDefined values are:\n* \"recommended\" - Installation is recommended - Default value\n* \"critical\" - Installation is strongly recommended to address critical bug fixes and/or security patches",
            "type": "string",
            "enum": [
              "recommended",
              "critical"
            ],
            "example": "recommended"
          },
          "packageState": {
            "description": "JSON string containing a value indicating the operational state of the package.\nAfter verification of the package and after import, the state will indicate \"complete\". Otherwise, the state will indicate \"incomplete\".\nDefined values are:\n* \"verifying\" - The package is in the process of being validated\n* \"corrupt\" - The package is corrupt\n* \"incomplete\" - The package is missing elements\n* \"available\" - All elements associated with the package are available and the package is ready for use",
            "type": "string",
            "enum": [
              "verifying",
              "corrupt",
              "incomplete",
              "available"
            ],
            "example": "available"
          },
          "packageStateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state and the \"to\" value is an array of permitted destination states.\nDefined values are:\n* Conforms to the State Transition Schema",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "packageStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current \"state\".\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "images": {
            "description": "JSON array of JSON objects, each containing a Docker image that is part of the package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "imageName",
                "imagePath",
                "imageTag",
                "imageDigest"
              ],
              "properties": {
                "imageName": {
                  "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "imagePath": {
                  "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "imageTag": {
                  "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "imageDigest": {
                  "description": "JSON string representing the digest of this image.\nDefined values are:\n* Defined regex is: \"^(sha256:)[0-9a-f]{64}$\"",
                  "type": "string",
                  "pattern": "^(sha256:)[0-9a-f]{64}$"
                },
                "dependsOnImages": {
                  "description": "JSON array of JSON objects describing the images required to install or upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "imagePath",
                      "imageName",
                      "imageTag"
                    ],
                    "properties": {
                      "imagePath": {
                        "description": "JSON string containing the path to this Docker image. It must not contain the name of the registry, only the absolute path from root to image.\n        Example: /globalcicd/acc\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1023
                      },
                      "imageName": {
                        "description": "JSON string containing the Docker image name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 63
                      },
                      "imageTag": {
                        "description": "JSON string representing the tag/version of this image.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 31
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "artifacts": {
            "description": "JSON array of JSON objects describing the additional artifacts (binaries and others) associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "artifactName",
                "artifactIdentifier",
                "artifactPath"
              ],
              "properties": {
                "artifactName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "artifactIdentifier": {
                  "description": "JSON string containing an identifier for this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "artifactPath": {
                  "description": "JSON string containing the path to this artifact from the root of a known Astra Control Center Data Store/location.\n        Example: /vmware/1.0/\nDefined values are:\n* Minimum length: 1\n* Maximum length: 1023",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 1023
                },
                "artifactVersion": {
                  "description": "JSON string containing the version of that artifact, if provided.\nDefined values are:\n* Conforms to the SemVer Schema\n* Minimum length: 1\n* Maximum length: 31",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 31
                },
                "dependsOnComponents": {
                  "description": "JSON array of JSON objects describing the installed components required to install/upgrade the current image.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "object",
                    "required": [
                      "componentName",
                      "versions"
                    ],
                    "properties": {
                      "componentName": {
                        "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                        "type": "string",
                        "enum": [
                          "acc",
                          "acs",
                          "trident",
                          "kubernetes"
                        ]
                      },
                      "versions": {
                        "description": "JSON array of JSON strings defining the component version required to install the current image.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "files": {
            "description": "JSON array of JSON objects, each representing a non-image artifact associated with this package.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "fileName",
                "fileIdentifier",
                "fileMediaType",
                "fileContents"
              ],
              "properties": {
                "fileName": {
                  "description": "JSON string containing the file name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63
                },
                "fileIdentifier": {
                  "description": "JSON string containing an identifier of this file. Between versions of the same package type, the file name might change but the identifier usually stays the same.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 511
                },
                "fileMediaType": {
                  "description": "JSON string containing the file media-type.\nDefined values are any media type defined by [IANA](https://www.iana.org/assignments/media-types/media-types.xhtml).\nIn addition, application/x-yaml or application/x-yaml for yaml files is supported.\n* Minimum length: 1\n* Maximum length: 211",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 211
                },
                "fileContents": {
                  "description": "JSON string containing the file content.\nDefined values are:\n* Conforms to the Base64 Schema\nFIXME - How do we specify that this is compressed? What algorithm ,etc?",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "upgradableVersions": {
            "description": "JSON object containing the minimum and maximum versions that can be upgraded to the package version.",
            "type": "object",
            "properties": {
              "minVersion": {
                "description": "JSON string describing the minimum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              },
              "maxVersion": {
                "description": "JSON string describing the maximum version that can be upgraded to the package version.\nDefined values are:\n* Conforms to the SemVer Schema",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "dependencies": {
            "description": "JSON array of JSON objects describing what minimum version of a given dependency is required for this package to be installed",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "required": [
                "componentName"
              ],
              "properties": {
                "componentName": {
                  "description": "JSON string describing the name of the component.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
                  "type": "string",
                  "enum": [
                    "acc",
                    "acs",
                    "trident",
                    "kubernetes"
                  ]
                },
                "componentMinVersion": {
                  "description": "JSON string describing the minimum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                },
                "componentMaxVersion": {
                  "description": "JSON string describing the maximum version required of that component.\nDefined values are:\n* Conforms to the SemVer Schema",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "roleBinding_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "principalType",
          "userID",
          "groupID",
          "accountID",
          "role",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-roleBinding\"",
            "type": "string",
            "enum": [
              "application/astra-roleBinding"
            ],
            "example": "application/astra-roleBinding"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a198f052-5cd7-59d3-9f27-9ea32a21fbca"
          },
          "principalType": {
            "description": "JSON string representing the type of the principal this binding is associated with.\nDefined values are:\n* \"user\"\n* \"group\"\nFor principalType \"user\", a non-nil user ID is required.\nFor principalType \"group\", a non-nil group ID is required.",
            "type": "string",
            "enum": [
              "user",
              "group"
            ],
            "example": "user"
          },
          "userID": {
            "description": "JSON string containing a user resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4c27d25a-9edb-4e85-9438-48dc8e917231"
          },
          "groupID": {
            "description": "JSON string containing a group resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.group",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "accountID": {
            "description": "JSON string containing the ID of an account resource.\nFor create, this must match the account ID in the request URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9fd87309-067f-48c9-a331-527796c14cf3"
          },
          "role": {
            "description": "JSON string containing one of the four defined roles.\nDefined values are:\n* \"viewer\"\n* \"member\"\n* \"admin\"\n* \"owner\"",
            "type": "string",
            "enum": [
              "viewer",
              "member",
              "admin",
              "owner"
            ],
            "example": "viewer"
          },
          "roleConstraints": {
            "description": "JSON array of JSON strings specifying the scope of the role assignment.\nDefined values are:\n* Conforms to Astra Role Constraints Schema\nIf not specified on create, the value will be set to an array of size 1 containing string \"*\" representing \"full scope\".\nIf not specified on update, the value will be preserved without modification.\nAn empty array represents \"no scope\".\nExamples:\n* # Allow access to any resource:   \"roleConstraints\": [\"*\"]\n* # deny access to all resources:   \"roleConstraints\": []\n* # Allow access to a specific namespace resource only:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'\" ]\n* # Allow access to a specific namespace and everything under it:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'.*\" ]\n* # Allow access to all namespaces labelled \"dev\" in any cluster in any cloud, and everything under them:   \"roleConstraints\": [ \"namespaces:kubernetesLabels='[dev.example.com/appname=dev'.*](http://dev.example.com/appname=dev)\" ]\n* # Allow access to all namespace resources only:   \"roleConstraints\": [ \"namespaces:*\" ]\n* # Allow access to all namespace resources and everything under them:   \"roleConstraints\": [ \"namespaces:*.*\" ]",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "roleBinding_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/roleBinding_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "roleBinding_1.1_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "accountID",
          "role"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-roleBinding\"",
            "type": "string",
            "enum": [
              "application/astra-roleBinding"
            ],
            "example": "application/astra-roleBinding"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "userID": {
            "description": "JSON string containing a user resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4c27d25a-9edb-4e85-9438-48dc8e917231"
          },
          "groupID": {
            "description": "JSON string containing a group resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.group",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "accountID": {
            "description": "JSON string containing the ID of an account resource.\nFor create, this must match the account ID in the request URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9fd87309-067f-48c9-a331-527796c14cf3"
          },
          "role": {
            "description": "JSON string containing one of the four defined roles.\nDefined values are:\n* \"viewer\"\n* \"member\"\n* \"admin\"\n* \"owner\"",
            "type": "string",
            "enum": [
              "viewer",
              "member",
              "admin",
              "owner"
            ],
            "example": "viewer"
          },
          "roleConstraints": {
            "description": "JSON array of JSON strings specifying the scope of the role assignment.\nDefined values are:\n* Conforms to Astra Role Constraints Schema\nIf not specified on create, the value will be set to an array of size 1 containing string \"*\" representing \"full scope\".\nIf not specified on update, the value will be preserved without modification.\nAn empty array represents \"no scope\".\nExamples:\n* # Allow access to any resource:   \"roleConstraints\": [\"*\"]\n* # deny access to all resources:   \"roleConstraints\": []\n* # Allow access to a specific namespace resource only:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'\" ]\n* # Allow access to a specific namespace and everything under it:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'.*\" ]\n* # Allow access to all namespaces labelled \"dev\" in any cluster in any cloud, and everything under them:   \"roleConstraints\": [ \"namespaces:kubernetesLabels='[dev.example.com/appname=dev'.*](http://dev.example.com/appname=dev)\" ]\n* # Allow access to all namespace resources only:   \"roleConstraints\": [ \"namespaces:*\" ]\n* # Allow access to all namespace resources and everything under them:   \"roleConstraints\": [ \"namespaces:*.*\" ]",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "roleBinding_1.1_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "principalType",
          "userID",
          "groupID",
          "accountID",
          "role",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-roleBinding\"",
            "type": "string",
            "enum": [
              "application/astra-roleBinding"
            ],
            "example": "application/astra-roleBinding"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a198f052-5cd7-59d3-9f27-9ea32a21fbca"
          },
          "principalType": {
            "description": "JSON string representing the type of the principal this binding is associated with.\nDefined values are:\n* \"user\"\n* \"group\"\nFor principalType \"user\", a non-nil user ID is required.\nFor principalType \"group\", a non-nil group ID is required.",
            "type": "string",
            "enum": [
              "user",
              "group"
            ],
            "example": "user"
          },
          "userID": {
            "description": "JSON string containing a user resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4c27d25a-9edb-4e85-9438-48dc8e917231"
          },
          "groupID": {
            "description": "JSON string containing a group resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.group",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "accountID": {
            "description": "JSON string containing the ID of an account resource.\nFor create, this must match the account ID in the request URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9fd87309-067f-48c9-a331-527796c14cf3"
          },
          "role": {
            "description": "JSON string containing one of the four defined roles.\nDefined values are:\n* \"viewer\"\n* \"member\"\n* \"admin\"\n* \"owner\"",
            "type": "string",
            "enum": [
              "viewer",
              "member",
              "admin",
              "owner"
            ],
            "example": "viewer"
          },
          "roleConstraints": {
            "description": "JSON array of JSON strings specifying the scope of the role assignment.\nDefined values are:\n* Conforms to Astra Role Constraints Schema\nIf not specified on create, the value will be set to an array of size 1 containing string \"*\" representing \"full scope\".\nIf not specified on update, the value will be preserved without modification.\nAn empty array represents \"no scope\".\nExamples:\n* # Allow access to any resource:   \"roleConstraints\": [\"*\"]\n* # deny access to all resources:   \"roleConstraints\": []\n* # Allow access to a specific namespace resource only:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'\" ]\n* # Allow access to a specific namespace and everything under it:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'.*\" ]\n* # Allow access to all namespaces labelled \"dev\" in any cluster in any cloud, and everything under them:   \"roleConstraints\": [ \"namespaces:kubernetesLabels='[dev.example.com/appname=dev'.*](http://dev.example.com/appname=dev)\" ]\n* # Allow access to all namespace resources only:   \"roleConstraints\": [ \"namespaces:*\" ]\n* # Allow access to all namespace resources and everything under them:   \"roleConstraints\": [ \"namespaces:*.*\" ]",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "roleBinding_1.1_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "role"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-roleBinding\"",
            "type": "string",
            "enum": [
              "application/astra-roleBinding"
            ],
            "example": "application/astra-roleBinding"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "a198f052-5cd7-59d3-9f27-9ea32a21fbca"
          },
          "userID": {
            "description": "JSON string containing a user resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4c27d25a-9edb-4e85-9438-48dc8e917231"
          },
          "groupID": {
            "description": "JSON string containing a group resource ID.\nDefined values are:\n* Conforms to the Astra Identifier Schema\nIf not specified on create, a nil UUID will be used.\nOnly userID or groupID can be specified on create.",
            "type": "application/vnd.netapp.astra.group",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "accountID": {
            "description": "JSON string containing the ID of an account resource.\nFor create, this must match the account ID in the request URI.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.account",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9fd87309-067f-48c9-a331-527796c14cf3"
          },
          "role": {
            "description": "JSON string containing one of the four defined roles.\nDefined values are:\n* \"viewer\"\n* \"member\"\n* \"admin\"\n* \"owner\"",
            "type": "string",
            "enum": [
              "viewer",
              "member",
              "admin",
              "owner"
            ],
            "example": "viewer"
          },
          "roleConstraints": {
            "description": "JSON array of JSON strings specifying the scope of the role assignment.\nDefined values are:\n* Conforms to Astra Role Constraints Schema\nIf not specified on create, the value will be set to an array of size 1 containing string \"*\" representing \"full scope\".\nIf not specified on update, the value will be preserved without modification.\nAn empty array represents \"no scope\".\nExamples:\n* # Allow access to any resource:   \"roleConstraints\": [\"*\"]\n* # deny access to all resources:   \"roleConstraints\": []\n* # Allow access to a specific namespace resource only:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'\" ]\n* # Allow access to a specific namespace and everything under it:   \"roleConstraints\": [ \"namespaces:id='6fa2f917-f730-41b8-9c15-17f531843b31'.*\" ]\n* # Allow access to all namespaces labelled \"dev\" in any cluster in any cloud, and everything under them:   \"roleConstraints\": [ \"namespaces:kubernetesLabels='[dev.example.com/appname=dev'.*](http://dev.example.com/appname=dev)\" ]\n* # Allow access to all namespace resources only:   \"roleConstraints\": [ \"namespaces:*\" ]\n* # Allow access to all namespace resources and everything under them:   \"roleConstraints\": [ \"namespaces:*.*\" ]",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "schedule_1.3_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "enabled",
          "granularity",
          "minute",
          "snapshotRetention",
          "backupRetention",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-schedule\"",
            "type": "string",
            "enum": [
              "application/astra-schedule"
            ],
            "example": "application/astra-schedule"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "49cbc480-5f7d-51e2-8f30-52b9a83a03b1"
          },
          "name": {
            "description": "JSON string containing a name of the schedule.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Backup Schedule"
          },
          "enabled": {
            "description": "JSON string indicating if a schedule is active.\nDefined values are:\n* \"true\" - The schedule is active\n* \"false\" - The schedule is not active\nIf not specified, the default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "granularity": {
            "description": "JSON string indicating the granularity of the schedule.\nDefined values are:\n* \"hourly\"\n* \"daily\"\n* \"weekly\"\n* \"monthly\"\n* \"custom\"",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "custom"
            ],
            "example": "monthly"
          },
          "minute": {
            "description": "JSON string containing a numeric value indicating the minute of the hour (0 - 59) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1-5][0-9]$\"\nThis field is present if granularity is set to \"hourly\", \"daily\", \"weekly\", or \"monthly\". It will be returned with value \"0\" for custom schedules.",
            "type": "string",
            "pattern": "^[0-9]|[1-5][0-9]$",
            "example": "0"
          },
          "hour": {
            "description": "JSON string containing a numeric value indicating the hour of the day (0 - 23) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1][0-9]|[2][0-3]$\"\nThis field is present if granularity is set to \"daily\", \"weekly\", or \"monthly\".",
            "type": "string",
            "pattern": "^[0-9]|[1][0-9]|[2][0-3]$",
            "example": "0"
          },
          "dayOfWeek": {
            "description": "JSON string containing a numeric value indicating the day of the week (0-7) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-7]$\"\nThis field is only present if granularity is set to \"weekly\".",
            "type": "string",
            "pattern": "^[0-7]$"
          },
          "dayOfMonth": {
            "description": "JSON string containing a numeric value indicating the day of the month (1-31) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[1-9]|[1-2][0-9]|[3][0-1]$\"\nThis field is only present if granularity is set to \"monthly\".",
            "type": "string",
            "pattern": "^[1-9]|[1-2][0-9]|[3][0-1]$",
            "example": "1"
          },
          "recurrenceRule": {
            "description": "JSON string containing an RFC-5545 Section 3.8.5.3. Recurrence Rule.\nFor the DTSTART parameter, only UTC timestamps (denoted by the \"Z\" suffix) are supported, and only timestamps before the current time are supported.\nFor the RECUR rule parts, \"FREQ\" and \"INTERVAL\" are the only rule parts supported.\nFor the FREQ rule part, \"MINUTELY\" and \"HOURLY\" are the only values supported.\nThis field is only present if granularity is set to \"custom\".",
            "type": "string",
            "example": "DTSTART:20220512T000200Z\nRRULE:FREQ=MINUTELY;INTERVAL=10"
          },
          "snapshotRetention": {
            "description": "JSON string containing a positive numeric value indicating how many snapshots to retain. Zero indicates that snapshots should be deleted after taking a backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "backupRetention": {
            "description": "JSON string containing a positive numeric value indicating how many backups to retain. Zero indicates that no backups should be created.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID indicating where the backup must be stored on create. If not specified, a system-selected bucket will be used.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "87978e28-6034-4eb3-a9dd-98dba3ca2759"
          },
          "replicate": {
            "description": "JSON string indicating if the schedule triggers AppMirror replication for each snapshot. Only takes effect if the application has an AppMirror relationship defined.\nDefined values are:\n* \"true\" - The schedule triggers AppMirror replication\n* \"false\" - The schedule does not trigger AppMirror replication\nIf not specified, the default value is \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "schedule_1.3_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/schedule_1.3_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "schedule_1.3_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name",
          "granularity",
          "snapshotRetention",
          "backupRetention"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-schedule\"",
            "type": "string",
            "enum": [
              "application/astra-schedule"
            ],
            "example": "application/astra-schedule"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "name": {
            "description": "JSON string containing a name of the schedule.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Backup Schedule"
          },
          "enabled": {
            "description": "JSON string indicating if a schedule is active.\nDefined values are:\n* \"true\" - The schedule is active\n* \"false\" - The schedule is not active\nIf not specified, the default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "granularity": {
            "description": "JSON string indicating the granularity of the schedule.\nDefined values are:\n* \"hourly\"\n* \"daily\"\n* \"weekly\"\n* \"monthly\"\n* \"custom\"",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "custom"
            ],
            "example": "monthly"
          },
          "minute": {
            "description": "JSON string containing a numeric value indicating the minute of the hour (0 - 59) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1-5][0-9]$\"\nThis field is present if granularity is set to \"hourly\", \"daily\", \"weekly\", or \"monthly\". It will be returned with value \"0\" for custom schedules.",
            "type": "string",
            "pattern": "^[0-9]|[1-5][0-9]$",
            "example": "0"
          },
          "hour": {
            "description": "JSON string containing a numeric value indicating the hour of the day (0 - 23) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1][0-9]|[2][0-3]$\"\nThis field is present if granularity is set to \"daily\", \"weekly\", or \"monthly\".",
            "type": "string",
            "pattern": "^[0-9]|[1][0-9]|[2][0-3]$",
            "example": "0"
          },
          "dayOfWeek": {
            "description": "JSON string containing a numeric value indicating the day of the week (0-7) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-7]$\"\nThis field is only present if granularity is set to \"weekly\".",
            "type": "string",
            "pattern": "^[0-7]$"
          },
          "dayOfMonth": {
            "description": "JSON string containing a numeric value indicating the day of the month (1-31) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[1-9]|[1-2][0-9]|[3][0-1]$\"\nThis field is only present if granularity is set to \"monthly\".",
            "type": "string",
            "pattern": "^[1-9]|[1-2][0-9]|[3][0-1]$",
            "example": "1"
          },
          "recurrenceRule": {
            "description": "JSON string containing an RFC-5545 Section 3.8.5.3. Recurrence Rule.\nFor the DTSTART parameter, only UTC timestamps (denoted by the \"Z\" suffix) are supported, and only timestamps before the current time are supported.\nFor the RECUR rule parts, \"FREQ\" and \"INTERVAL\" are the only rule parts supported.\nFor the FREQ rule part, \"MINUTELY\" and \"HOURLY\" are the only values supported.\nThis field is only present if granularity is set to \"custom\".",
            "type": "string",
            "example": "DTSTART:20220512T000200Z\nRRULE:FREQ=MINUTELY;INTERVAL=10"
          },
          "snapshotRetention": {
            "description": "JSON string containing a positive numeric value indicating how many snapshots to retain. Zero indicates that snapshots should be deleted after taking a backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "backupRetention": {
            "description": "JSON string containing a positive numeric value indicating how many backups to retain. Zero indicates that no backups should be created.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID indicating where the backup must be stored on create. If not specified, a system-selected bucket will be used.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "87978e28-6034-4eb3-a9dd-98dba3ca2759"
          },
          "replicate": {
            "description": "JSON string indicating if the schedule triggers AppMirror replication for each snapshot. Only takes effect if the application has an AppMirror relationship defined.\nDefined values are:\n* \"true\" - The schedule triggers AppMirror replication\n* \"false\" - The schedule does not trigger AppMirror replication\nIf not specified, the default value is \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "schedule_1.3_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "enabled",
          "granularity",
          "minute",
          "snapshotRetention",
          "backupRetention",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-schedule\"",
            "type": "string",
            "enum": [
              "application/astra-schedule"
            ],
            "example": "application/astra-schedule"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "49cbc480-5f7d-51e2-8f30-52b9a83a03b1"
          },
          "name": {
            "description": "JSON string containing a name of the schedule.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Backup Schedule"
          },
          "enabled": {
            "description": "JSON string indicating if a schedule is active.\nDefined values are:\n* \"true\" - The schedule is active\n* \"false\" - The schedule is not active\nIf not specified, the default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "granularity": {
            "description": "JSON string indicating the granularity of the schedule.\nDefined values are:\n* \"hourly\"\n* \"daily\"\n* \"weekly\"\n* \"monthly\"\n* \"custom\"",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "custom"
            ],
            "example": "monthly"
          },
          "minute": {
            "description": "JSON string containing a numeric value indicating the minute of the hour (0 - 59) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1-5][0-9]$\"\nThis field is present if granularity is set to \"hourly\", \"daily\", \"weekly\", or \"monthly\". It will be returned with value \"0\" for custom schedules.",
            "type": "string",
            "pattern": "^[0-9]|[1-5][0-9]$",
            "example": "0"
          },
          "hour": {
            "description": "JSON string containing a numeric value indicating the hour of the day (0 - 23) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1][0-9]|[2][0-3]$\"\nThis field is present if granularity is set to \"daily\", \"weekly\", or \"monthly\".",
            "type": "string",
            "pattern": "^[0-9]|[1][0-9]|[2][0-3]$",
            "example": "0"
          },
          "dayOfWeek": {
            "description": "JSON string containing a numeric value indicating the day of the week (0-7) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-7]$\"\nThis field is only present if granularity is set to \"weekly\".",
            "type": "string",
            "pattern": "^[0-7]$"
          },
          "dayOfMonth": {
            "description": "JSON string containing a numeric value indicating the day of the month (1-31) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[1-9]|[1-2][0-9]|[3][0-1]$\"\nThis field is only present if granularity is set to \"monthly\".",
            "type": "string",
            "pattern": "^[1-9]|[1-2][0-9]|[3][0-1]$",
            "example": "1"
          },
          "recurrenceRule": {
            "description": "JSON string containing an RFC-5545 Section 3.8.5.3. Recurrence Rule.\nFor the DTSTART parameter, only UTC timestamps (denoted by the \"Z\" suffix) are supported, and only timestamps before the current time are supported.\nFor the RECUR rule parts, \"FREQ\" and \"INTERVAL\" are the only rule parts supported.\nFor the FREQ rule part, \"MINUTELY\" and \"HOURLY\" are the only values supported.\nThis field is only present if granularity is set to \"custom\".",
            "type": "string",
            "example": "DTSTART:20220512T000200Z\nRRULE:FREQ=MINUTELY;INTERVAL=10"
          },
          "snapshotRetention": {
            "description": "JSON string containing a positive numeric value indicating how many snapshots to retain. Zero indicates that snapshots should be deleted after taking a backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "backupRetention": {
            "description": "JSON string containing a positive numeric value indicating how many backups to retain. Zero indicates that no backups should be created.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID indicating where the backup must be stored on create. If not specified, a system-selected bucket will be used.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "87978e28-6034-4eb3-a9dd-98dba3ca2759"
          },
          "replicate": {
            "description": "JSON string indicating if the schedule triggers AppMirror replication for each snapshot. Only takes effect if the application has an AppMirror relationship defined.\nDefined values are:\n* \"true\" - The schedule triggers AppMirror replication\n* \"false\" - The schedule does not trigger AppMirror replication\nIf not specified, the default value is \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "schedule_1.3_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "snapshotRetention",
          "backupRetention"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-schedule\"",
            "type": "string",
            "enum": [
              "application/astra-schedule"
            ],
            "example": "application/astra-schedule"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "49cbc480-5f7d-51e2-8f30-52b9a83a03b1"
          },
          "name": {
            "description": "JSON string containing a name of the schedule.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "Backup Schedule"
          },
          "enabled": {
            "description": "JSON string indicating if a schedule is active.\nDefined values are:\n* \"true\" - The schedule is active\n* \"false\" - The schedule is not active\nIf not specified, the default value is \"true\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "granularity": {
            "description": "JSON string indicating the granularity of the schedule.\nDefined values are:\n* \"hourly\"\n* \"daily\"\n* \"weekly\"\n* \"monthly\"\n* \"custom\"",
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "custom"
            ],
            "example": "monthly"
          },
          "minute": {
            "description": "JSON string containing a numeric value indicating the minute of the hour (0 - 59) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1-5][0-9]$\"\nThis field is present if granularity is set to \"hourly\", \"daily\", \"weekly\", or \"monthly\". It will be returned with value \"0\" for custom schedules.",
            "type": "string",
            "pattern": "^[0-9]|[1-5][0-9]$",
            "example": "0"
          },
          "hour": {
            "description": "JSON string containing a numeric value indicating the hour of the day (0 - 23) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-9]|[1][0-9]|[2][0-3]$\"\nThis field is present if granularity is set to \"daily\", \"weekly\", or \"monthly\".",
            "type": "string",
            "pattern": "^[0-9]|[1][0-9]|[2][0-3]$",
            "example": "0"
          },
          "dayOfWeek": {
            "description": "JSON string containing a numeric value indicating the day of the week (0-7) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[0-7]$\"\nThis field is only present if granularity is set to \"weekly\".",
            "type": "string",
            "pattern": "^[0-7]$"
          },
          "dayOfMonth": {
            "description": "JSON string containing a numeric value indicating the day of the month (1-31) to execute the schedule.\nDefined values are:\n* Defined regex is: \"^[1-9]|[1-2][0-9]|[3][0-1]$\"\nThis field is only present if granularity is set to \"monthly\".",
            "type": "string",
            "pattern": "^[1-9]|[1-2][0-9]|[3][0-1]$",
            "example": "1"
          },
          "recurrenceRule": {
            "description": "JSON string containing an RFC-5545 Section 3.8.5.3. Recurrence Rule.\nFor the DTSTART parameter, only UTC timestamps (denoted by the \"Z\" suffix) are supported, and only timestamps before the current time are supported.\nFor the RECUR rule parts, \"FREQ\" and \"INTERVAL\" are the only rule parts supported.\nFor the FREQ rule part, \"MINUTELY\" and \"HOURLY\" are the only values supported.\nThis field is only present if granularity is set to \"custom\".",
            "type": "string",
            "example": "DTSTART:20220512T000200Z\nRRULE:FREQ=MINUTELY;INTERVAL=10"
          },
          "snapshotRetention": {
            "description": "JSON string containing a positive numeric value indicating how many snapshots to retain. Zero indicates that snapshots should be deleted after taking a backup.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "backupRetention": {
            "description": "JSON string containing a positive numeric value indicating how many backups to retain. Zero indicates that no backups should be created.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* Defined regex is: \"^(0|([1-9][0-9]*))$\"",
            "type": "string",
            "pattern": "^(0|([1-9][0-9]*))$",
            "minLength": 1,
            "maxLength": 63,
            "example": "12"
          },
          "bucketID": {
            "description": "JSON string containing an optional bucket ID indicating where the backup must be stored on create. If not specified, a system-selected bucket will be used.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.bucket",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "87978e28-6034-4eb3-a9dd-98dba3ca2759"
          },
          "replicate": {
            "description": "JSON string indicating if the schedule triggers AppMirror replication for each snapshot. Only takes effect if the application has an AppMirror relationship defined.\nDefined values are:\n* \"true\" - The schedule triggers AppMirror replication\n* \"false\" - The schedule does not trigger AppMirror replication\nIf not specified, the default value is \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "false"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "setting_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "currentConfig",
          "configSchema",
          "state",
          "stateUnready",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-setting\"",
            "type": "string",
            "enum": [
              "application/astra-setting"
            ],
            "example": "application/astra-setting"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ea510866-47d3-5130-8468-563df4cd6a28"
          },
          "name": {
            "description": "JSON string containing a name for the setting, in hierarchal dot notation (.).\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\nThis value is specified by the configmap that is loaded at runtime and cannot be updated by the user.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "astra.account.smtp"
          },
          "currentConfig": {
            "description": "JSON object containing keys and values that make up the current configuration for this setting.\nThe contents of this object must conform to the JSON Schema contained in the configSchema field.\nDefault values are supplied by the configmap. After defaults are changed by the user, they will not be overwritten.",
            "type": "object",
            "$ref": "#/components/schemas/type_json"
          },
          "desiredConfig": {
            "description": "JSON object containing keys and values that make up the requested configuration for this setting.\nThe contents of this object must conform to the JSON schema contained in the configSchema field.\nThe object does not exist until specified. When specified, this triggers the feature service to notify the corresponding service to request that the desired configuration can be applied. The corresponding service can then perform validation and apply the desired configuration to the current configuration.",
            "type": "object",
            "$ref": "#/components/schemas/type_json"
          },
          "configSchema": {
            "description": "JSON object containing the JSON schema for the config property in this resource. Must conform to JSON Schema Draft 7.\nIf config values are present in the resource, validation against the indicated configSchema is mandatory.\nAs a common convention, configurations are recommended to have an \"isEnabled\" field, when appropriate. The \"isEnabled\" field contains a value that indicates whether the setting is turned on (\"true\") or off (\"false\").",
            "type": "object",
            "$ref": "#/components/schemas/type_json_schema"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the application.\nDefined values are:\n* \"valid\" - The current configuration matches the desired config.\n* \"pending\" - The desired configuration is being applied.\n* \"error\" - The desired configuration cannot be applied.",
            "type": "string",
            "enum": [
              "valid",
              "pending",
              "error"
            ],
            "example": "valid"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the setting was not successfully applied.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "setting_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/setting_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "setting_1.1_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-setting\"",
            "type": "string",
            "enum": [
              "application/astra-setting"
            ],
            "example": "application/astra-setting"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ea510866-47d3-5130-8468-563df4cd6a28"
          },
          "name": {
            "description": "JSON string containing a name for the setting, in hierarchal dot notation (.).\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.\nThis value is specified by the configmap that is loaded at runtime and cannot be updated by the user.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "astra.account.smtp"
          },
          "currentConfig": {
            "description": "JSON object containing keys and values that make up the current configuration for this setting.\nThe contents of this object must conform to the JSON Schema contained in the configSchema field.\nDefault values are supplied by the configmap. After defaults are changed by the user, they will not be overwritten.",
            "type": "object",
            "$ref": "#/components/schemas/type_json"
          },
          "desiredConfig": {
            "description": "JSON object containing keys and values that make up the requested configuration for this setting.\nThe contents of this object must conform to the JSON schema contained in the configSchema field.\nThe object does not exist until specified. When specified, this triggers the feature service to notify the corresponding service to request that the desired configuration can be applied. The corresponding service can then perform validation and apply the desired configuration to the current configuration.",
            "type": "object",
            "$ref": "#/components/schemas/type_json"
          },
          "configSchema": {
            "description": "JSON object containing the JSON schema for the config property in this resource. Must conform to JSON Schema Draft 7.\nIf config values are present in the resource, validation against the indicated configSchema is mandatory.\nAs a common convention, configurations are recommended to have an \"isEnabled\" field, when appropriate. The \"isEnabled\" field contains a value that indicates whether the setting is turned on (\"true\") or off (\"false\").",
            "type": "object",
            "$ref": "#/components/schemas/type_json_schema"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the application.\nDefined values are:\n* \"valid\" - The current configuration matches the desired config.\n* \"pending\" - The desired configuration is being applied.\n* \"error\" - The desired configuration cannot be applied.",
            "type": "string",
            "enum": [
              "valid",
              "pending",
              "error"
            ],
            "example": "valid"
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the setting was not successfully applied.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "storageBackend_1.3_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "backendName",
          "backendType",
          "backendVersion",
          "backendCredentialsName",
          "state",
          "stateUnready",
          "managedState",
          "managedStateUnready",
          "protectionState",
          "protectionStateUnready",
          "capabilities",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-storageBackend\"",
            "type": "string",
            "enum": [
              "application/astra-storageBackend"
            ],
            "example": "application/astra-storageBackend"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "04ad4237-3c89-5ca5-8a40-282ab5eb6428"
          },
          "backendName": {
            "description": "JSON string containing a user-specified name for the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "st1-45"
          },
          "backendType": {
            "description": "JSON string containing a value indicating the type of the storage backend being represented.\nDefined values are:\n* \"ontap\" - The storage backend represents a NetApp ONTAP system",
            "type": "string",
            "enum": [
              "ontap"
            ],
            "example": "ontap"
          },
          "backendVersion": {
            "description": "JSON string containing a value indicating the version of the storage backend being represented.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "9.8.1"
          },
          "backendCredentialsName": {
            "description": "JSON string containing a value indicating the name of one or more credential resources used for the storage backend. Allows for credential rotation where multiple credential objects have the same name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "SDSCredentialCluster1"
          },
          "configVersion": {
            "description": "JSON string containing a value indicating the active configuration to be used by the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the storage backend.\nDefined values are:\n* \"discovered\" - The storage backend has been discovered from a managed cluster\n* \"running\" - The storage backend is running normally\n* \"unknown\" - The state of the storage backend cannot be determined\n* \"failed\" - The storage backend is in an unavailable state",
            "type": "string",
            "enum": [
              "discovered",
              "running",
              "unknown",
              "failed"
            ],
            "example": "running"
          },
          "stateDesired": {
            "description": "JSON string containing a value indicating the desired operational state of the storage backend.\nDefined values are:\n* \"running\" - The storage backend will be in a normal running state",
            "type": "string",
            "enum": [
              "running"
            ]
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is unable to transition to \"running\", why it has transitioned to \"failed\" or \"unknown\", and/or why it is at risk of transitioning to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the storage backend.\nDefined values are:\n* \"pending\" - The storage backend is scheduled to be discovered or added\n* \"unmanaged\" - The storage backend is in a \"discovered\" state, is not under management, and is eligible for management\n* \"managed\" - The storage backend is in a \"running\" or \"unknown\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "unmanaged",
              "managed"
            ],
            "example": "managed"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the storage backend is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "healthState": {
            "description": "JSON string containing a value indicating the health state of the storage backend.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is not in a normal health state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the storage backend. \"unknown\" for ONTAP.\nDefined values are:\n* \"protected\" - The storage backend has a protection policy defined and is in conformance with that policy\n* \"partial\" - The storage backend has a protection policy defined but is out of conformance with that policy\n* \"none\" - The storage backend is not protected\n* \"unknown\" - The storage backend protection policy conformance cannot be determined",
            "type": "string",
            "enum": [
              "protected",
              "partial",
              "none",
              "unknown"
            ],
            "example": "protected"
          },
          "protectionStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a protection policy is out of conformance.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "capabilities": {
            "description": "JSON object containing this Storage Backend capabilities.",
            "type": "object",
            "required": [
              "flexClone",
              "snapMirror",
              "s3"
            ],
            "properties": {
              "flexClone": {
                "description": "JSON string indicating if this Storage Backend supports FlexClone.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              },
              "snapMirror": {
                "description": "JSON string indicating if this Storage Backend supports SnapMirror.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              },
              "s3": {
                "description": "JSON string indicating if this Storage Backend supports s3.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              }
            },
            "additionalProperties": false
          },
          "ontap": {
            "description": "JSON object containing specific information related to ONTAP clusters.",
            "type": "object",
            "required": [
              "authenticationStyle"
            ],
            "properties": {
              "authenticationStyle": {
                "description": "JSON string indicating whether the ONTAP authentication is performed using a username/password combination or a certificate.\nDefined values are:\n* \"basic\" - Uses username/password\n* \"certificate\" - Uses certificate",
                "type": "string",
                "enum": [
                  "basic",
                  "certificate"
                ],
                "example": "basic"
              },
              "backendManagementIP": {
                "description": "JSON string containing the IP address used to connect to this ONTAP cluster.",
                "type": "string"
              },
              "managementIPs": {
                "description": "JSON array of JSON strings containing the list of all possible management IPs used to connect to this ONTAP cluster.\nThis is used to correlate backends detected through Trident and storage backends in Astra.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "storageBackend_1.3_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/storageBackend_1.3_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "storageBackend_1.3_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "backendType"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-storageBackend\"",
            "type": "string",
            "enum": [
              "application/astra-storageBackend"
            ],
            "example": "application/astra-storageBackend"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "backendName": {
            "description": "JSON string containing a user-specified name for the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "st1-45"
          },
          "backendType": {
            "description": "JSON string containing a value indicating the type of the storage backend being represented.\nDefined values are:\n* \"ontap\" - The storage backend represents a NetApp ONTAP system",
            "type": "string",
            "enum": [
              "ontap"
            ],
            "example": "ontap"
          },
          "backendVersion": {
            "description": "JSON string containing a value indicating the version of the storage backend being represented.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "9.8.1"
          },
          "backendCredentialsName": {
            "description": "JSON string containing a value indicating the name of one or more credential resources used for the storage backend. Allows for credential rotation where multiple credential objects have the same name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "SDSCredentialCluster1"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "storageBackend_1.3_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "backendName",
          "backendType",
          "backendVersion",
          "backendCredentialsName",
          "state",
          "stateUnready",
          "managedState",
          "managedStateUnready",
          "protectionState",
          "protectionStateUnready",
          "capabilities",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-storageBackend\"",
            "type": "string",
            "enum": [
              "application/astra-storageBackend"
            ],
            "example": "application/astra-storageBackend"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "04ad4237-3c89-5ca5-8a40-282ab5eb6428"
          },
          "backendName": {
            "description": "JSON string containing a user-specified name for the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "st1-45"
          },
          "backendType": {
            "description": "JSON string containing a value indicating the type of the storage backend being represented.\nDefined values are:\n* \"ontap\" - The storage backend represents a NetApp ONTAP system",
            "type": "string",
            "enum": [
              "ontap"
            ],
            "example": "ontap"
          },
          "backendVersion": {
            "description": "JSON string containing a value indicating the version of the storage backend being represented.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "9.8.1"
          },
          "backendCredentialsName": {
            "description": "JSON string containing a value indicating the name of one or more credential resources used for the storage backend. Allows for credential rotation where multiple credential objects have the same name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "SDSCredentialCluster1"
          },
          "configVersion": {
            "description": "JSON string containing a value indicating the active configuration to be used by the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the storage backend.\nDefined values are:\n* \"discovered\" - The storage backend has been discovered from a managed cluster\n* \"running\" - The storage backend is running normally\n* \"unknown\" - The state of the storage backend cannot be determined\n* \"failed\" - The storage backend is in an unavailable state",
            "type": "string",
            "enum": [
              "discovered",
              "running",
              "unknown",
              "failed"
            ],
            "example": "running"
          },
          "stateDesired": {
            "description": "JSON string containing a value indicating the desired operational state of the storage backend.\nDefined values are:\n* \"running\" - The storage backend will be in a normal running state",
            "type": "string",
            "enum": [
              "running"
            ]
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is unable to transition to \"running\", why it has transitioned to \"failed\" or \"unknown\", and/or why it is at risk of transitioning to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the storage backend.\nDefined values are:\n* \"pending\" - The storage backend is scheduled to be discovered or added\n* \"unmanaged\" - The storage backend is in a \"discovered\" state, is not under management, and is eligible for management\n* \"managed\" - The storage backend is in a \"running\" or \"unknown\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "unmanaged",
              "managed"
            ],
            "example": "managed"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the storage backend is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "healthState": {
            "description": "JSON string containing a value indicating the health state of the storage backend.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is not in a normal health state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the storage backend. \"unknown\" for ONTAP.\nDefined values are:\n* \"protected\" - The storage backend has a protection policy defined and is in conformance with that policy\n* \"partial\" - The storage backend has a protection policy defined but is out of conformance with that policy\n* \"none\" - The storage backend is not protected\n* \"unknown\" - The storage backend protection policy conformance cannot be determined",
            "type": "string",
            "enum": [
              "protected",
              "partial",
              "none",
              "unknown"
            ],
            "example": "protected"
          },
          "protectionStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a protection policy is out of conformance.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "capabilities": {
            "description": "JSON object containing this Storage Backend capabilities.",
            "type": "object",
            "required": [
              "flexClone",
              "snapMirror",
              "s3"
            ],
            "properties": {
              "flexClone": {
                "description": "JSON string indicating if this Storage Backend supports FlexClone.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              },
              "snapMirror": {
                "description": "JSON string indicating if this Storage Backend supports SnapMirror.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              },
              "s3": {
                "description": "JSON string indicating if this Storage Backend supports s3.",
                "type": "string",
                "enum": [
                  "true",
                  "false"
                ],
                "example": "false"
              }
            },
            "additionalProperties": false
          },
          "ontap": {
            "description": "JSON object containing specific information related to ONTAP clusters.",
            "type": "object",
            "required": [
              "authenticationStyle"
            ],
            "properties": {
              "authenticationStyle": {
                "description": "JSON string indicating whether the ONTAP authentication is performed using a username/password combination or a certificate.\nDefined values are:\n* \"basic\" - Uses username/password\n* \"certificate\" - Uses certificate",
                "type": "string",
                "enum": [
                  "basic",
                  "certificate"
                ],
                "example": "basic"
              },
              "backendManagementIP": {
                "description": "JSON string containing the IP address used to connect to this ONTAP cluster.",
                "type": "string"
              },
              "managementIPs": {
                "description": "JSON array of JSON strings containing the list of all possible management IPs used to connect to this ONTAP cluster.\nThis is used to correlate backends detected through Trident and storage backends in Astra.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "storageBackend_1.3_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-storageBackend\"",
            "type": "string",
            "enum": [
              "application/astra-storageBackend"
            ],
            "example": "application/astra-storageBackend"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"\n* \"1.3\"",
            "type": "string",
            "enum": [
              "1.3",
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.3"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "04ad4237-3c89-5ca5-8a40-282ab5eb6428"
          },
          "backendName": {
            "description": "JSON string containing a user-specified name for the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "st1-45"
          },
          "backendType": {
            "description": "JSON string containing a value indicating the type of the storage backend being represented.\nDefined values are:\n* \"ontap\" - The storage backend represents a NetApp ONTAP system",
            "type": "string",
            "enum": [
              "ontap"
            ],
            "example": "ontap"
          },
          "backendVersion": {
            "description": "JSON string containing a value indicating the version of the storage backend being represented.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "9.8.1"
          },
          "backendCredentialsName": {
            "description": "JSON string containing a value indicating the name of one or more credential resources used for the storage backend. Allows for credential rotation where multiple credential objects have the same name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "SDSCredentialCluster1"
          },
          "configVersion": {
            "description": "JSON string containing a value indicating the active configuration to be used by the storage backend.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the storage backend.\nDefined values are:\n* \"discovered\" - The storage backend has been discovered from a managed cluster\n* \"running\" - The storage backend is running normally\n* \"unknown\" - The state of the storage backend cannot be determined\n* \"failed\" - The storage backend is in an unavailable state",
            "type": "string",
            "enum": [
              "discovered",
              "running",
              "unknown",
              "failed"
            ],
            "example": "running"
          },
          "stateDesired": {
            "description": "JSON string containing a value indicating the desired operational state of the storage backend.\nDefined values are:\n* \"running\" - The storage backend will be in a normal running state",
            "type": "string",
            "enum": [
              "running"
            ]
          },
          "stateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is unable to transition to \"running\", why it has transitioned to \"failed\" or \"unknown\", and/or why it is at risk of transitioning to \"failed\".\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "managedState": {
            "description": "JSON string containing a value indicating the management state of the storage backend.\nDefined values are:\n* \"pending\" - The storage backend is scheduled to be discovered or added\n* \"unmanaged\" - The storage backend is in a \"discovered\" state, is not under management, and is eligible for management\n* \"managed\" - The storage backend is in a \"running\" or \"unknown\" state and is under management",
            "type": "string",
            "enum": [
              "pending",
              "unmanaged",
              "managed"
            ],
            "example": "managed"
          },
          "managedStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why the storage backend is ineligible to be managed.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "healthState": {
            "description": "JSON string containing a value indicating the health state of the storage backend.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a storage backend is not in a normal health state.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "protectionState": {
            "description": "JSON string containing a value indicating the protection state of the storage backend. \"unknown\" for ONTAP.\nDefined values are:\n* \"protected\" - The storage backend has a protection policy defined and is in conformance with that policy\n* \"partial\" - The storage backend has a protection policy defined but is out of conformance with that policy\n* \"none\" - The storage backend is not protected\n* \"unknown\" - The storage backend protection policy conformance cannot be determined",
            "type": "string",
            "enum": [
              "protected",
              "partial",
              "none",
              "unknown"
            ],
            "example": "protected"
          },
          "protectionStateUnready": {
            "description": "JSON array of JSON strings, each indicating a reason why a protection policy is out of conformance.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 127",
            "type": "array",
            "$ref": "#/components/schemas/type_unready"
          },
          "ontap": {
            "description": "JSON object containing specific information related to ONTAP clusters.",
            "type": "object",
            "properties": {
              "backendManagementIP": {
                "description": "JSON string containing the IP address used to connect to this ONTAP cluster.",
                "type": "string"
              },
              "managementIPs": {
                "description": "JSON array of JSON strings containing the list of all possible management IPs used to connect to this ONTAP cluster.\nThis is used to correlate backends detected through Trident and storage backends in Astra.",
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "storageClass_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "provisioner",
          "available",
          "allowVolumeExpansion",
          "reclaimPolicy",
          "volumeBindingMode",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-storageClass\"",
            "type": "string",
            "enum": [
              "application/astra-storageClass"
            ],
            "example": "application/astra-storageClass"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ad9be22b-53c7-540c-8647-76afe2878952"
          },
          "name": {
            "description": "JSON string containing a value indicating the name of the storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "cvs-netapp-gold"
          },
          "provisioner": {
            "description": "JSON string containing a value indicating the provisioner associated with the storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "csi.trident.netapp.io"
          },
          "available": {
            "description": "JSON string indicating whether the storage class is available for the cluster or is eligible to be added to the cluster when under management.\nDefined values are:\n* \"available\" - The storage class is available for use\n* \"eligible\" - The storage class is eligible to be used by the cluster when it is under management\n* \"ineligible\" - The storage class is ineligible to be used by the cluster when it is under management",
            "type": "string",
            "enum": [
              "available",
              "eligible",
              "ineligible"
            ],
            "example": "eligible"
          },
          "allowVolumeExpansion": {
            "description": "JSON string indicating whether the storage class allows volume expansion.\nDefined values are:\n* \"true\" - The storage class allows volume expansion\n* \"false\" - The storage class does not allow volume expansion\n* \"unavailable\" - It is unknown whether the storage class allows volume expansion",
            "type": "string",
            "enum": [
              "true",
              "false",
              "unavailable"
            ],
            "example": "true"
          },
          "reclaimPolicy": {
            "description": "JSON string containing a cloud-specific value indicating the retention policy of the storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "recycle"
          },
          "volumeBindingMode": {
            "description": "JSON string containing a cloud-specific value indicating the binding mode for the storage class.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "immediate"
          },
          "isDefault": {
            "description": "JSON string indicating whether the storage class contains the default annotation.\nDefined values are:\n* \"true\" - The storage class contains the default annotation",
            "type": "string",
            "enum": [
              "true"
            ],
            "example": "true"
          },
          "maxSnapshotCount": {
            "description": "JSON number indicating how many snapshots are supported.\nThis information is attached to storage classes provided by NetApp.",
            "type": "number",
            "example": 3
          },
          "maxBackupCount": {
            "description": "JSON number indicating how many backups are supported.\nThis information is attached to storage classes provided by NetApp.",
            "type": "number"
          },
          "price": {
            "description": "JSON string indicating the currency units per unit of time for the storage class.\nThis information is attached to storage classes provided by NetApp.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "0.15"
          },
          "currency": {
            "description": "JSON string indicating the ISO 4217 three-letter code for the currency that the price is measured in.\nThis information is attached to storage classes provided by NetApp.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "USD"
          },
          "performance": {
            "description": "JSON number indicating the performance service-level objective (SLO) in MBps.\nThis information is attached to storage classes provided by NetApp.",
            "type": "number",
            "example": 35
          },
          "resilience": {
            "description": "JSON string indicating the resilience configuration for the storage.\nThis information is attached to storage classes provided by NetApp.\nDefined values are:\n* \"regional\" - The volume will become unavailable if a given region becomes unavailable\n* \"multisite\" - The volume will continue to be available if a given region becomes unavailable",
            "type": "string",
            "enum": [
              "regional",
              "multisite"
            ],
            "example": "regional"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "storageClass_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/storageClass_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "subscription_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "customerProfileID",
          "terms",
          "status",
          "appLimit",
          "namespaceLimit",
          "subscriptionPeriod",
          "gracePeriod",
          "reminderBeforePeriod",
          "onboardStatus",
          "costPerAppUnit",
          "costPerNamespaceUnit",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-subscription\"",
            "type": "string",
            "enum": [
              "application/astra-subscription"
            ],
            "example": "application/astra-subscription"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "40b4106f-b743-5d83-95c7-d539b2b45f63"
          },
          "customerProfileID": {
            "description": "JSON string containing the customer profile ID from [Authorize.net](http://authorize.net), which was invoked by the UI, is not set for the trial term. Returns an empty string during read operation, if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "2157047189"
          },
          "paymentProfileID": {
            "description": "JSON string containing the payment profile ID from [Authorize.net](http://Authorize.net) that was invoked by the UI, not set for trial term. Returns an empty string during read operation if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "E7CEB0A9F1BECA32A02493E1B31D5955"
          },
          "paymentExpiry": {
            "description": "JSON string containing a timestamp indicating when the payment method expires. This is obtained from authorize.net](http://authorize.net) and is set by the UI.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis field is not returned for trial terms.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-02-01T00:00:00Z"
          },
          "purchaseOrderNumber": {
            "description": "JSON string containing the purchase order number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "72384632"
          },
          "marketplace": {
            "description": "JSON string indicating the marketplace for an account where payments will be recorded.\nDefined values:\n* \"netapp\"\n* \"azure\"\n* \"aws\"\n* \"gcp\"",
            "type": "string",
            "enum": [
              "netapp",
              "azure",
              "aws",
              "gcp"
            ],
            "example": "netapp"
          },
          "licenseSN": {
            "description": "JSON string containing the license serial number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "278343"
          },
          "terms": {
            "description": "JSON string indicating the current tier of the account.\nDefined values are:\n* \"trial\"\n* \"paid\"",
            "type": "string",
            "enum": [
              "trial",
              "paid"
            ],
            "example": "trial"
          },
          "status": {
            "description": "JSON string indicating the current status of the subscription.\nDefined values are:\n* \"active\"\n* \"inactive\"",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "appLimit": {
            "description": "JSON number indicating the application limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 0
          },
          "namespaceLimit": {
            "description": "JSON number indicating the namespace limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 10
          },
          "subscriptionPeriod": {
            "description": "JSON number indicating the subscription period. Value of -1 indicates no limit. Unit: days",
            "type": "number",
            "example": 90
          },
          "gracePeriod": {
            "description": "JSON number indicating the grace period after the trial subscription has expired or a paid subscription is canceled. Unit: days",
            "type": "number",
            "example": 7
          },
          "reminderBeforePeriod": {
            "description": "JSON number indicating the number of days before the end of the trial subscription when the customer notifications will begin. The value is expressed in days with a value of -1 indicating it’s not applicable.",
            "type": "number",
            "example": 30
          },
          "onboardStatus": {
            "description": "JSON string indicating the current status of customer onboarding. Valid values are \"not started\", \"in progress\", \"success\", \"failed\".\nDefined values are:\n* \"not started\"\n* \"in progress\"\n* \"success\"\n* \"failed\"",
            "type": "string",
            "enum": [
              "not started",
              "in progress",
              "success",
              "failed"
            ],
            "example": "in progress"
          },
          "costPerAppUnit": {
            "description": "JSON number indicating the cost per app unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0
          },
          "costPerNamespaceUnit": {
            "description": "JSON number indicating the cost per namespace unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0.005
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "subscription_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscription_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "subscription_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "terms"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-subscription\"",
            "type": "string",
            "enum": [
              "application/astra-subscription"
            ],
            "example": "application/astra-subscription"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "customerProfileID": {
            "description": "JSON string containing the customer profile ID from [Authorize.net](http://authorize.net), which was invoked by the UI, is not set for the trial term. Returns an empty string during read operation, if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "2157047189"
          },
          "paymentFirstName": {
            "description": "JSON string containing a user-specified long-form first name used for payment billing. Specified only when the subscription is being rebilled.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "paymentLastName": {
            "description": "JSON string containing a user-specified long-form last name used for payment billing. Specified only when the subscription is being rebilled.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "paymentAddress": {
            "description": "JSON object containing a collection of JSON strings specifying a billing address. Specified only when the subscription is being rebilled.\nIf this key exists, all six of the contained JSON strings will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
                "type": "string",
                "minLength": 0,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and more.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "paymentProfileID": {
            "description": "JSON string containing the payment profile ID from [Authorize.net](http://Authorize.net) that was invoked by the UI, not set for trial term. Returns an empty string during read operation if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "E7CEB0A9F1BECA32A02493E1B31D5955"
          },
          "paymentExpiry": {
            "description": "JSON string containing a timestamp indicating when the payment method expires. This is obtained from authorize.net](http://authorize.net) and is set by the UI.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis field is not returned for trial terms.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-02-01T00:00:00Z"
          },
          "marketplace": {
            "description": "JSON string indicating the marketplace for an account where payments will be recorded.\nDefined values:\n* \"netapp\"\n* \"azure\"\n* \"aws\"\n* \"gcp\"",
            "type": "string",
            "enum": [
              "netapp",
              "azure",
              "aws",
              "gcp"
            ],
            "example": "netapp"
          },
          "terms": {
            "description": "JSON string indicating the current tier of the account.\nDefined values are:\n* \"trial\"\n* \"paid\"",
            "type": "string",
            "enum": [
              "trial",
              "paid"
            ],
            "example": "trial"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "subscription_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "customerProfileID",
          "terms",
          "status",
          "appLimit",
          "namespaceLimit",
          "subscriptionPeriod",
          "gracePeriod",
          "reminderBeforePeriod",
          "onboardStatus",
          "costPerAppUnit",
          "costPerNamespaceUnit",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-subscription\"",
            "type": "string",
            "enum": [
              "application/astra-subscription"
            ],
            "example": "application/astra-subscription"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "40b4106f-b743-5d83-95c7-d539b2b45f63"
          },
          "customerProfileID": {
            "description": "JSON string containing the customer profile ID from [Authorize.net](http://authorize.net), which was invoked by the UI, is not set for the trial term. Returns an empty string during read operation, if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "2157047189"
          },
          "paymentProfileID": {
            "description": "JSON string containing the payment profile ID from [Authorize.net](http://Authorize.net) that was invoked by the UI, not set for trial term. Returns an empty string during read operation if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "E7CEB0A9F1BECA32A02493E1B31D5955"
          },
          "paymentExpiry": {
            "description": "JSON string containing a timestamp indicating when the payment method expires. This is obtained from authorize.net](http://authorize.net) and is set by the UI.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis field is not returned for trial terms.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-02-01T00:00:00Z"
          },
          "purchaseOrderNumber": {
            "description": "JSON string containing the purchase order number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "72384632"
          },
          "marketplace": {
            "description": "JSON string indicating the marketplace for an account where payments will be recorded.\nDefined values:\n* \"netapp\"\n* \"azure\"\n* \"aws\"\n* \"gcp\"",
            "type": "string",
            "enum": [
              "netapp",
              "azure",
              "aws",
              "gcp"
            ],
            "example": "netapp"
          },
          "licenseSN": {
            "description": "JSON string containing the license serial number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "278343"
          },
          "terms": {
            "description": "JSON string indicating the current tier of the account.\nDefined values are:\n* \"trial\"\n* \"paid\"",
            "type": "string",
            "enum": [
              "trial",
              "paid"
            ],
            "example": "trial"
          },
          "status": {
            "description": "JSON string indicating the current status of the subscription.\nDefined values are:\n* \"active\"\n* \"inactive\"",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "appLimit": {
            "description": "JSON number indicating the application limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 0
          },
          "namespaceLimit": {
            "description": "JSON number indicating the namespace limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 10
          },
          "subscriptionPeriod": {
            "description": "JSON number indicating the subscription period. Value of -1 indicates no limit. Unit: days",
            "type": "number",
            "example": 90
          },
          "gracePeriod": {
            "description": "JSON number indicating the grace period after the trial subscription has expired or a paid subscription is canceled. Unit: days",
            "type": "number",
            "example": 7
          },
          "reminderBeforePeriod": {
            "description": "JSON number indicating the number of days before the end of the trial subscription when the customer notifications will begin. The value is expressed in days with a value of -1 indicating it’s not applicable.",
            "type": "number",
            "example": 30
          },
          "onboardStatus": {
            "description": "JSON string indicating the current status of customer onboarding. Valid values are \"not started\", \"in progress\", \"success\", \"failed\".\nDefined values are:\n* \"not started\"\n* \"in progress\"\n* \"success\"\n* \"failed\"",
            "type": "string",
            "enum": [
              "not started",
              "in progress",
              "success",
              "failed"
            ],
            "example": "in progress"
          },
          "costPerAppUnit": {
            "description": "JSON number indicating the cost per app unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0
          },
          "costPerNamespaceUnit": {
            "description": "JSON number indicating the cost per namespace unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0.005
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "subscription_1.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-subscription\"",
            "type": "string",
            "enum": [
              "application/astra-subscription"
            ],
            "example": "application/astra-subscription"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "40b4106f-b743-5d83-95c7-d539b2b45f63"
          },
          "customerProfileID": {
            "description": "JSON string containing the customer profile ID from [Authorize.net](http://authorize.net), which was invoked by the UI, is not set for the trial term. Returns an empty string during read operation, if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "2157047189"
          },
          "paymentFirstName": {
            "description": "JSON string containing a user-specified long-form first name used for payment billing. Specified only when the subscription is being rebilled.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "paymentLastName": {
            "description": "JSON string containing a user-specified long-form last name used for payment billing. Specified only when the subscription is being rebilled.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
            "type": "string",
            "minLength": 1,
            "maxLength": 63
          },
          "paymentAddress": {
            "description": "JSON object containing a collection of JSON strings specifying a billing address. Specified only when the subscription is being rebilled.\nIf this key exists, all six of the contained JSON strings will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 2",
                "type": "string",
                "minLength": 0,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and more.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
                "type": "string",
                "minLength": 0,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "paymentProfileID": {
            "description": "JSON string containing the payment profile ID from [Authorize.net](http://Authorize.net) that was invoked by the UI, not set for trial term. Returns an empty string during read operation if not set.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "E7CEB0A9F1BECA32A02493E1B31D5955"
          },
          "paymentExpiry": {
            "description": "JSON string containing a timestamp indicating when the payment method expires. This is obtained from authorize.net](http://authorize.net) and is set by the UI.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema\nThis field is not returned for trial terms.",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2022-02-01T00:00:00Z"
          },
          "purchaseOrderNumber": {
            "description": "JSON string containing the purchase order number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "72384632"
          },
          "marketplace": {
            "description": "JSON string indicating the marketplace for an account where payments will be recorded.\nDefined values:\n* \"netapp\"\n* \"azure\"\n* \"aws\"\n* \"gcp\"",
            "type": "string",
            "enum": [
              "netapp",
              "azure",
              "aws",
              "gcp"
            ],
            "example": "netapp"
          },
          "licenseSN": {
            "description": "JSON string containing the license serial number for the payment method.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "278343"
          },
          "terms": {
            "description": "JSON string indicating the current tier of the account.\nDefined values are:\n* \"trial\"\n* \"paid\"",
            "type": "string",
            "enum": [
              "trial",
              "paid"
            ],
            "example": "trial"
          },
          "status": {
            "description": "JSON string indicating the current status of the subscription.\nDefined values are:\n* \"active\"\n* \"inactive\"",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "example": "active"
          },
          "appLimit": {
            "description": "JSON number indicating the application limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 0
          },
          "namespaceLimit": {
            "description": "JSON number indicating the namespace limit for this subscription. Value of -1 indicates no limit.",
            "type": "number",
            "example": 10
          },
          "subscriptionPeriod": {
            "description": "JSON number indicating the subscription period. Value of -1 indicates no limit. Unit: days",
            "type": "number",
            "example": 90
          },
          "gracePeriod": {
            "description": "JSON number indicating the grace period after the trial subscription has expired or a paid subscription is canceled. Unit: days",
            "type": "number",
            "example": 7
          },
          "reminderBeforePeriod": {
            "description": "JSON number indicating the number of days before the end of the trial subscription when the customer notifications will begin. The value is expressed in days with a value of -1 indicating it’s not applicable.",
            "type": "number",
            "example": 30
          },
          "onboardStatus": {
            "description": "JSON string indicating the current status of customer onboarding. Valid values are \"not started\", \"in progress\", \"success\", \"failed\".\nDefined values are:\n* \"not started\"\n* \"in progress\"\n* \"success\"\n* \"failed\"",
            "type": "string",
            "enum": [
              "not started",
              "in progress",
              "success",
              "failed"
            ],
            "example": "in progress"
          },
          "costPerAppUnit": {
            "description": "JSON number indicating the cost per app unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0
          },
          "costPerNamespaceUnit": {
            "description": "JSON number indicating the cost per namespace unit. For a trial version, the value is 0. Unit: US dollars",
            "type": "number",
            "example": 0.005
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "task_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "summary",
          "description",
          "resourceID",
          "resourceURI",
          "resourceCollectionURI",
          "state",
          "stateTransitions",
          "stateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-task\"",
            "type": "string",
            "enum": [
              "application/astra-task"
            ],
            "example": "application/astra-task"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "26e8e8ef-5549-5928-98dd-2c3d43a608e8"
          },
          "name": {
            "description": "JSON string containing a dot notation (.) hierarchical name for the task.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 127\n* Defined regex is: \"^(([a-z])*(\\\\.))*([a-z])+$\"",
            "type": "string",
            "pattern": "^(([a-z])*(\\.))*([a-z])+$",
            "minLength": 3,
            "maxLength": 127,
            "example": "astra.backup.prep"
          },
          "summary": {
            "description": "JSON string containing the short-form summary of the task.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 63",
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "example": "Backup preparation"
          },
          "description": {
            "description": "JSON string containing a description of the task.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 511",
            "type": "string",
            "minLength": 1,
            "maxLength": 511,
            "example": "Task to prepare for application backup"
          },
          "service": {
            "description": "JSON string containing the name of the service that is managing the task.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "minLength": 1,
            "maxLength": 31,
            "example": "nautilus"
          },
          "parentTaskID": {
            "description": "JSON string containing a globally unique identifier of a parent task of the task.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.task",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "9cc8c321-6af1-406c-8158-2c6582c247f8"
          },
          "userID": {
            "description": "JSON string containing the user ID associated with a task. Only included for tasks associated with user-initiated actions.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "abda967f-cd2c-4237-908e-99266648c553"
          },
          "resourceID": {
            "description": "JSON string containing a globally unique identifier of the resource associated with the task.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "626a0978-d55f-4841-8b7c-dc0c0f592c6f"
          },
          "resourceURI": {
            "description": "JSON string containing the URI associated with the task.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "/accounts/fdaa655c-15ab-4d34-aa61-1e9098e67be0/k8s/v1/apps/7c8bef49-697e-4fb4-810c-675cef4cf6c9/appBackups/5cb608f9-571b-492e-a520-5bfb900a9b9c"
          },
          "resourceCollectionURI": {
            "description": "JSON array of JSON strings, each indicating the fully-expanded access URL of the resource associated with the task.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "minLength": 3,
              "maxLength": 4095
            }
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the task.\nDefined values are:\n* \"notStarted\" - The task has not started executing.\n* \"running\" - The task is running.\n* \"completed\" - The task has completed.\n* \"pausing\" - The task was requested to pause.\n* \"paused\" - The task is paused.\n* \"cancelling\" - The task was requested to cancel.\n* \"cancelled\" - The task is cancelled.\n* \"failed\" - The task has failed.\n* Minimum length: 1\n* Maximum length: 31",
            "type": "string",
            "enum": [
              "notStarted",
              "running",
              "completed",
              "pausing",
              "paused",
              "cancelling",
              "cancelled",
              "failed"
            ],
            "minLength": 1,
            "maxLength": 31,
            "example": "completed"
          },
          "stateTransitions": {
            "description": "JSON array of JSON objects, each representing the set of permitted state transitions from a given defined state.\nEach JSON object contains the fields \"from\" and \"to\", where the \"from\" value is the name of a state, and the \"to\" value is an array of permitted destination states.\n* Minimum length: 1\n* Maximum length: 31\nFor example:\n\"stateTransitions\" : [   { \"from\": \"running\", \"to\": [\"paused\", \"cancelled\"] },   { \"from\": \"paused\", \"to\": [\"running\", \"cancelled\"] },   ]",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateTransitions"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current \"state\". This field indicates when there are conditions or errors that prevent the actual state from matching the desired state.\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "orderHint": {
            "description": "JSON number representing the order of subtasks.\nThis field can be used by the client to sort subtasks from smallest to largest.",
            "type": "number",
            "example": 1
          },
          "percentDone": {
            "description": "JSON number containing the percentage complete for a running task.\nWhen the task is completed, this is set to \"100\".",
            "type": "number",
            "example": 99.99
          },
          "startTime": {
            "description": "JSON string containing the timestamp indicating when the task started.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:24:52.256624Z"
          },
          "endTime": {
            "description": "JSON string containing the timestamp indicating when the task ended.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:28:52.256624Z"
          },
          "cancelTime": {
            "description": "JSON string containing the timestamp indicating when the task was cancelled.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-06T12:26:52.256624Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "task_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/task_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "token_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "userID",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-token\"",
            "type": "string",
            "enum": [
              "application/astra-token"
            ],
            "example": "application/astra-token"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "822fab12-c224-5d1f-8118-5fb5d2def8b9"
          },
          "name": {
            "description": "JSON string containing a token name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John Doe"
          },
          "userID": {
            "description": "JSON string containing the UUID for the user that the token is associated with.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "48449628-6294-4bc1-a2b9-b5506e2e7a66"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "token_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/token_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "token_1.0_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "name"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-token\"",
            "type": "string",
            "enum": [
              "application/astra-token"
            ],
            "example": "application/astra-token"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "name": {
            "description": "JSON string containing a token name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John Doe"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "token_1.0_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "userID",
          "token",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-token\"",
            "type": "string",
            "enum": [
              "application/astra-token"
            ],
            "example": "application/astra-token"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "822fab12-c224-5d1f-8118-5fb5d2def8b9"
          },
          "name": {
            "description": "JSON string containing a token name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John Doe"
          },
          "userID": {
            "description": "JSON string containing the UUID for the user that the token is associated with.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "48449628-6294-4bc1-a2b9-b5506e2e7a66"
          },
          "token": {
            "description": "JSON string containing a base64-encoded system-generated API token.\nDefined values are:\n* Conforms to the base64 Encoded Data Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_base64_data",
            "example": "QSBKV1QgVG9rZW4gd291bGQgZ28gaGVyZS4="
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "token_1.0_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-token\"",
            "type": "string",
            "enum": [
              "application/astra-token"
            ],
            "example": "application/astra-token"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "822fab12-c224-5d1f-8118-5fb5d2def8b9"
          },
          "name": {
            "description": "JSON string containing a token name.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks.",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "John Doe"
          },
          "userID": {
            "description": "JSON string containing the UUID for the user that the token is associated with.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.user",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "48449628-6294-4bc1-a2b9-b5506e2e7a66"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "unreadNotification_1.0_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "notificationID",
          "sequenceCount",
          "severity",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-unreadNotification\"",
            "type": "string",
            "enum": [
              "application/astra-unreadNotification"
            ],
            "example": "application/astra-unreadNotification"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"",
            "type": "string",
            "enum": [
              "1.0"
            ],
            "example": "1.0"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "10df997b-629e-50f8-bc5f-a18b9a4ac5f6"
          },
          "notificationID": {
            "description": "JSON string containing a notification ID that is to be marked as read by the user creating the mark.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.notification",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "4080cf5f-2261-4130-b8fb-8432e2e553e6"
          },
          "sequenceCount": {
            "description": "JSON number containing a sequence count associated with the notification specified by the notification ID.",
            "type": "number",
            "example": 48923
          },
          "severity": {
            "description": "JSON string containing one of the following values that indicate the severity of the event.\nDefined values are:\n* \"cleared\" - Indicates that a previously reported event describing a condition is no longer active. An event with severity \"cleared\" will use the same summary and correlation ID to enable it to be matched up\n* \"indeterminate\" - Indicates that the severity cannot be determined\n* \"informational\" - Indicates a change in state that is both expected and normal (not defined in X.733)\n* \"warning\" - Indicates the detection of a potential or impending service-affecting fault before any significant effects have been felt\n* \"critical\" - Indicates that a service-affecting condition has occurred and immediate corrective action is required",
            "type": "string",
            "enum": [
              "cleared",
              "indeterminate",
              "informational",
              "warning",
              "critical"
            ],
            "example": "warning"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "unreadNotification_1.0_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/unreadNotification_1.0_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "upgrade_1.1_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "componentName",
          "componentInstance",
          "componentID",
          "upgradeVersion",
          "currentVersion",
          "dependencies",
          "state",
          "stateDesired",
          "stateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-upgrade\"",
            "type": "string",
            "enum": [
              "application/astra-upgrade"
            ],
            "example": "application/astra-upgrade"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "aa9a8e88-c012-55b1-b514-7cd94dc79008"
          },
          "componentName": {
            "description": "JSON string containing the name of the type of software that can be upgraded.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
            "type": "string",
            "enum": [
              "acc",
              "acs",
              "trident",
              "kubernetes"
            ],
            "example": "trident"
          },
          "componentInstance": {
            "description": "JSON string containing the URI of the component that can be upgraded.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://<dns_name>/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/fdda3ff3-a46a-43a4-902e-444fde2baeba/storageBackends/72d19c3c-eb43-4bec-b23e-a228c900aded"
          },
          "componentID": {
            "description": "JSON string containing a globally unique identifier of the component that can be upgraded.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.softwareInstance",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "72d19c3c-eb43-4bec-b23e-a228c900aded"
          },
          "upgradeVersion": {
            "description": "JSON string containing the SemVer of the software image file that can be upgraded to.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "21.07.1"
          },
          "currentVersion": {
            "description": "JSON string containing the current SemVer of the entity to be upgraded.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "21.04.1"
          },
          "dependencies": {
            "description": "JSON array of JSON strings, each containing the UUID of an upgrade that must be completed before this upgrade can proceed. Used to determine which upgrades will be performed as prerequisites and in which order.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the upgrade.\nIf auto-upgrade is enabled, upgrades will start in the \"scheduled\" state. Otherwise, upgrades will start in the \"proposed\" state.\nDefined values are:\n* \"unavailable\" - The upgrade is not available at this time\n* \"proposed\" - The upgrade is proposed but will not automatically run until approved\n* \"scheduled\" - The upgrade is approved but is not ready to be installed due to dependencies, time windows, or available resources\n* \"running\" - The upgrade is in progress\n* \"complete\" - The upgrade has completed\n* \"failed\" - The upgrade did not complete",
            "type": "string",
            "enum": [
              "unavailable",
              "proposed",
              "scheduled",
              "running",
              "complete",
              "failed"
            ],
            "example": "scheduled"
          },
          "stateDesired": {
            "description": "JSON string containing a value indicating the desired state for \"state\".\nThis field is only included when the user can directly request a change in the state of the resource.\nDefined values are:\n* \"proposed\" - The upgrade is not approved and must not be performed\n* \"scheduled\" - The upgrade is approved and must be performed in the specified time window\n* \"running\" - The upgrade must be performed immediately, regardless of the time window",
            "type": "string",
            "enum": [
              "proposed",
              "scheduled",
              "running"
            ],
            "example": "scheduled"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current \"state\".\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "upgrade_1.1_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/upgrade_1.1_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "upgrade_1.1_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-upgrade\"",
            "type": "string",
            "enum": [
              "application/astra-upgrade"
            ],
            "example": "application/astra-upgrade"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"",
            "type": "string",
            "enum": [
              "1.1",
              "1.0"
            ],
            "example": "1.1"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "aa9a8e88-c012-55b1-b514-7cd94dc79008"
          },
          "componentName": {
            "description": "JSON string containing the name of the type of software that can be upgraded.\nDefined values are:\n* \"acc\"\n* \"acs\"\n* \"trident\"\n* \"kubernetes\"",
            "type": "string",
            "enum": [
              "acc",
              "acs",
              "trident",
              "kubernetes"
            ],
            "example": "trident"
          },
          "componentInstance": {
            "description": "JSON string containing the URI of the component that can be upgraded.\nDefined values are:\n* Minimum length: 3\n* Maximum length: 4095",
            "type": "string",
            "minLength": 3,
            "maxLength": 4095,
            "example": "https://<dns_name>/accounts/0b311ae7-d89a-4a11-a52c-1349ca090415/topology/v1/clouds/fdda3ff3-a46a-43a4-902e-444fde2baeba/storageBackends/72d19c3c-eb43-4bec-b23e-a228c900aded"
          },
          "componentID": {
            "description": "JSON string containing a globally unique identifier of the component that can be upgraded.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.softwareInstance",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "72d19c3c-eb43-4bec-b23e-a228c900aded"
          },
          "upgradeVersion": {
            "description": "JSON string containing the SemVer of the software image file that can be upgraded to.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "21.07.1"
          },
          "currentVersion": {
            "description": "JSON string containing the current SemVer of the entity to be upgraded.\nDefined values are:\n* Conforms to the SemVer Schema",
            "type": "string",
            "example": "21.04.1"
          },
          "dependencies": {
            "description": "JSON array of JSON strings, each containing the UUID of an upgrade that must be completed before this upgrade can proceed. Used to determine which upgrades will be performed as prerequisites and in which order.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the upgrade.\nIf auto-upgrade is enabled, upgrades will start in the \"scheduled\" state. Otherwise, upgrades will start in the \"proposed\" state.\nDefined values are:\n* \"unavailable\" - The upgrade is not available at this time\n* \"proposed\" - The upgrade is proposed but will not automatically run until approved\n* \"scheduled\" - The upgrade is approved but is not ready to be installed due to dependencies, time windows, or available resources\n* \"running\" - The upgrade is in progress\n* \"complete\" - The upgrade has completed\n* \"failed\" - The upgrade did not complete",
            "type": "string",
            "enum": [
              "unavailable",
              "proposed",
              "scheduled",
              "running",
              "complete",
              "failed"
            ],
            "example": "scheduled"
          },
          "stateDesired": {
            "description": "JSON string containing a value indicating the desired state for \"state\".\nThis field is only included when the user can directly request a change in the state of the resource.\nDefined values are:\n* \"proposed\" - The upgrade is not approved and must not be performed\n* \"scheduled\" - The upgrade is approved and must be performed in the specified time window\n* \"running\" - The upgrade must be performed immediately, regardless of the time window",
            "type": "string",
            "enum": [
              "proposed",
              "scheduled",
              "running"
            ],
            "example": "scheduled"
          },
          "stateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current \"state\".\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "user_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "state",
          "isEnabled",
          "firstName",
          "lastName",
          "email",
          "sendWelcomeEmail",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-user\"",
            "type": "string",
            "enum": [
              "application/astra-user"
            ],
            "example": "application/astra-user"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5bad8e04-e2fd-5c43-98d7-300580993f49"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the user.\nDefined values are:\n* \"pending\" - The user account is in the process of being created. The user can only read and modify the user resource (default value).  \n* This state is not valid for a user with \"authProvider\" as \"local\"\n* \"active\" - The user account is operational (The user can log in if the account setting \"isEnabled\" is \"true\").  \n* This is the default value for a user with \"authProvider\" as \"local\"\n* \"suspended\" - The user account is suspended (The user cannot log in regardless of account \"isEnabled\" setting).",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating if the user is allowed to log in.\nDefined values are:\n* \"true\" - The user is allowed to log in; default value on create.\n* \"false\" - The user is not allowed to log in.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "authID": {
            "description": "JSON string containing the identifier associated with an external identity provider.\nThe contents of this string depend on the specified authProvider.\nFor a user with \"authProvider\" as \"local\", \"authID\" is set to the value of \"email\".\nFor a user with \"authProvider\" as \"ldap\", \"authID\" is set to its Distinguished Name (DN) from the LDAP server.",
            "type": "string",
            "example": "HteLK3hk28sdbDLKHReB"
          },
          "authProvider": {
            "description": "JSON string indicating the context of the idAuth identifier.\nDefined values are:\n* \"cloud-central\" - User authentication comes from the NetApp Cloud Central service\n* \"local\" - User authentication comes from the local user/password store\n* \"ldap\" - User authentication comes from an external LDAP server\nIn Astra Control Center, all users are required to have a value of \"local\", or \"ldap\". If a value is not specified, a default value of \"local\" is chosen.\nIn Astra Control Service, \"authProvider\" as \"local\", or \"ldap\" is not supported. If a value is not specified, it will default to \"cloud-central\".",
            "type": "string",
            "enum": [
              "cloud-central",
              "local",
              "ldap"
            ],
            "example": "cloud-central"
          },
          "firstName": {
            "description": "JSON string containing a user-specified long form first name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "John"
          },
          "lastName": {
            "description": "JSON string containing a user-specified long-form last name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "Doe"
          },
          "companyName": {
            "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "NetApp, Inc."
          },
          "email": {
            "description": "JSON strings containing a user-specified email address.",
            "type": "string",
            "example": "jdoe@example.com"
          },
          "phone": {
            "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.",
            "type": "string",
            "example": "408-555-22222"
          },
          "postalAddress": {
            "description": "JSON object containing a collection of fields that specifies an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained fields will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and so on.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "sendWelcomeEmail": {
            "description": "JSON string indicating whether a welcome email will be sent after validation. If not specified on create, the value will be set to \"true\" for ACS and \"false\" for Astra Control Center.\nDefined values are:\n* \"true\" - A welcome email will be sent; default value on create\n* \"false\" - A welcome email will not be sent\nFor a user with \"authProvider\" as \"local\" or \"ldap\", this value is ignored and is set to \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "enableTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the user was last enabled.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "lastActTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the identity API was last invoked on behalf of this user. (Note: This is expensive.)\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "user_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/user_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "user_1.2_post_request_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "email"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-user\"",
            "type": "string",
            "enum": [
              "application/astra-user"
            ],
            "example": "application/astra-user"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "authID": {
            "description": "JSON string containing the identifier associated with an external identity provider.\nThe contents of this string depend on the specified authProvider.\nFor a user with \"authProvider\" as \"local\", \"authID\" is set to the value of \"email\".\nFor a user with \"authProvider\" as \"ldap\", \"authID\" is set to its Distinguished Name (DN) from the LDAP server.",
            "type": "string",
            "example": "HteLK3hk28sdbDLKHReB"
          },
          "authProvider": {
            "description": "JSON string indicating the context of the idAuth identifier.\nDefined values are:\n* \"cloud-central\" - User authentication comes from the NetApp Cloud Central service\n* \"local\" - User authentication comes from the local user/password store\n* \"ldap\" - User authentication comes from an external LDAP server\nIn Astra Control Center, all users are required to have a value of \"local\", or \"ldap\". If a value is not specified, a default value of \"local\" is chosen.\nIn Astra Control Service, \"authProvider\" as \"local\", or \"ldap\" is not supported. If a value is not specified, it will default to \"cloud-central\".",
            "type": "string",
            "enum": [
              "cloud-central",
              "local",
              "ldap"
            ],
            "example": "cloud-central"
          },
          "firstName": {
            "description": "JSON string containing a user-specified long form first name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "John"
          },
          "lastName": {
            "description": "JSON string containing a user-specified long-form last name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "Doe"
          },
          "companyName": {
            "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "NetApp, Inc."
          },
          "email": {
            "description": "JSON strings containing a user-specified email address.",
            "type": "string",
            "example": "jdoe@example.com"
          },
          "phone": {
            "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.",
            "type": "string",
            "example": "408-555-22222"
          },
          "postalAddress": {
            "description": "JSON object containing a collection of fields that specifies an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained fields will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and so on.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "sendWelcomeEmail": {
            "description": "JSON string indicating whether a welcome email will be sent after validation. If not specified on create, the value will be set to \"true\" for ACS and \"false\" for Astra Control Center.\nDefined values are:\n* \"true\" - A welcome email will be sent; default value on create\n* \"false\" - A welcome email will not be sent\nFor a user with \"authProvider\" as \"local\" or \"ldap\", this value is ignored and is set to \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "user_1.2_post_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "state",
          "isEnabled",
          "firstName",
          "lastName",
          "email",
          "sendWelcomeEmail",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-user\"",
            "type": "string",
            "enum": [
              "application/astra-user"
            ],
            "example": "application/astra-user"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5bad8e04-e2fd-5c43-98d7-300580993f49"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the user.\nDefined values are:\n* \"pending\" - The user account is in the process of being created. The user can only read and modify the user resource (default value).  \n* This state is not valid for a user with \"authProvider\" as \"local\"\n* \"active\" - The user account is operational (The user can log in if the account setting \"isEnabled\" is \"true\").  \n* This is the default value for a user with \"authProvider\" as \"local\"\n* \"suspended\" - The user account is suspended (The user cannot log in regardless of account \"isEnabled\" setting).",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating if the user is allowed to log in.\nDefined values are:\n* \"true\" - The user is allowed to log in; default value on create.\n* \"false\" - The user is not allowed to log in.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "authID": {
            "description": "JSON string containing the identifier associated with an external identity provider.\nThe contents of this string depend on the specified authProvider.\nFor a user with \"authProvider\" as \"local\", \"authID\" is set to the value of \"email\".\nFor a user with \"authProvider\" as \"ldap\", \"authID\" is set to its Distinguished Name (DN) from the LDAP server.",
            "type": "string",
            "example": "HteLK3hk28sdbDLKHReB"
          },
          "authProvider": {
            "description": "JSON string indicating the context of the idAuth identifier.\nDefined values are:\n* \"cloud-central\" - User authentication comes from the NetApp Cloud Central service\n* \"local\" - User authentication comes from the local user/password store\n* \"ldap\" - User authentication comes from an external LDAP server\nIn Astra Control Center, all users are required to have a value of \"local\", or \"ldap\". If a value is not specified, a default value of \"local\" is chosen.\nIn Astra Control Service, \"authProvider\" as \"local\", or \"ldap\" is not supported. If a value is not specified, it will default to \"cloud-central\".",
            "type": "string",
            "enum": [
              "cloud-central",
              "local",
              "ldap"
            ],
            "example": "cloud-central"
          },
          "firstName": {
            "description": "JSON string containing a user-specified long form first name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "John"
          },
          "lastName": {
            "description": "JSON string containing a user-specified long-form last name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "Doe"
          },
          "companyName": {
            "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "NetApp, Inc."
          },
          "email": {
            "description": "JSON strings containing a user-specified email address.",
            "type": "string",
            "example": "jdoe@example.com"
          },
          "phone": {
            "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.",
            "type": "string",
            "example": "408-555-22222"
          },
          "postalAddress": {
            "description": "JSON object containing a collection of fields that specifies an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained fields will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and so on.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "sendWelcomeEmail": {
            "description": "JSON string indicating whether a welcome email will be sent after validation. If not specified on create, the value will be set to \"true\" for ACS and \"false\" for Astra Control Center.\nDefined values are:\n* \"true\" - A welcome email will be sent; default value on create\n* \"false\" - A welcome email will not be sent\nFor a user with \"authProvider\" as \"local\" or \"ldap\", this value is ignored and is set to \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "enableTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the user was last enabled.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "lastActTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the identity API was last invoked on behalf of this user. (Note: This is expensive.)\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "user_1.2_put_request_body": {
        "type": "object",
        "required": [
          "type",
          "version"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-user\"",
            "type": "string",
            "enum": [
              "application/astra-user"
            ],
            "example": "application/astra-user"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "5bad8e04-e2fd-5c43-98d7-300580993f49"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the user.\nDefined values are:\n* \"pending\" - The user account is in the process of being created. The user can only read and modify the user resource (default value).  \n* This state is not valid for a user with \"authProvider\" as \"local\"\n* \"active\" - The user account is operational (The user can log in if the account setting \"isEnabled\" is \"true\").  \n* This is the default value for a user with \"authProvider\" as \"local\"\n* \"suspended\" - The user account is suspended (The user cannot log in regardless of account \"isEnabled\" setting).",
            "type": "string",
            "enum": [
              "pending",
              "active",
              "suspended"
            ],
            "example": "active"
          },
          "isEnabled": {
            "description": "JSON string indicating if the user is allowed to log in.\nDefined values are:\n* \"true\" - The user is allowed to log in; default value on create.\n* \"false\" - The user is not allowed to log in.",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "authID": {
            "description": "JSON string containing the identifier associated with an external identity provider.\nThe contents of this string depend on the specified authProvider.\nFor a user with \"authProvider\" as \"local\", \"authID\" is set to the value of \"email\".\nFor a user with \"authProvider\" as \"ldap\", \"authID\" is set to its Distinguished Name (DN) from the LDAP server.",
            "type": "string",
            "example": "HteLK3hk28sdbDLKHReB"
          },
          "authProvider": {
            "description": "JSON string indicating the context of the idAuth identifier.\nDefined values are:\n* \"cloud-central\" - User authentication comes from the NetApp Cloud Central service\n* \"local\" - User authentication comes from the local user/password store\n* \"ldap\" - User authentication comes from an external LDAP server\nIn Astra Control Center, all users are required to have a value of \"local\", or \"ldap\". If a value is not specified, a default value of \"local\" is chosen.\nIn Astra Control Service, \"authProvider\" as \"local\", or \"ldap\" is not supported. If a value is not specified, it will default to \"cloud-central\".",
            "type": "string",
            "enum": [
              "cloud-central",
              "local",
              "ldap"
            ],
            "example": "cloud-central"
          },
          "firstName": {
            "description": "JSON string containing a user-specified long form first name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "John"
          },
          "lastName": {
            "description": "JSON string containing a user-specified long-form last name.\nDefined values are:\n* Minimum length: 0\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 0,
            "maxLength": 63,
            "example": "Doe"
          },
          "companyName": {
            "description": "JSON string containing the company name associated with the user. If this key does not exist, it indicates that a company name has not been provided.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63\n* This string is internally validated to prevent XSS, Unicode, directory traversal, and SQL-injection attacks",
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "example": "NetApp, Inc."
          },
          "email": {
            "description": "JSON strings containing a user-specified email address.",
            "type": "string",
            "example": "jdoe@example.com"
          },
          "phone": {
            "description": "JSON string containing the phone number of the user. If this key does not exist, it indicates that a phone number has not been provided.",
            "type": "string",
            "example": "408-555-22222"
          },
          "postalAddress": {
            "description": "JSON object containing a collection of fields that specifies an address. If this key does not exist, it indicates that an address has not been provided.\nIf this key exists, all six of the contained fields will be present. If nothing was provided by the user, the string will be empty.",
            "type": "object",
            "required": [
              "addressCountry",
              "addressLocality",
              "addressRegion",
              "postalCode",
              "streetAddress1"
            ],
            "properties": {
              "addressCountry": {
                "description": "JSON string containing the country name or country code associated with the postal address, as specified in ISO 3166 Alpha-2.\nDefined values are:\n* Minimum length: 2\n* Maximum length: 2",
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              },
              "addressLocality": {
                "description": "JSON string containing the locality (for example, city) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "addressRegion": {
                "description": "JSON string containing the region (for example, state) associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "postalCode": {
                "description": "JSON string containing the postal code associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress1": {
                "description": "JSON string containing the street address associated with the postal address.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              },
              "streetAddress2": {
                "description": "JSON string containing optional ancillary street address information, post office box, and so on.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 63",
                "type": "string",
                "minLength": 1,
                "maxLength": 63
              }
            },
            "additionalProperties": false
          },
          "sendWelcomeEmail": {
            "description": "JSON string indicating whether a welcome email will be sent after validation. If not specified on create, the value will be set to \"true\" for ACS and \"false\" for Astra Control Center.\nDefined values are:\n* \"true\" - A welcome email will be sent; default value on create\n* \"false\" - A welcome email will not be sent\nFor a user with \"authProvider\" as \"local\" or \"ldap\", this value is ignored and is set to \"false\".",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "enableTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the user was last enabled.\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "lastActTimestamp": {
            "description": "JSON string containing an ISO-8601 formatted timestamp indicating when the identity API was last invoked on behalf of this user. (Note: This is expensive.)\nDefined values are:\n* Conforms to the ISO-8601 Date Time Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_time",
            "example": "2020-08-05T14:24:54.128427Z"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema\nIf not specified on create, a metadata object will be created with no labels.\nIf not specified on update, the metadata object's labels, creationTimestamp and createdBy, will be preserved without modification.",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata_update"
          }
        },
        "additionalProperties": false
      },
      "volume_1.2_get_response_body": {
        "type": "object",
        "required": [
          "type",
          "version",
          "id",
          "name",
          "appsUsing",
          "healthStateDetails",
          "metadata"
        ],
        "properties": {
          "type": {
            "description": "Media type of the resource.\nDefined values are:\n* \"application/astra-volume\"",
            "type": "string",
            "enum": [
              "application/astra-volume"
            ],
            "example": "application/astra-volume"
          },
          "version": {
            "description": "Version of the resource.\nDefined values are:\n* \"1.0\"\n* \"1.1\"\n* \"1.2\"",
            "type": "string",
            "enum": [
              "1.2",
              "1.1",
              "1.0"
            ],
            "example": "1.2"
          },
          "id": {
            "description": "Globally unique identifier of the resource.\nDefined values are:\n* Conforms to the UUIDv4 Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "ab5c9fb8-ddba-526f-8bd3-8d5b72cf4f7f"
          },
          "name": {
            "description": "JSON string containing the name of the volume.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "myVolume"
          },
          "state": {
            "description": "JSON string containing a value indicating the operational state of the volume.",
            "type": "string",
            "example": "ready"
          },
          "size": {
            "description": "JSON string containing the size of the volume.",
            "type": "string",
            "example": "512 GiB"
          },
          "used": {
            "description": "JSON number containing the number of bytes of quota used by the provisioned volume.",
            "type": "number",
            "example": 10000000000
          },
          "usedPercentage": {
            "description": "JSON number containing the percentage of volume used.",
            "type": "number",
            "example": 10
          },
          "total": {
            "description": "JSON number containing the total bytes of volumes provisioned.",
            "type": "number",
            "example": 10000000000
          },
          "creationToken": {
            "description": "JSON string containing the creation token of the volume.\nDefined values are:\n* Minimum length: 1\n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "ba7d4e0c-6ae3-4b6e-859d-9463e7ca4b4e"
          },
          "snapshotPossible": {
            "description": "JSON string indicating whether the driver can perform a snapshot of the volume.\nDefined values are:\n* \"true\" - Driver can take a snapshot of the volume\n* \"false\" - Driver cannot take a snapshot of the volume",
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "example": "true"
          },
          "storageClass": {
            "description": "JSON string containing the storage class for the volume.\n* Defined values are:\n \n* Minimum length: 1  \n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "gold"
          },
          "pvcName": {
            "description": "JSON string containing the PersistentVolumeClaim (PVC) name of the volume.\n* Defined values are:\n \n* Minimum length: 1  \n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "myVolume"
          },
          "internalName": {
            "description": "JSON string containing the internal name of the volume on the target storage cluster, if available. This name is obtained from the Kubernetes CSI driver.\n* Defined values are:\n \n* Minimum length: 1  \n* Maximum length: 255",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": "trident_sd234234_23424_897d_876sd65w"
          },
          "appsUsing": {
            "description": "JSON array of JSON strings, each containing the ID of an application that is using the volume.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/type_astra_identifier"
            }
          },
          "storageBackendID": {
            "description": "JSON string containing the ID of the storage backend that provides the volume.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "application/vnd.netapp.astra.storageBackend",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "aad38e4a-bf2c-413c-b363-18f17fe9e773"
          },
          "orchestrator": {
            "description": "JSON string containing the orchestrator for this volume. This will be defined for Astra Data Store volumes.\nDefined values are:\n* \"trident\" - Trident has provisioned this volume\n* \"vasa\" - NetApp VASA Provider has provisioned this volume\n* \"other\" - The volume has been provisioned manually or the orchestrator is not known",
            "type": "string",
            "enum": [
              "trident",
              "vasa",
              "other"
            ],
            "example": "trident"
          },
          "serviceLevel": {
            "description": "JSON string containing the quality of service (QoS) policy defined for this volume at the storage backend level. This will be defined for Astra Data Store volumes.",
            "type": "string",
            "example": "gold"
          },
          "exportPolicy": {
            "description": "JSON string containing the export policy associated with this volume. This will be defined for Astra Data Store volumes.",
            "type": "string",
            "example": "astra-vp-default"
          },
          "nodeId": {
            "description": "JSON string containing the node ID serving the volume. This will be defined for Astra Data Store volumes.\nDefined values are:\n* Conforms to the Astra Identifier Schema",
            "type": "string",
            "$ref": "#/components/schemas/type_astra_identifier",
            "example": "94d16dd2-9beb-4edb-ab58-1a00e9a90052"
          },
          "healthState": {
            "description": "JSON string containing a value indicating the health state of the volume. This will be defined for Astra Data Store volumes.\nDefined values are:\n* \"indeterminate\" - The health of the resource cannot be determined (for example, due to lack of connectivity)\n* \"normal\" - The resource has no known issues and can provide services in accordance with the interface specification\n* \"warning\" - The resource has known issues that do not prevent it providing services in accordance with the interface specification\n* \"critical\" - The resource has known issues that prevent it from providing services in accordance with the interface specification",
            "type": "string",
            "enum": [
              "indeterminate",
              "normal",
              "warning",
              "critical"
            ],
            "example": "normal"
          },
          "healthStateDetails": {
            "description": "JSON array of JSON objects that lists additional details about the current health.\nIf no details are available, this array will be empty.\n* Minimum Items: 0",
            "type": "array",
            "$ref": "#/components/schemas/type_astra_stateDetails"
          },
          "metadata": {
            "description": "Client and service-specified metadata associated with the resource.\nDefined values are:\n* Conforms to the Astra Metadata Schema",
            "type": "object",
            "$ref": "#/components/schemas/type_astra_metadata"
          }
        },
        "additionalProperties": false
      },
      "volume_1.2_list_response_body": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/volume_1.2_get_response_body"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/type_astra_metadata_list"
          }
        }
      },
      "astra_problem_detail_1": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/1"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resource not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource specified in the request URI wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_2": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/2"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Collection not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The collection specified in the request URI wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_3": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/3"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Missing bearer token"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request is missing the required bearer token."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "401"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_4": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/4"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid bearer token"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The bearer token provided is invalid, revoked, or doesn't exist."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "401"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_5": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/5"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid query parameters"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The supplied query parameters are invalid."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidParams": {
            "type": "array",
            "description": "List of invalid query parameters",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid query parameter"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the query parameter is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_6": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/6"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Query parameters not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The supplied query parameters aren't supported for this endpoint."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidParams": {
            "type": "array",
            "description": "List of invalid query parameters",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid query parameter"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the query parameter is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_7": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/7"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid JSON payload"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body is not valid JSON."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_8": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/8"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid JSON resource"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body JSON doesn't conform to the schema."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "schemaValidationFailure": {
            "type": "string",
            "description": "Description of schema validation failure"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_9": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/9"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid JSON resource"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body JSON didn't pass extended validation."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_10": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/10"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "JSON resource conflict"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body JSON contains a field that conflicts with an idempotent value."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_11": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/11"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Operation not permitted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested operation isn't permitted."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_12": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/12"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid headers"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request headers are invalid."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidParams": {
            "type": "array",
            "description": "List of invalid query parameters",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid query parameter"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the query parameter is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_13": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/13"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "User not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The user wasn't found or can't be retrieved."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_14": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/14"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Unauthorized access"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The user isn't enabled."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_15": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/15"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Accounts not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The list of accounts isn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_16": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/16"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Accounts not listed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The list of accounts didn't build."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_17": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/17"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Roles not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested user roles aren't found or can't be retrieved."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_18": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/18"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Account not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The account isn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_19": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/19"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "User already exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The user already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_20": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/20"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Unsupported license type"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The license provided is for an unsupported product type."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_21": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/21"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Evaluation license blocked"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The evaluation license wasn't applied because a paid license is already allocated."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_22": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/22"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Evaluation license replacement blocked"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The evaluation license wasn't replaced because the specified replacement license has a different serial number."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_23": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/23"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "License expired"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The license wasn't applied because the expiration date of the license is before the current date."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_24": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/24"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Service unavailable"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The service is unavailable."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "503"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_25": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/25"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: Expired Astra Control Center license"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested action was blocked because the Astra Control Center license is expired."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_26": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/26"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: No Astra Control Center license"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested action was blocked because no Astra Control Center license exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_27": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/27"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "SMTP setting not configured"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested operation didn't complete because the SMTP setting is not configured."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_28": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/28"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "API specification not loaded"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The system is unable to load the OpenAPI specification or specifications."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_29": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/29"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "API specification not processed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The system is unable to process the OpenAPI specification or specifications."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_30": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/30"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Version not available"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested API version isn't available."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidParams": {
            "type": "array",
            "description": "List of invalid query parameters",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid query parameter"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the query parameter is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_31": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/31"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Schema not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The schema doesn't exist."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidParams": {
            "type": "array",
            "description": "List of invalid query parameters",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid query parameter"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the query parameter is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_32": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/32"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Unsupported content type"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The response can't be returned in the requested format."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "406"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_33": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/33"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid account ID"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified account ID isn't in the appropriate format."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_34": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/34"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Internal server error"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The server was unable to process this request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_35": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/35"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid resource ID"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource ID isn't in the appropriate format."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_36": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/36"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid resource ID"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The license host ID doesn't match the account ID."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_37": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/37"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: AutoSupport collection already in progress"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested action was blocked because another AutoSupport collection is already in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_38": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/38"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Precondition not met"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The conditional headers aren't satisfied."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "412"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_39": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/39"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Credential exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A credential of this type already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_40": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/40"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Communication failed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Communication wasn't made with downstream services."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "502"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_41": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/41"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Service not ready"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Currently, the service can't respond to this request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "503"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_42": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/42"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Insufficient Astra Control Center license capacity"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The Astra Control Center license wasn't applied because the cluster core consumption exceeds the license capacity."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "invalidFields": {
            "type": "array",
            "description": "List of invalid request body fields",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "reason"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the invalid request body field"
                },
                "reason": {
                  "type": "string",
                  "description": "Reason why the request body field is invalid"
                }
              }
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_43": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/43"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: Astra Control Center license capacity exceeded"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested action was blocked because the managed core count exceeds the Astra Control Center license capacity."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_44": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/44"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Kubeconfig exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A credential referencing this cluster already exists. Remove the existing credential for this cluster and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_45": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/45"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified cluster already exists in this cloud. Remove the existing cluster and corresponding credential and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_46": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/46"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_47": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/47"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot operation not allowed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot belongs to a different application."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_48": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/48"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot in use"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot is in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_49": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/49"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot wasn't deleted because of a server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_50": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/50"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backups not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The system can't resolve backups referencing the specified snapshot."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_51": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/51"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot wasn't updated because of a server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_52": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/52"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application referenced by snapshot not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application referenced by the specified snapshot wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_53": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/53"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resources referenced by snapshot not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application resources referenced by the specified snapshot weren't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_54": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/54"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resources referenced by snapshot not recognized"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application resources referenced by the specified snapshot aren't recognized."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_55": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/55"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resources referenced by snapshot not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application resources referenced by the specified snapshot weren't deleted because of a server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_56": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/56"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot wasn't deleted because of a server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_57": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/57"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket already exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A bucket with the same name, provider, and storageAccount or serverURL already exists in this cloud. Remove the existing bucket and corresponding credential and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_58": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/58"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Trident not installed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Trident isn't installed on this cluster. Install a supported version of Trident and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_59": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/59"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Trident version not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The Trident version on this cluster isn't supported. Upgrade the Trident version and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_60": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/60"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Volume snapshot classes missing"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "No volume snapshot classes exist on this cluster. Confirm that volume snapshot CRDs are installed on the cluster, enable VolumeSnapshotClasses for the cluster, and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_61": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/61"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Storage classes missing"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The Trident instance on this cluster doesn't have eligible storage classes. Add eligible storage classes and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_62": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/62"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Trident installation unhealthy"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Trident is installed on this cluster but can't be managed by the Trident operator. Restore Trident to a healthy state and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_63": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/63"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Kubeconfig not valid"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The provided credential can't connect to the cluster. Provide an updated credential and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_64": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/64"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Storage classes not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Storage classes from Trident weren't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_65": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/65"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster GET not performed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster GET call didn't perform the lookup operation on the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_66": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/66"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cloud GET not performed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud GET call didn't perform the lookup operation on the cloud."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_67": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/67"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster modify not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud type doesn't support modifying the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_68": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/68"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Multiple problems encountered"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Multiple problems were encountered when processing the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "problemDetails": {
            "type": "array",
            "description": "List of problems",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/astra_problem_detail_1"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_2"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_3"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_4"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_5"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_6"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_7"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_8"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_9"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_10"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_11"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_12"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_13"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_14"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_15"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_16"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_17"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_18"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_19"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_20"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_21"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_22"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_23"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_24"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_25"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_26"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_27"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_28"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_29"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_30"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_31"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_32"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_33"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_34"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_35"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_36"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_37"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_38"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_39"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_40"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_41"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_42"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_43"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_44"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_45"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_46"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_47"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_48"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_49"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_50"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_51"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_52"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_53"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_54"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_55"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_56"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_57"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_58"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_59"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_60"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_61"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_62"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_63"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_64"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_65"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_66"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_67"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_69"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_70"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_71"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_72"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_73"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_74"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_75"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_76"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_77"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_78"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_79"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_80"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_81"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_82"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_83"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_84"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_85"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_86"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_87"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_88"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_89"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_90"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_91"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_92"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_93"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_94"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_95"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_96"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_97"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_98"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_99"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_100"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_101"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_102"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_103"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_104"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_105"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_106"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_107"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_108"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_109"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_110"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_111"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_112"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_114"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_115"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_116"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_117"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_118"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_119"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_120"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_121"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_122"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_123"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_124"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_125"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_126"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_127"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_128"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_129"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_130"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_131"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_132"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_133"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_134"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_135"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_136"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_137"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_138"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_139"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_140"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_141"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_142"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_143"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_144"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_145"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_146"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_147"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_148"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_149"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_150"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_151"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_152"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_153"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_154"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_155"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_156"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_157"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_158"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_159"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_160"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_161"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_162"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_163"
                }
              ]
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_69": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/69"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Method not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested method isn't supported for the specified resource."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "405"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_70": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/70"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Volume GET failed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The volume GET call lookup operation couldn't complete."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_71": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/71"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Preloaded hook sources read only"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The hook source resource wasn't created, edited, or deleted. Hook source resources with a preloaded value of true are read only."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_72": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/72"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Hook source referenced by execution hook"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The hook source resource wasn't deleted because it is referenced by an execution hook resource."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_73": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/73"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "NetApp execution hooks read only"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The execution hook resource wasn't created, edited, or deleted. Execution hook resources with a hookType of NetApp are read only."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_74": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/74"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified backup wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_75": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/75"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified application wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_76": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/76"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not valid"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot or backup doesn't belong to the specified application."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_77": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/77"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not managed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified application isn't managed."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_78": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/78"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application name not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application name wasn't updated."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_79": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/79"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Missing request header"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't updated because a request header is missing."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_80": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/80"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't updated because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_81": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/81"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Same password supplied"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The supplied password is the same as the current user password."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_82": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/82"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket/host mismatch"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The S3 bucket type doesn't match the S3 server host type."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_83": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/83"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket in use"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The bucket is currently in use by a backup or scheduled backup."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_84": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/84"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket is default bucket"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The bucket is currently set as the default bucket for a cloud."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_85": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/85"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Request body too large"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body is too large."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "413"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_86": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/86"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not retrieved"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't retrieved because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_87": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/87"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Schedule not added"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The schedule wasn't added because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_88": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/88"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Applications not listed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The applications didn't list because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_89": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/89"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot data not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot data wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_90": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/90"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not added"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't added because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_91": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/91"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't deleted because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_92": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/92"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster delete not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud type doesn't support deleting the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "405"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_93": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/93"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster create not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud type doesn't support adding the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "405"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_94": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/94"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not created"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The backup wasn't created because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_95": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/95"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not retrieved"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The backup wasn't retrieved because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_96": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/96"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backups not listed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The backups didn't list because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_97": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/97"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The backup wasn't deleted because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_98": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/98"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not created"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot wasn't created because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_99": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/99"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not retrieved"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot wasn't retrieved because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_100": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/100"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshots not listed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshots didn't list because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_101": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/101"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resources not listed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resources weren't listed because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_102": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/102"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resource not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't updated because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_103": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/103"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resource not retrieved"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't retrieved because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_104": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/104"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resource not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't deleted because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_105": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/105"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Resource not created"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't created because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_106": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/106"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Cluster not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster isn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_107": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/107"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup in progress"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The operation didn't start because a backup is already in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_108": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/108"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The bucket isn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_109": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/109"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Certificate not trusted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The certificate is in an untrusted state due to a data integrity violation. To trust the certificate, apply a new certificate definition."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_110": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/110"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Certificate expired"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The certificate trust state can't be changed because the certificate has expired."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_111": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/111"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not ready"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot is currently unavailable."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_112": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/112"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not ready"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application is currently unavailable."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_113": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/113"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Nested resource not created"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't created because a nested resource couldn't be created."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "problemDetails": {
            "type": "array",
            "description": "List of problems",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/astra_problem_detail_1"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_2"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_3"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_4"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_5"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_6"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_7"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_8"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_9"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_10"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_11"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_12"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_13"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_14"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_15"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_16"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_17"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_18"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_19"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_20"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_21"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_22"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_23"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_24"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_25"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_26"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_27"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_28"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_29"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_30"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_31"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_32"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_33"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_34"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_35"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_36"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_37"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_38"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_39"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_40"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_41"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_42"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_43"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_44"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_45"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_46"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_47"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_48"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_49"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_50"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_51"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_52"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_53"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_54"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_55"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_56"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_57"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_58"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_59"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_60"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_61"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_62"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_63"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_64"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_65"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_66"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_67"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_69"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_70"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_71"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_72"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_73"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_74"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_75"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_76"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_77"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_78"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_79"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_80"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_81"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_82"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_83"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_84"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_85"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_86"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_87"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_88"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_89"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_90"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_91"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_92"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_93"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_94"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_95"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_96"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_97"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_98"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_99"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_100"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_101"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_102"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_103"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_104"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_105"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_106"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_107"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_108"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_109"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_110"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_111"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_112"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_114"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_115"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_116"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_117"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_118"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_119"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_120"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_121"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_122"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_123"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_124"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_125"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_126"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_127"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_128"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_129"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_130"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_131"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_132"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_133"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_134"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_135"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_136"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_137"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_138"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_139"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_140"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_141"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_142"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_143"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_144"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_145"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_146"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_147"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_148"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_149"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_150"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_151"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_152"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_153"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_154"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_155"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_156"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_157"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_158"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_159"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_160"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_161"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_162"
                },
                {
                  "$ref": "#/components/schemas/astra_problem_detail_163"
                }
              ]
            }
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_114": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/114"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Schedule not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The schedule isn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_115": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/115"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "AppMirror not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified AppMirror wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_116": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/116"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "AppMirror ID missing"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The AppMirror ID wasn't provided."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "404"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_117": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/117"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Source app ID invalid"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The AppMirror source app ID is invalid."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_118": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/118"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "AppMirror storage class invalid"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The AppMirror storage class is invalid."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_119": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/119"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not unmanaged"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't unmanaged because it has an active replication relationship."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_120": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/120"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified snapshot wasn't deleted because it is currently in use by a replication relationship."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_121": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/121"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application already exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_122": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/122"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Namespace not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The specified namespace wasn't found."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_123": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/123"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Namespace unavailable"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The namespace is currently unavailable."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_124": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/124"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Namespace removed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The namespace is in state Removed"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_125": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/125"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "AppMirror disabled"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "AppMirror for Astra Control Service is not yet supported."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_126": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/126"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Default bucket not retrieved"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The default bucket wasn't retrieved because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "500"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_127": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/127"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Bucket unavailable"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A bucket wasn't specified and a default bucket isn't configured."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_128": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/128"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup cancellation not allowed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A pending backup can't be canceled."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_129": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/129"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not found in cluster"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Application not found in specified cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_130": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/130"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster is not eligible for snapshots."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_131": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/131"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster is not eligible for backups."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_132": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/132"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Duplicate schedule"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "This schedule already exists for the application."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_133": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/133"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "ONTAP discovery unsuccessful"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "Unable to connect to ONTAP."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_134": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/134"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid YAML payload"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body is not valid YAML."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_135": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/135"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid YAML resource"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The request body YAML doesn't conform to the schema."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          },
          "schemaValidationFailure": {
            "type": "string",
            "description": "Description of schema validation failure"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_136": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/136"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't updated because an application with the same namespace-scoped resource definition already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_137": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/137"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not updated"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't updated because the supplied namespace-scoped resource definition does not match the application's definition."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_138": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/138"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: Namespace limit reached"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested action was blocked because the namespace limit was reached."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_139": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/139"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Storage backend already exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "A storage backend with the same IP already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_140": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/140"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Duplicate cloud name"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud instance was not created because a cloud with the same name already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_141": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/141"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Action blocked: Delete cloud instance"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cloud instance wasn't deleted because there are managed clusters associated with this cloud instance."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_142": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/142"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup or snapshot not deleted"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The backup or snapshot of the application wasn't deleted because the application is restoring."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_143": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/143"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup with the same name exists"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The resource wasn't created because a backup with the same name already exists."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_144": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/144"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup in progress"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The snapshot wasn't deleted because it is currently being used by a backup."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_145": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/145"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not supported without VolumeSnapshotClass"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster isn't eligible for snapshots because a supported VolumeSnapshotClass is not installed on the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_146": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/146"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Creation failed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The managed cluster wasn't created because of an internal server issue."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_147": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/147"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Invalid GVKN specified"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "An invalid GVKN object was specified in the request. GVKN objects cannot be empty and values must conform to the API schema specification."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_148": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/148"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "A snapshot is already in progress"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested operation is not possible because a snapshot is already in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_149": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/149"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Snapshot not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for snapshots."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_150": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/150"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Replication not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for replication."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_151": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/151"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Clone operation not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for a clone operation."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_152": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/152"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "In-place restore not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The requested operation is not possible because a backup is already in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_153": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/153"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Replication policy not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for creating a replication policy."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_154": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/154"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Protection policy not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for creating a protection policy."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_155": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/155"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Selective restore not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for selective restore."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_156": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/156"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Target storage class not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The target storage class specified for the clone/restore operation doesn't exist on the target cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_157": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/157"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Application not unmanaged"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application wasn't unmanaged because a disruptive backup is in progress."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_158": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/158"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Backup not supported without VolumeSnapshotClass"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster isn't eligible for backups because a supported VolumeSnapshotClass isn't installed on the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_159": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/159"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "ONTAP authentication certificate expired"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The ONTAP certificate for authentication has expired."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_160": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/160"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Valid CSI driver not found"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The supported version of Trident or CSI driver is not installed on this cluster. Install a supported version of Trident or another CSI driver and retry the request."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "400"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_161": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/161"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Clone not supported without VolumeSnapshotClass"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The cluster isn't eligible for application clones because a supported VolumeSnapshotClass isn't installed on the cluster."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_162": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/162"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Post-failover execution hooks not supported"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The application isn't eligible for post-failover execution hooks."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "409"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      },
      "astra_problem_detail_163": {
        "type": "object",
        "required": [
          "type",
          "title",
          "detail",
          "status"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "https://astra.netapp.io/problems/163"
            ]
          },
          "title": {
            "type": "string",
            "enum": [
              "Automatically installed evaluation license deletion not allowed"
            ]
          },
          "detail": {
            "type": "string",
            "enum": [
              "The automatically installed evaluation license can't be deleted."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "403"
            ]
          },
          "correlationID": {
            "$ref": "#/components/schemas/type_astra_identifier"
          }
        },
        "additionalProperties": true
      }
    },
    "securitySchemes": {
      "astra_api_token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
